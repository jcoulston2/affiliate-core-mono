{"ast":null,"code":"import { actionTypes } from '../root-actions';\nimport produce from 'immer';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport initialBuildTimeState from '../initialBuildTimeState';\nexport default function buildTimeState(state = initialBuildTimeState, action) {\n  return produce(state, draft => {\n    var _action$brands;\n\n    switch (action.type) {\n      case HYDRATE:\n        {\n          if (!action.payload) return draft;\n          const {\n            buildTimeState: {\n              navigationData,\n              cmsData,\n              productData,\n              productFilters,\n              productSearchValues,\n              brands\n            }\n          } = action.payload;\n          draft.navigationData = navigationData;\n          draft.cmsData = cmsData;\n          draft.productData = productData;\n          draft.productFilters = productFilters;\n          draft.productSearchValues = productSearchValues;\n          draft.brands = brands;\n          return draft;\n        }\n\n      case actionTypes.SET_CMS_DATA:\n        draft.cmsData = action.cmsData;\n        return draft;\n\n      case actionTypes.SET_NAVIGATION_DATA:\n        draft.navigationData = action.navigationData;\n        return draft;\n\n      case actionTypes.SET_PRODUCT_DATA:\n        draft.productData = action.productData;\n        draft.productFilters = action.productFilters;\n        draft.productSearchValues = action.productSearchValues;\n        return draft;\n\n      case actionTypes.SET_BRAND_LIST:\n        draft.brands = ((_action$brands = action.brands) === null || _action$brands === void 0 ? void 0 : _action$brands.brandList) || [];\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/app/reducer/build-time-reducer.js"],"names":["actionTypes","produce","HYDRATE","initialBuildTimeState","buildTimeState","state","action","draft","type","payload","navigationData","cmsData","productData","productFilters","productSearchValues","brands","SET_CMS_DATA","SET_NAVIGATION_DATA","SET_PRODUCT_DATA","SET_BRAND_LIST","brandList"],"mappings":"AACA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAKA,OAAOC,qBAAP,MAAkC,0BAAlC;AAiBA,eAAe,SAASC,cAAT,CACbC,KAAqB,GAAGF,qBADX,EAEbG,MAFa,EAGb;AACA,SAAOL,OAAO,CAAEI,KAAF,EAA2BE,KAAD,IAAmB;AAAA;;AACzD,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKN,OAAL;AAAc;AACZ,cAAI,CAACI,MAAM,CAACG,OAAZ,EAAqB,OAAOF,KAAP;AAErB,gBAAM;AACJH,YAAAA,cAAc,EAAE;AACdM,cAAAA,cADc;AAEdC,cAAAA,OAFc;AAGdC,cAAAA,WAHc;AAIdC,cAAAA,cAJc;AAKdC,cAAAA,mBALc;AAMdC,cAAAA;AANc;AADZ,cASFT,MAAM,CAACG,OATX;AAUAF,UAAAA,KAAK,CAACG,cAAN,GAAuBA,cAAvB;AACAH,UAAAA,KAAK,CAACI,OAAN,GAAgBA,OAAhB;AACAJ,UAAAA,KAAK,CAACK,WAAN,GAAoBA,WAApB;AACAL,UAAAA,KAAK,CAACM,cAAN,GAAuBA,cAAvB;AACAN,UAAAA,KAAK,CAACO,mBAAN,GAA4BA,mBAA5B;AACAP,UAAAA,KAAK,CAACQ,MAAN,GAAeA,MAAf;AACA,iBAAOR,KAAP;AACD;;AAED,WAAKP,WAAW,CAACgB,YAAjB;AACET,QAAAA,KAAK,CAACI,OAAN,GAAgBL,MAAM,CAACK,OAAvB;AACA,eAAOJ,KAAP;;AAEF,WAAKP,WAAW,CAACiB,mBAAjB;AACEV,QAAAA,KAAK,CAACG,cAAN,GAAuBJ,MAAM,CAACI,cAA9B;AACA,eAAOH,KAAP;;AAEF,WAAKP,WAAW,CAACkB,gBAAjB;AACEX,QAAAA,KAAK,CAACK,WAAN,GAAoBN,MAAM,CAACM,WAA3B;AACAL,QAAAA,KAAK,CAACM,cAAN,GAAuBP,MAAM,CAACO,cAA9B;AACAN,QAAAA,KAAK,CAACO,mBAAN,GAA4BR,MAAM,CAACQ,mBAAnC;AACA,eAAOP,KAAP;;AAEF,WAAKP,WAAW,CAACmB,cAAjB;AACEZ,QAAAA,KAAK,CAACQ,MAAN,GAAe,mBAAAT,MAAM,CAACS,MAAP,kEAAeK,SAAf,KAA4B,EAA3C;AACA,eAAOb,KAAP;;AAEF;AACE,eAAOF,KAAP;AA1CJ;AA4CD,GA7Ca,CAAd;AA8CD","sourcesContent":["//@flow\nimport { actionTypes } from '../root-actions';\nimport produce from 'immer';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { type NavigationData, type CmsData } from '../../types/apiQueries';\nimport { type ProductSection, type Filters } from '../../types/product';\nimport { type PredictiveSearch } from '../../types/search';\nimport { type BuildTimeState } from '../../types/appState';\nimport initialBuildTimeState from '../initialBuildTimeState';\n\ntype BuildTimeActions = {\n  type: string,\n  payload?: {\n    buildTimeState: BuildTimeState,\n  },\n  navigationData?: NavigationData,\n  productData?: ProductSection,\n  productFilters?: Filters,\n  productSearchValues?: PredictiveSearch,\n  cmsData?: CmsData,\n  brands: {\n    brandList: Array<string>,\n  },\n};\n\nexport default function buildTimeState(\n  state: BuildTimeState = initialBuildTimeState,\n  action: BuildTimeActions\n) {\n  return produce((state: BuildTimeState), (draft: Object) => {\n    switch (action.type) {\n      case HYDRATE: {\n        if (!action.payload) return draft;\n\n        const {\n          buildTimeState: {\n            navigationData,\n            cmsData,\n            productData,\n            productFilters,\n            productSearchValues,\n            brands,\n          },\n        } = action.payload;\n        draft.navigationData = navigationData;\n        draft.cmsData = cmsData;\n        draft.productData = productData;\n        draft.productFilters = productFilters;\n        draft.productSearchValues = productSearchValues;\n        draft.brands = brands;\n        return draft;\n      }\n\n      case actionTypes.SET_CMS_DATA:\n        draft.cmsData = action.cmsData;\n        return draft;\n\n      case actionTypes.SET_NAVIGATION_DATA:\n        draft.navigationData = action.navigationData;\n        return draft;\n\n      case actionTypes.SET_PRODUCT_DATA:\n        draft.productData = action.productData;\n        draft.productFilters = action.productFilters;\n        draft.productSearchValues = action.productSearchValues;\n        return draft;\n\n      case actionTypes.SET_BRAND_LIST:\n        draft.brands = action.brands?.brandList || [];\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}