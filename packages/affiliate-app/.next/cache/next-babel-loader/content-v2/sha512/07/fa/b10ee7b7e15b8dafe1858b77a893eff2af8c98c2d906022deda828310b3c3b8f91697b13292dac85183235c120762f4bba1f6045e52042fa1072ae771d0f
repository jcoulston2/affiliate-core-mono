{"ast":null,"code":"import { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nexport function* watcherSetWishList() {\n  while (true) {\n    const {\n      product\n    } = yield take(actionTypes.ADD_PRODUCT_TO_WISHLIST);\n    yield put(actions.addProductToWishListSuccess(product));\n  }\n}\nexport function* watcherRemoveWishList() {\n  while (true) {\n    const {\n      productLink\n    } = yield take(actionTypes.REMOVE_PRODUCT_FROM_WISHLIST);\n    yield put(actions.removeProductfromWishListSuccess(productLink));\n  }\n}\nexport default function* rootSaga() {\n  yield all([fork(watcherSetWishList), fork(watcherRemoveWishList)]);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/containers/WishList/saga.js"],"names":["actions","actionTypes","take","put","all","fork","watcherSetWishList","product","ADD_PRODUCT_TO_WISHLIST","addProductToWishListSuccess","watcherRemoveWishList","productLink","REMOVE_PRODUCT_FROM_WISHLIST","removeProductfromWishListSuccess","rootSaga"],"mappings":"AACA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AAGA,OAAO,UAAUC,kBAAV,GAAqC;AAC1C,SAAO,IAAP,EAAa;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAML,IAAI,CAACD,WAAW,CAACO,uBAAb,CAA9B;AACA,UAAML,GAAG,CAACH,OAAO,CAACS,2BAAR,CAAoCF,OAApC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUG,qBAAV,GAAwC;AAC7C,SAAO,IAAP,EAAa;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAkB,MAAMT,IAAI,CAACD,WAAW,CAACW,4BAAb,CAAlC;AACA,UAAMT,GAAG,CAACH,OAAO,CAACa,gCAAR,CAAyCF,WAAzC,CAAD,CAAT;AACD;AACF;AAED,eAAe,UAAUG,QAAV,GAA2B;AACxC,QAAMV,GAAG,CAAC,CAACC,IAAI,CAACC,kBAAD,CAAL,EAA2BD,IAAI,CAACK,qBAAD,CAA/B,CAAD,CAAT;AACD","sourcesContent":["//@flow\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nimport { type Saga } from '@types/redux';\n\nexport function* watcherSetWishList(): Saga {\n  while (true) {\n    const { product } = yield take(actionTypes.ADD_PRODUCT_TO_WISHLIST);\n    yield put(actions.addProductToWishListSuccess(product));\n  }\n}\n\nexport function* watcherRemoveWishList(): Saga {\n  while (true) {\n    const { productLink } = yield take(actionTypes.REMOVE_PRODUCT_FROM_WISHLIST);\n    yield put(actions.removeProductfromWishListSuccess(productLink));\n  }\n}\n\nexport default function* rootSaga(): Saga {\n  yield all([fork(watcherSetWishList), fork(watcherRemoveWishList)]);\n}\n"]},"metadata":{},"sourceType":"module"}