{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { fork, all } from 'redux-saga/effects';\nimport headerSaga from '@containers/Header/saga';\nimport productListingSaga from '@containers/ListingContent/saga';\nimport userSettingsSaga from '@containers/UserSettings/saga';\nimport wishListSaga from '@containers/WishList/saga';\nimport pwaSaga from '@containers/Pwa/saga';\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(headerSaga), fork(productListingSaga), fork(userSettingsSaga), fork(wishListSaga), fork(pwaSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/app/root-sagas.js"],"names":["rootSaga","fork","all","headerSaga","productListingSaga","userSettingsSaga","wishListSaga","pwaSaga"],"mappings":";;oDASiBA,Q;;AARjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,OAAO,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAAC,CACRD,IAAI,CAACE,UAAD,CADI,EAERF,IAAI,CAACG,kBAAD,CAFI,EAGRH,IAAI,CAACI,gBAAD,CAHI,EAIRJ,IAAI,CAACK,YAAD,CAJI,EAKRL,IAAI,CAACM,OAAD,CALI,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//@flow\nimport { fork, all } from 'redux-saga/effects';\nimport headerSaga from '@containers/Header/saga';\nimport productListingSaga from '@containers/ListingContent/saga';\nimport userSettingsSaga from '@containers/UserSettings/saga';\nimport wishListSaga from '@containers/WishList/saga';\nimport pwaSaga from '@containers/Pwa/saga';\nimport { type Saga } from '@types/redux';\n\nexport function* rootSaga(): Saga {\n  yield all([\n    fork(headerSaga),\n    fork(productListingSaga),\n    fork(userSettingsSaga),\n    fork(wishListSaga),\n    fork(pwaSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}