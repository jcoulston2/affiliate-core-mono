{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Navigation/MobileNavigation/MobileNavigation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MobileSubNavContainers from '../MobileSubNavContainers/MobileSubNavContainers';\nimport Grid from '@material-ui/core/Grid';\nimport Logo from '@units/Logo';\nimport Button from '@units/Button';\nimport WishList from '@containers/WishList';\nimport Settings from '@containers/UserSettings';\nimport Search from '@modules/Search';\nimport HamburgerNavigation from '@modules/HamburgerNavigation';\nimport Typography from '@units/Typography';\nimport { Flex, CenterAll, Spacer } from '@styles/CommonStyledComponents';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Copy from '@units/Copy';\nimport Card from '@units/Card';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useCms } from '@hooks';\nimport usePwa from '@containers/Pwa/hook';\nimport { MobileNavigation, MobileDrawer, MobileDrawerContainer, TitleIndicator, Back, NavCard, TopNavIcons } from './styles';\nexport default function Navigation(_ref) {\n  _s();\n\n  var _this = this;\n\n  var navigationData = _ref.navigationData,\n      togglMobileNav = _ref.togglMobileNav,\n      mobileMenuOpen = _ref.mobileMenuOpen,\n      mobileNavStatusBarColor = _ref.mobileNavStatusBarColor,\n      mobileNavStatusBarCopyColor = _ref.mobileNavStatusBarCopyColor,\n      quickFinderCopy = _ref.quickFinderCopy,\n      includeQuickFinderLink = _ref.includeQuickFinderLink,\n      mobileFirstLevelNavLink = _ref.mobileFirstLevelNavLink,\n      mobileNavCardPadding = _ref.mobileNavCardPadding,\n      mobileNavBarBackground = _ref.mobileNavBarBackground,\n      mobileNavBarShadow = _ref.mobileNavBarShadow,\n      setQuickFinderOpen = _ref.setQuickFinderOpen,\n      resetProductFeeds = _ref.resetProductFeeds,\n      rest = _objectWithoutProperties(_ref, [\"navigationData\", \"togglMobileNav\", \"mobileMenuOpen\", \"mobileNavStatusBarColor\", \"mobileNavStatusBarCopyColor\", \"quickFinderCopy\", \"includeQuickFinderLink\", \"mobileFirstLevelNavLink\", \"mobileNavCardPadding\", \"mobileNavBarBackground\", \"mobileNavBarShadow\", \"setQuickFinderOpen\", \"resetProductFeeds\"]);\n\n  var _useCms = useCms('other'),\n      pwaCms = _useCms.pwa;\n\n  var _usePwa = usePwa(),\n      isPwaInitiated = _usePwa.isPwaInitiated,\n      initPwaPrompt = _usePwa.initPwaPrompt;\n\n  var _useState = useState(0),\n      navigationExpandedLevel = _useState[0],\n      setNavigationExpandedLevel = _useState[1];\n\n  var _useState2 = useState(null),\n      mobileNavigationActiveTitleIndex = _useState2[0],\n      setMobileNavigationActiveTitleIndex = _useState2[1];\n\n  var _useState3 = useState({\n    1: null,\n    2: null\n  }),\n      navigationBreadCrumb = _useState3[0],\n      setNavigationBreadCrumb = _useState3[1];\n\n  var handleNavigationBack = function handleNavigationBack() {\n    if (navigationExpandedLevel) {\n      setNavigationExpandedLevel(navigationExpandedLevel - 1);\n    } else {\n      // If on the first level, reset breadcrumbs\n      setNavigationBreadCrumb({\n        1: null,\n        2: null\n      });\n    }\n  };\n\n  var onSearchSubmit = function onSearchSubmit() {\n    togglMobileNav(false);\n    resetProductFeeds();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(MobileNavigation, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    background: mobileNavBarBackground,\n    shadow: mobileNavBarShadow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(CenterAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(HamburgerNavigation, {\n    onClick: togglMobileNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(CenterAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(Search, {\n    isToggleSearch: true,\n    onSubmitCallback: onSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(CenterAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(CenterAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(Settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(CenterAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(WishList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })))), __jsx(MobileDrawer, {\n    anchor: 'left',\n    open: mobileMenuOpen,\n    onClose: function onClose() {\n      return togglMobileNav;\n    },\n    iconCloseClick: togglMobileNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, navigationExpandedLevel > 0 && __jsx(TitleIndicator, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    mobileNavStatusBarColor: mobileNavStatusBarColor,\n    mobileNavStatusBarCopyColor: mobileNavStatusBarCopyColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(Back, {\n    onClick: handleNavigationBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(KeyboardBackspaceIcon, {\n    style: {\n      color: mobileNavStatusBarCopyColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    tag: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, __jsx(Copy, {\n    text: navigationBreadCrumb[navigationExpandedLevel] || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })))), navigationExpandedLevel === 0 && __jsx(TopNavIcons, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, __jsx(Search, {\n    isToggleSearch: true,\n    onSubmitCallback: onSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, __jsx(WishList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    onClick: togglMobileNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, __jsx(ClearIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }))), __jsx(MobileDrawerContainer, {\n    container: true,\n    navigationExpandedLevel: navigationExpandedLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, navigationData.map(function (navItem, index) {\n    return __jsx(MobileSubNavContainers, _extends({}, navItem, rest, {\n      navigationExpandedLevel: navigationExpandedLevel,\n      setNavigationExpandedLevel: setNavigationExpandedLevel,\n      setMobileNavigationActiveTitleIndex: setMobileNavigationActiveTitleIndex,\n      mobileNavigationActiveTitleIndex: mobileNavigationActiveTitleIndex,\n      setNavigationBreadCrumb: setNavigationBreadCrumb,\n      mobileFirstLevelNavLink: mobileFirstLevelNavLink,\n      mobileNavCardPadding: mobileNavCardPadding,\n      togglMobileNav: togglMobileNav,\n      resetProductFeeds: resetProductFeeds\n    }, {\n      titleIndex: index,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }));\n  }), includeQuickFinderLink && navigationExpandedLevel === 0 && __jsx(NavCard, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    padding: \"0px\",\n    disableHover: true,\n    textTransform: \"initial\",\n    onClick: setQuickFinderOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, __jsx(Card, {\n    padding: mobileNavCardPadding,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: mobileFirstLevelNavLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, quickFinderCopy), __jsx(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  })))), __jsx(Spacer, {\n    h: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, isPwaInitiated && __jsx(Button, {\n    textTransform: \"initial\",\n    primary: true,\n    onClick: function onClick() {\n      return initPwaPrompt();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, pwaCms.pwaDownloadableBannerText))))));\n}\n\n_s(Navigation, \"sYDyosDK9UTo4RkR898R/R3GRL0=\", false, function () {\n  return [useCms, usePwa];\n});\n\n_c = Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Navigation/MobileNavigation/MobileNavigation.js"],"names":["React","useState","MobileSubNavContainers","Grid","Logo","Button","WishList","Settings","Search","HamburgerNavigation","Typography","Flex","CenterAll","Spacer","KeyboardBackspaceIcon","Copy","Card","ClearIcon","ChevronRightIcon","useCms","usePwa","MobileNavigation","MobileDrawer","MobileDrawerContainer","TitleIndicator","Back","NavCard","TopNavIcons","Navigation","navigationData","togglMobileNav","mobileMenuOpen","mobileNavStatusBarColor","mobileNavStatusBarCopyColor","quickFinderCopy","includeQuickFinderLink","mobileFirstLevelNavLink","mobileNavCardPadding","mobileNavBarBackground","mobileNavBarShadow","setQuickFinderOpen","resetProductFeeds","rest","pwaCms","pwa","isPwaInitiated","initPwaPrompt","navigationExpandedLevel","setNavigationExpandedLevel","mobileNavigationActiveTitleIndex","setMobileNavigationActiveTitleIndex","navigationBreadCrumb","setNavigationBreadCrumb","handleNavigationBack","onSearchSubmit","color","map","navItem","index","pwaDownloadableBannerText"],"mappings":"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","sourcesContent":["//@flow\nimport React, { useState } from 'react';\nimport { type CmsCopy } from '@types/cms';\nimport { type NavigationData } from '@types/navigationData';\nimport { type CmsResponsiveString } from '@types/cms';\nimport MobileSubNavContainers from '../MobileSubNavContainers/MobileSubNavContainers';\nimport Grid from '@material-ui/core/Grid';\nimport Logo from '@units/Logo';\nimport Button from '@units/Button';\nimport WishList from '@containers/WishList';\nimport Settings from '@containers/UserSettings';\nimport Search from '@modules/Search';\nimport HamburgerNavigation from '@modules/HamburgerNavigation';\nimport Typography from '@units/Typography';\nimport { Flex, CenterAll, Spacer } from '@styles/CommonStyledComponents';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Copy from '@units/Copy';\nimport Card from '@units/Card';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useCms } from '@hooks';\nimport usePwa from '@containers/Pwa/hook';\n\nimport {\n  MobileNavigation,\n  MobileDrawer,\n  MobileDrawerContainer,\n  TitleIndicator,\n  Back,\n  NavCard,\n  TopNavIcons,\n} from './styles';\n\ntype NavigationProps = $Exact<{\n  navigationData: NavigationData,\n  mobileMenuOpen: boolean,\n  mobileNavStatusBarColor: string,\n  mobileNavStatusBarCopyColor: string,\n  quickFinderCopy: string,\n  includeQuickFinderLink: boolean,\n  mobileFirstLevelNavLink: CmsCopy,\n  mobileSecondLevelNavLink: CmsCopy,\n  mobileNavHorizontalLayers: 2 | 3,\n  mobileNavCardPadding: CmsResponsiveString,\n  togglMobileNav: Function,\n  mobileNavBarBackground: string,\n  mobileNavBarShadow: string,\n  setQuickFinderOpen: Function,\n  resetProductFeeds: Function,\n}>;\n\nexport default function Navigation({\n  navigationData,\n  togglMobileNav,\n  mobileMenuOpen,\n  mobileNavStatusBarColor,\n  mobileNavStatusBarCopyColor,\n  quickFinderCopy,\n  includeQuickFinderLink,\n  mobileFirstLevelNavLink,\n  mobileNavCardPadding,\n  mobileNavBarBackground,\n  mobileNavBarShadow,\n  setQuickFinderOpen,\n  resetProductFeeds,\n  ...rest\n}: NavigationProps) {\n  const { pwa: pwaCms } = useCms('other');\n  const { isPwaInitiated, initPwaPrompt } = usePwa();\n  const [navigationExpandedLevel, setNavigationExpandedLevel] = useState(0);\n  const [mobileNavigationActiveTitleIndex, setMobileNavigationActiveTitleIndex] = useState(null);\n  const [navigationBreadCrumb, setNavigationBreadCrumb] = useState({\n    1: null,\n    2: null,\n  });\n  const handleNavigationBack = () => {\n    if (navigationExpandedLevel) {\n      setNavigationExpandedLevel(navigationExpandedLevel - 1);\n    } else {\n      // If on the first level, reset breadcrumbs\n      setNavigationBreadCrumb({ 1: null, 2: null });\n    }\n  };\n\n  const onSearchSubmit = (): void => {\n    togglMobileNav(false);\n    resetProductFeeds();\n  };\n\n  return (\n    <>\n      <MobileNavigation\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        background={mobileNavBarBackground}\n        shadow={mobileNavBarShadow}>\n        <Grid item xs>\n          <CenterAll>\n            <HamburgerNavigation onClick={togglMobileNav} />\n          </CenterAll>\n        </Grid>\n        <Grid item xs>\n          <CenterAll>\n            <Search isToggleSearch onSubmitCallback={onSearchSubmit} />\n          </CenterAll>\n        </Grid>\n        <Grid item xs={5}>\n          <CenterAll>\n            <Logo />\n          </CenterAll>\n        </Grid>\n        <Grid item xs>\n          <CenterAll>\n            <Settings />\n          </CenterAll>\n        </Grid>\n        <Grid item xs>\n          <CenterAll>\n            <WishList />\n          </CenterAll>\n        </Grid>\n      </MobileNavigation>\n\n      <MobileDrawer\n        anchor={'left'}\n        open={mobileMenuOpen}\n        onClose={() => togglMobileNav}\n        iconCloseClick={togglMobileNav}>\n        {navigationExpandedLevel > 0 && (\n          <TitleIndicator\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            mobileNavStatusBarColor={mobileNavStatusBarColor}\n            mobileNavStatusBarCopyColor={mobileNavStatusBarCopyColor}>\n            <Back onClick={handleNavigationBack}>\n              <Flex>\n                <KeyboardBackspaceIcon style={{ color: mobileNavStatusBarCopyColor }} />\n              </Flex>\n            </Back>\n            <Grid item>\n              <Typography tag=\"p\">\n                <Copy text={navigationBreadCrumb[navigationExpandedLevel] || ''} />\n              </Typography>\n            </Grid>\n          </TitleIndicator>\n        )}\n\n        {navigationExpandedLevel === 0 && (\n          <TopNavIcons container justify=\"space-between\" spacing={2}>\n            <Grid item xs container spacing={4}>\n              <Grid item>\n                <Search isToggleSearch onSubmitCallback={onSearchSubmit} />\n              </Grid>\n              <Grid item>\n                <WishList />\n              </Grid>\n            </Grid>\n\n            <Grid item onClick={togglMobileNav}>\n              <ClearIcon fontSize=\"large\" />\n            </Grid>\n          </TopNavIcons>\n        )}\n        <MobileDrawerContainer container navigationExpandedLevel={navigationExpandedLevel}>\n          {navigationData.map((navItem, index) => (\n            <MobileSubNavContainers\n              {...navItem}\n              {...rest}\n              {...{\n                navigationExpandedLevel,\n                setNavigationExpandedLevel,\n                setMobileNavigationActiveTitleIndex,\n                mobileNavigationActiveTitleIndex,\n                setNavigationBreadCrumb,\n                mobileFirstLevelNavLink,\n                mobileNavCardPadding,\n                togglMobileNav,\n                resetProductFeeds,\n              }}\n              titleIndex={index}\n              key={index}\n            />\n          ))}\n          {includeQuickFinderLink && navigationExpandedLevel === 0 && (\n            <NavCard item xs={4}>\n              <Button\n                fullWidth\n                padding=\"0px\"\n                disableHover\n                textTransform=\"initial\"\n                onClick={setQuickFinderOpen}>\n                <Card padding={mobileNavCardPadding} fullWidth>\n                  <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Typography tag=\"h3\" typeStyles={mobileFirstLevelNavLink}>\n                      {quickFinderCopy}\n                    </Typography>\n                    <ChevronRightIcon />\n                  </Grid>\n                </Card>\n              </Button>\n\n              <Spacer h={20} />\n              <Grid>\n                {isPwaInitiated && (\n                  <Button textTransform=\"initial\" primary onClick={() => initPwaPrompt()}>\n                    {pwaCms.pwaDownloadableBannerText}\n                  </Button>\n                )}\n              </Grid>\n            </NavCard>\n          )}\n        </MobileDrawerContainer>\n      </MobileDrawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}