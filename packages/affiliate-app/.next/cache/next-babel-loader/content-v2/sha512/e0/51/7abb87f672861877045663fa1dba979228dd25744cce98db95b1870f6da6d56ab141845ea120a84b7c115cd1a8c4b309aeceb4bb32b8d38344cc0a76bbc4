{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nexport default function useForm(initialValues, validationSchema) {\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState(initialValues);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n\n  const onChangeHandler = key => ({\n    target\n  }) => {\n    setFormValues(state => _objectSpread(_objectSpread({}, state), {}, {\n      [key]: target === null || target === void 0 ? void 0 : target.value\n    }));\n  };\n\n  const getValidationResult = (key, value) => {\n    return validationSchema[key] && validationSchema[key](value);\n  };\n\n  const validate = (key, val) => event => {\n    var _event$target;\n\n    const value = val || (event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value) || formValues[key];\n    const ValidationResult = getValidationResult(key, value);\n\n    if (ValidationResult) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        [key]: ValidationResult\n      }));\n    } else {\n      const {\n        [key]: _omit\n      } = errors,\n            rest = _objectWithoutProperties(errors, [key].map(_toPropertyKey));\n\n      setErrors(rest);\n    }\n  };\n\n  const validateOnSubmit = () => {\n    return Object.keys(formValues).reduce((acc, cur) => {\n      const ValidationResult = getValidationResult(cur, formValues[cur]);\n      return ValidationResult ? _objectSpread(_objectSpread({}, acc), {}, {\n        [cur]: ValidationResult\n      }) : acc;\n    }, {});\n  };\n\n  const submitForm = cb => {\n    const errorResult = validateOnSubmit();\n    setErrors(errorResult);\n\n    if (isEmpty(errorResult)) {\n      cb(formValues);\n    }\n  };\n\n  return {\n    formValues,\n    onChangeHandler,\n    errors,\n    submitForm,\n    validate\n  };\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/hooks/useForm.js"],"names":["useState","isEmpty","useForm","initialValues","validationSchema","formValues","setFormValues","errors","setErrors","onChangeHandler","key","target","state","value","getValidationResult","validate","val","event","ValidationResult","_omit","rest","validateOnSubmit","Object","keys","reduce","acc","cur","submitForm","cb","errorResult"],"mappings":";;;;;;;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAMA,eAAe,SAASC,OAAT,CACbC,aADa,EAEbC,gBAFa,EAGb;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAACG,aAAD,CAA5C;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMS,eAAe,GAClBC,GAAD,IACE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAwB;AACtBL,IAAAA,aAAa,CAAEM,KAAD,oCAAiBA,KAAjB;AAAwB,OAACF,GAAD,GAAOC,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEE;AAAvC,MAAD,CAAb;AACD,GAJL;;AAMA,QAAMC,mBAAmB,GAAG,CAACJ,GAAD,EAAcG,KAAd,KAAsC;AAChE,WAAOT,gBAAgB,CAACM,GAAD,CAAhB,IAAyBN,gBAAgB,CAACM,GAAD,CAAhB,CAAsBG,KAAtB,CAAhC;AACD,GAFD;;AAMA,QAAME,QAAQ,GACZ,CAACL,GAAD,EAAcM,GAAd,KACGC,KAAD,IAAyB;AAAA;;AACvB,UAAMJ,KAAK,GAAGG,GAAG,KAAIC,KAAJ,aAAIA,KAAJ,wCAAIA,KAAK,CAAEN,MAAX,kDAAI,cAAeE,KAAnB,CAAH,IAA+BR,UAAU,CAACK,GAAD,CAAvD;AACA,UAAMQ,gBAAgB,GAAGJ,mBAAmB,CAACJ,GAAD,EAAMG,KAAN,CAA5C;;AAEA,QAAIK,gBAAJ,EAAsB;AACpBV,MAAAA,SAAS,iCACJD,MADI;AAEP,SAACG,GAAD,GAAOQ;AAFA,SAAT;AAID,KALD,MAKO;AACL,YAAM;AAAE,SAACR,GAAD,GAAOS;AAAT,UAA4BZ,MAAlC;AAAA,YAAyBa,IAAzB,4BAAkCb,MAAlC,GAASG,GAAT;;AACAF,MAAAA,SAAS,CAACY,IAAD,CAAT;AACD;AACF,GAfL;;AAiBA,QAAMC,gBAAgB,GAAG,MAAyB;AAChD,WAAOC,MAAM,CAACC,IAAP,CAAYlB,UAAZ,EAAwBmB,MAAxB,CAA+B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,YAAMR,gBAAgB,GAAGJ,mBAAmB,CAACY,GAAD,EAAMrB,UAAU,CAACqB,GAAD,CAAhB,CAA5C;AACA,aAAOR,gBAAgB,mCAAQO,GAAR;AAAa,SAACC,GAAD,GAAOR;AAApB,WAAyCO,GAAhE;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALD;;AAOA,QAAME,UAAU,GAAIC,EAAD,IAAwB;AACzC,UAAMC,WAAW,GAAGR,gBAAgB,EAApC;AACAb,IAAAA,SAAS,CAACqB,WAAD,CAAT;;AAEA,QAAI5B,OAAO,CAAC4B,WAAD,CAAX,EAA0B;AACxBD,MAAAA,EAAE,CAACvB,UAAD,CAAF;AACD;AACF,GAPD;;AASA,SAAO;AAAEA,IAAAA,UAAF;AAAcI,IAAAA,eAAd;AAA+BF,IAAAA,MAA/B;AAAuCoB,IAAAA,UAAvC;AAAmDZ,IAAAA;AAAnD,GAAP;AACD","sourcesContent":["//@flow\nimport { useState } from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\n\n\n\n\nexport default function useForm(\n  initialValues: { [string]: any },\n  validationSchema: { [string]: Function }\n) {\n  const [formValues, setFormValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const onChangeHandler =\n    (key: string) =>\n      ({ target }: Object) => {\n        setFormValues((state) => ({ ...state, [key]: target?.value }));\n      };\n\n  const getValidationResult = (key: string, value: any): ?string => {\n    return validationSchema[key] && validationSchema[key](value);\n  };\n\n\n\n  const validate =\n    (key: string, val: any) =>\n      (event: Object): void => {\n        const value = val || event?.target?.value || formValues[key];\n        const ValidationResult = getValidationResult(key, value);\n\n        if (ValidationResult) {\n          setErrors({\n            ...errors,\n            [key]: ValidationResult,\n          });\n        } else {\n          const { [key]: _omit, ...rest } = errors;\n          setErrors(rest);\n        }\n      };\n\n  const validateOnSubmit = (): { [string]: any } => {\n    return Object.keys(formValues).reduce((acc, cur) => {\n      const ValidationResult = getValidationResult(cur, formValues[cur]);\n      return ValidationResult ? { ...acc, [cur]: ValidationResult } : acc;\n    }, {});\n  };\n\n  const submitForm = (cb: Function): void => {\n    const errorResult = validateOnSubmit();\n    setErrors(errorResult);\n\n    if (isEmpty(errorResult)) {\n      cb(formValues);\n    }\n  };\n\n  return { formValues, onChangeHandler, errors, submitForm, validate };\n}\n"]},"metadata":{},"sourceType":"module"}