{"ast":null,"code":"import { HOME_PATH, SEARCH_PATH, PLP_PATH } from '@constants';\nimport { getCopy } from '@helpers/cms';\nimport startCase from 'lodash/startCase';\nexport function getPageMeta(route, query, metaContent) {\n  if (route === HOME_PATH) {\n    return metaContent.home;\n  } else if (route.includes(PLP_PATH)) {\n    const [sec, cat] = (query === null || query === void 0 ? void 0 : query.slug) || [];\n    const secCat = `${startCase(sec)} ${startCase(cat)}`;\n    return {\n      pageTitle: getCopy(metaContent.listing.pageTitle, secCat),\n      pageDescription: getCopy(metaContent.listing.pageDescription, secCat)\n    };\n  } else if (route.includes(SEARCH_PATH)) {\n    const searchTerms = Object.values(query).join(' ');\n    return {\n      pageTitle: getCopy(metaContent.search.pageTitle, searchTerms),\n      pageDescription: getCopy(metaContent.search.pageDescription, searchTerms)\n    };\n  } else {\n    for (const meta of metaContent.match) {\n      if (route.includes(meta.path)) {\n        return meta;\n      }\n    }\n  } // fallback\n\n\n  return metaContent.default;\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/document/Head/helper.js"],"names":["HOME_PATH","SEARCH_PATH","PLP_PATH","getCopy","startCase","getPageMeta","route","query","metaContent","home","includes","sec","cat","slug","secCat","pageTitle","listing","pageDescription","searchTerms","Object","values","join","search","meta","match","path","default"],"mappings":"AACA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,YAAjD;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAeA,OAAO,SAASC,WAAT,CACLC,KADK,EAELC,KAFK,EAGLC,WAHK,EAIQ;AACb,MAAIF,KAAK,KAAKN,SAAd,EAAyB;AACvB,WAAOQ,WAAW,CAACC,IAAnB;AACD,GAFD,MAEO,IAAIH,KAAK,CAACI,QAAN,CAAeR,QAAf,CAAJ,EAA8B;AACnC,UAAM,CAACS,GAAD,EAAMC,GAAN,IAAa,CAAAL,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,IAAP,KAAe,EAAlC;AACA,UAAMC,MAAM,GAAI,GAAEV,SAAS,CAACO,GAAD,CAAM,IAAGP,SAAS,CAACQ,GAAD,CAAM,EAAnD;AACA,WAAO;AACLG,MAAAA,SAAS,EAAEZ,OAAO,CAACK,WAAW,CAACQ,OAAZ,CAAoBD,SAArB,EAAgCD,MAAhC,CADb;AAELG,MAAAA,eAAe,EAAEd,OAAO,CAACK,WAAW,CAACQ,OAAZ,CAAoBC,eAArB,EAAsCH,MAAtC;AAFnB,KAAP;AAID,GAPM,MAOA,IAAIR,KAAK,CAACI,QAAN,CAAeT,WAAf,CAAJ,EAAiC;AACtC,UAAMiB,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcb,KAAd,EAAqBc,IAArB,CAA0B,GAA1B,CAApB;AACA,WAAO;AACLN,MAAAA,SAAS,EAAEZ,OAAO,CAACK,WAAW,CAACc,MAAZ,CAAmBP,SAApB,EAA+BG,WAA/B,CADb;AAELD,MAAAA,eAAe,EAAEd,OAAO,CAACK,WAAW,CAACc,MAAZ,CAAmBL,eAApB,EAAqCC,WAArC;AAFnB,KAAP;AAID,GANM,MAMA;AACL,SAAK,MAAMK,IAAX,IAAmBf,WAAW,CAACgB,KAA/B,EAAsC;AACpC,UAAIlB,KAAK,CAACI,QAAN,CAAea,IAAI,CAACE,IAApB,CAAJ,EAA+B;AAC7B,eAAOF,IAAP;AACD;AACF;AACF,GAtBY,CAwBb;;;AACA,SAAOf,WAAW,CAACkB,OAAnB;AACD","sourcesContent":["//@flow\nimport { HOME_PATH, SEARCH_PATH, PLP_PATH } from '@constants';\nimport { getCopy } from '@helpers/cms';\nimport { type Router } from '@types/next';\nimport startCase from 'lodash/startCase';\n\ntype MetaContent = {\n  pageTitle: string,\n  pageDescription: string,\n};\n\ntype MetaContentCms = {\n  [string]: MetaContent,\n  match: Array<{\n    ...MetaContent,\n    path: string,\n  }>,\n};\n\nexport function getPageMeta(\n  route: string,\n  query: Router,\n  metaContent: MetaContentCms\n): MetaContent {\n  if (route === HOME_PATH) {\n    return metaContent.home;\n  } else if (route.includes(PLP_PATH)) {\n    const [sec, cat] = query?.slug || [];\n    const secCat = `${startCase(sec)} ${startCase(cat)}`;\n    return {\n      pageTitle: getCopy(metaContent.listing.pageTitle, secCat),\n      pageDescription: getCopy(metaContent.listing.pageDescription, secCat),\n    };\n  } else if (route.includes(SEARCH_PATH)) {\n    const searchTerms = Object.values(query).join(' ');\n    return {\n      pageTitle: getCopy(metaContent.search.pageTitle, searchTerms),\n      pageDescription: getCopy(metaContent.search.pageDescription, searchTerms),\n    };\n  } else {\n    for (const meta of metaContent.match) {\n      if (route.includes(meta.path)) {\n        return meta;\n      }\n    }\n  }\n\n  // fallback\n  return metaContent.default;\n}\n"]},"metadata":{},"sourceType":"module"}