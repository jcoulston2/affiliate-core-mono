{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_PATH, PLP_PATH, INVALID_FILTER_PATH } from '@constants';\nimport { isStringInt, navigateToPageRefresh } from '@helpers/common';\nimport { getSearchQueryFromUrl } from '@helpers/page';\nimport camelCase from 'lodash/camelCase';\nconst validFilters = ['price-sort', 'price-threshold-low', 'price-threshold-high', 'key-words', 'sale-threshold', 'brands', 'section', 'category'];\nexport function toFilterArray(str) {\n  return str.replace(/\\s/g, '').split('&');\n}\nexport function normalizeFilterValue(value) {\n  if (value.includes(',')) {\n    return value.split(',');\n  } else if (isStringInt(value)) {\n    return parseInt(value);\n  } else {\n    return value;\n  }\n}\nexport function getFilterValues(filterkey, filterValues) {\n  if (filterkey === 'filter' && filterValues) {\n    return toFilterArray(filterValues).reduce((acc, cur) => {\n      let [key, value] = cur.split('=');\n      return validFilters.includes(key) ? _objectSpread(_objectSpread({}, acc), {}, {\n        [camelCase(key)]: normalizeFilterValue(value)\n      }) : acc;\n    }, {});\n  } else if (!filterkey) {\n    return {};\n  } else {\n    throw INVALID_FILTER_PATH;\n  }\n}\nexport function getFilterValuesFromSearchUrl(searchTerms) {\n  return Object.keys(searchTerms).reduce((acc, cur) => {\n    const value = normalizeFilterValue(searchTerms[cur]);\n    return validFilters.includes(cur) ? _objectSpread(_objectSpread({}, acc), {}, {\n      [camelCase(cur)]: value\n    }) : acc;\n  }, {});\n}\nexport function getFiltersFromUrl() {\n  if (true) return null;\n  const [filterMatch] = window.location.href.match(/\\/filter\\/(.*)|\\/params?(.*)/g) || [];\n  const urlFilterValues = filterMatch && filterMatch.replace(/\\/filter\\/|\\/params\\?/, '');\n  return urlFilterValues ? getFilterValues('filter', urlFilterValues) : null;\n}\nexport function getFilterPlpBasePath(router) {\n  const isSearchPage = router.pathname.includes(SEARCH_PATH);\n\n  if (isSearchPage) {\n    return `/${SEARCH_PATH}${getSearchQueryFromUrl(router)}`;\n  } else {\n    const [section, productType] = router.query.slug;\n    return `/${PLP_PATH}/${section}/${productType}/filter/`;\n  }\n}\nexport function pushFilterPlpBasePath(router) {\n  const basePath = getFilterPlpBasePath(router);\n  navigateToPageRefresh(basePath);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/helpers/page/filters.js"],"names":["SEARCH_PATH","PLP_PATH","INVALID_FILTER_PATH","isStringInt","navigateToPageRefresh","getSearchQueryFromUrl","camelCase","validFilters","toFilterArray","str","replace","split","normalizeFilterValue","value","includes","parseInt","getFilterValues","filterkey","filterValues","reduce","acc","cur","key","getFilterValuesFromSearchUrl","searchTerms","Object","keys","getFiltersFromUrl","filterMatch","window","location","href","match","urlFilterValues","getFilterPlpBasePath","router","isSearchPage","pathname","section","productType","query","slug","pushFilterPlpBasePath","basePath"],"mappings":"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","sourcesContent":["//@flow\nimport { SEARCH_PATH, PLP_PATH, INVALID_FILTER_PATH } from '@constants';\nimport { isStringInt, navigateToPageRefresh } from '@helpers/common';\nimport { getSearchQueryFromUrl } from '@helpers/page';\nimport { type Filters } from '@types/product';\nimport { type SearchUrlCase } from '@types/search';\nimport camelCase from 'lodash/camelCase';\nimport { type Router } from '@types/next';\n\ntype SearchAndFilters = {\n  ...SearchUrlCase,\n  ...Filters,\n};\n\nconst validFilters = [\n  'price-sort',\n  'price-threshold-low',\n  'price-threshold-high',\n  'key-words',\n  'sale-threshold',\n  'brands',\n  'section',\n  'category',\n];\n\nexport function toFilterArray(str: string): Array<string> {\n  return str.replace(/\\s/g, '').split('&');\n}\n\nexport function normalizeFilterValue(value: string): string | Array<string> | number {\n  if (value.includes(',')) {\n    return value.split(',');\n  } else if (isStringInt(value)) {\n    return parseInt(value);\n  } else {\n    return value;\n  }\n}\n\nexport function getFilterValues(filterkey: ?'filter', filterValues: ?string): Object {\n  if (filterkey === 'filter' && filterValues) {\n    return toFilterArray(filterValues).reduce((acc, cur) => {\n      let [key, value] = cur.split('=');\n      return validFilters.includes(key)\n        ? { ...acc, [camelCase(key)]: normalizeFilterValue(value) }\n        : acc;\n    }, {});\n  } else if (!filterkey) {\n    return {};\n  } else {\n    throw INVALID_FILTER_PATH;\n  }\n}\n\nexport function getFilterValuesFromSearchUrl(searchTerms: SearchAndFilters): ?Filters {\n  return Object.keys(searchTerms).reduce<Object>((acc, cur) => {\n    const value = normalizeFilterValue(searchTerms[cur]);\n    return validFilters.includes(cur) ? { ...acc, [camelCase(cur)]: value } : acc;\n  }, {});\n}\n\nexport function getFiltersFromUrl(): ?Filters {\n  if (typeof window === 'undefined') return null;\n  const [filterMatch] = window.location.href.match(/\\/filter\\/(.*)|\\/params?(.*)/g) || [];\n  const urlFilterValues = filterMatch && filterMatch.replace(/\\/filter\\/|\\/params\\?/, '');\n  return urlFilterValues ? getFilterValues('filter', urlFilterValues) : null;\n}\n\nexport function getFilterPlpBasePath(router: Router): string {\n  const isSearchPage = router.pathname.includes(SEARCH_PATH);\n  if (isSearchPage) {\n    return `/${SEARCH_PATH}${getSearchQueryFromUrl(router)}`;\n  } else {\n    const [section, productType] = router.query.slug;\n    return `/${PLP_PATH}/${section}/${productType}/filter/`;\n  }\n}\n\nexport function pushFilterPlpBasePath(router: Router): void {\n  const basePath = getFilterPlpBasePath(router);\n  navigateToPageRefresh(basePath);\n}\n"]},"metadata":{},"sourceType":"module"}