{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductDetailView/ProductVariants.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@units/Typography';\nimport styled from 'styled-components';\nimport Copy from '@units/Copy';\nimport Chip from '@units/Chip';\nimport { useTheme } from '@hooks';\nexport const VariantImg = styled(Grid).withConfig({\n  displayName: \"ProductVariants__VariantImg\",\n  componentId: \"o9b6mp-0\"\n})([\"&&{width:\", \"px;height:\", \"px;margin:0 5px;border-radius:50%;overflow:hidden;background:#f3f3f3;}\"], ({\n  dimensions\n}) => (dimensions === null || dimensions === void 0 ? void 0 : dimensions.w) || '20', ({\n  dimensions\n}) => (dimensions === null || dimensions === void 0 ? void 0 : dimensions.h) || '20');\nexport const VariantDataItem = styled.span.withConfig({\n  displayName: \"ProductVariants__VariantDataItem\",\n  componentId: \"o9b6mp-1\"\n})([\"margin:0 5px;opacity:\", \";margin-left:\", \";\"], ({\n  isSoldOut\n}) => isSoldOut ? '0.2' : '1', ({\n  index\n}) => index === 0 ? '0px' : '5px');\nexport const ProductLabelTitle = styled(Grid).withConfig({\n  displayName: \"ProductVariants__ProductLabelTitle\",\n  componentId: \"o9b6mp-2\"\n})([\"&&{margin-right:0.5em;}\"]);\nexport default function ProductVariant({\n  commonLabel,\n  variants,\n  productLink,\n  moreInfoAtStoreCopy,\n  moreInfoAtStoreText\n}) {\n  const {\n    brandThemeColors: {\n      tertiaryColor,\n      secondaryColor\n    }\n  } = useTheme();\n  const hasVariantData = variants.some(({\n    data\n  }) => data === null || data === void 0 ? void 0 : data.length);\n  return __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(ProductLabelTitle, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    tag: \"h4\",\n    typeStyles: commonLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Copy, {\n    text: 'More from the store',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), variants.map(({\n    variantText,\n    data\n  }, index) => (data === null || data === void 0 ? void 0 : data.length) && __jsx(Chip, {\n    key: index,\n    label: variantText,\n    size: \"small\",\n    bgColor: tertiaryColor || secondaryColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), !hasVariantData && ['sizes', 'colours'].map((variantText, index) => __jsx(Chip, {\n    key: index,\n    label: variantText,\n    size: \"small\",\n    bgColor: tertiaryColor || secondaryColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: moreInfoAtStoreCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: productLink,\n    target: \"_blank\",\n    without: true,\n    rel: \"nofollow\",\n    prefetch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Copy, {\n    text: moreInfoAtStoreText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductDetailView/ProductVariants.js"],"names":["React","Grid","Typography","styled","Copy","Chip","useTheme","VariantImg","dimensions","w","h","VariantDataItem","span","isSoldOut","index","ProductLabelTitle","ProductVariant","commonLabel","variants","productLink","moreInfoAtStoreCopy","moreInfoAtStoreText","brandThemeColors","tertiaryColor","secondaryColor","hasVariantData","some","data","length","map","variantText"],"mappings":"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","sourcesContent":["//@flow\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { type CmsCopy } from '@types/cms';\nimport Typography from '@units/Typography';\nimport styled from 'styled-components';\nimport Copy from '@units/Copy';\nimport Chip from '@units/Chip';\nimport { useTheme } from '@hooks';\nimport { type ProductVariant as ProductVariantType } from '../../../types/product';\n\ntype ProductVariantsProps = {\n  productVariantDataCopy: CmsCopy,\n  commonLabel: CmsCopy,\n  productVariantImageDimensions: {\n    mobile: { w: number, h: number },\n    tablet: { w: number, h: number },\n    desktop: { w: number, h: number },\n  },\n  variants: Array<ProductVariantType>,\n  productLink: string,\n  domain: string,\n  moreInfoAtStoreCopy: CmsCopy,\n  moreInfoAtStoreText: string,\n};\n\nexport const VariantImg = styled(Grid)`\n  && {\n    width: ${({ dimensions }) => dimensions?.w || '20'}px;\n    height: ${({ dimensions }) => dimensions?.h || '20'}px;\n    margin: 0 5px;\n    border-radius: 50%;\n    overflow: hidden;\n    background: #f3f3f3;\n  }\n`;\n\nexport const VariantDataItem = styled.span`\n  margin: 0 5px;\n  opacity: ${({ isSoldOut }) => (isSoldOut ? '0.2' : '1')};\n  margin-left: ${({ index }) => (index === 0 ? '0px' : '5px')};\n`;\n\nexport const ProductLabelTitle = styled(Grid)`\n  && {\n    margin-right: 0.5em;\n  }\n`;\n\nexport default function ProductVariant({\n  commonLabel,\n  variants,\n  productLink,\n  moreInfoAtStoreCopy,\n  moreInfoAtStoreText,\n}: ProductVariantsProps) {\n  const {\n    brandThemeColors: { tertiaryColor, secondaryColor },\n  } = useTheme();\n\n  const hasVariantData = variants.some(({ data }) => data?.length);\n\n  return (\n    <Grid item>\n      <Grid container alignItems=\"center\">\n        <ProductLabelTitle item>\n          <Typography tag=\"h4\" typeStyles={commonLabel}>\n            <Copy text={'More from the store'} />\n          </Typography>\n        </ProductLabelTitle>\n\n        {variants.map(\n          ({ variantText, data }, index) =>\n            data?.length && (\n              <Chip\n                key={index}\n                label={variantText}\n                size=\"small\"\n                bgColor={tertiaryColor || secondaryColor}\n              />\n            )\n        )}\n\n        {!hasVariantData &&\n          ['sizes', 'colours'].map((variantText, index) => (\n            <Chip\n              key={index}\n              label={variantText}\n              size=\"small\"\n              bgColor={tertiaryColor || secondaryColor}\n            />\n          ))}\n      </Grid>\n\n      <Grid container alignItems=\"center\">\n        <Typography tag=\"p\" typeStyles={moreInfoAtStoreCopy}>\n          <a href={productLink} target=\"_blank\" without rel=\"nofollow\" prefetch={false}>\n            <Copy text={moreInfoAtStoreText}></Copy>\n          </a>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}