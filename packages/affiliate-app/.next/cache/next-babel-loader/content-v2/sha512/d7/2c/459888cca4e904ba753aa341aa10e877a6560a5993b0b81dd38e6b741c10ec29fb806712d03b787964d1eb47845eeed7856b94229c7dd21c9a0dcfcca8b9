{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/pages/product-listing/[...slug].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport buildRequests from '../../apiUtil/requests/buildRequests';\nimport { getNavigationProps } from '@helpers/page';\nimport ListingContent from '@containers/ListingContent';\nimport { actions } from '../../app/root-actions';\nimport { wrapper } from '../../app/store';\nimport PageSkeleton from '@layouts';\nimport { getFilterValues } from '@helpers/page';\nimport config from '@config';\n\nconst ListingPage = () => {\n  return __jsx(PageSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(ListingContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: config.productListingStaticPaths,\n    fallback: true\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async ({\n  store,\n  params\n}) => {\n  const homeCmsQuery = 'listingContent, productViewContent, marketing';\n  const [section, productType, filterPathKey, filterValues] = params.slug;\n  const filters = getFilterValues(filterPathKey, filterValues);\n  const productCountStart = 0;\n  const productCountEnd = 100;\n  const [navData, cmsData, productData, brandList] = await Promise.all([await buildRequests.getNavigationData(), await buildRequests.getCmsContent(homeCmsQuery), await buildRequests.getProductData(section, productType, productCountStart, productCountEnd, filters), await buildRequests.getBrandList()]);\n  const navigationProps = getNavigationProps(navData);\n  store.dispatch(actions.setNavigationData(navigationProps.affiliateData));\n  store.dispatch(actions.setProductData(productData.categoryData, filters, {}));\n  store.dispatch(actions.setCmsData(cmsData));\n  store.dispatch(actions.setBrandList(brandList));\n});\nexport default ListingPage;","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/pages/product-listing/[...slug].js"],"names":["React","buildRequests","getNavigationProps","ListingContent","actions","wrapper","PageSkeleton","getFilterValues","config","ListingPage","getStaticPaths","paths","productListingStaticPaths","fallback","getStaticProps","store","params","homeCmsQuery","section","productType","filterPathKey","filterValues","slug","filters","productCountStart","productCountEnd","navData","cmsData","productData","brandList","Promise","all","getNavigationData","getCmsContent","getProductData","getBrandList","navigationProps","dispatch","setNavigationData","affiliateData","setProductData","categoryData","setCmsData","setBrandList"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAUA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACxB,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAA6C;AAClD,SAAO;AACLC,IAAAA,KAAK,EAAEH,MAAM,CAACI,yBADT;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,MAAMC,cAAc,GAAGT,OAAO,CAACS,cAAR,CAC5B,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAAqE;AACnE,QAAMC,YAAY,GAAG,+CAArB;AACA,QAAM,CAACC,OAAD,EAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,YAAtC,IAAsDL,MAAM,CAACM,IAAnE;AACA,QAAMC,OAAgB,GAAGhB,eAAe,CAACa,aAAD,EAAgBC,YAAhB,CAAxC;AACA,QAAMG,iBAAiB,GAAG,CAA1B;AACA,QAAMC,eAAe,GAAG,GAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,SAAhC,IAA8D,MAAMC,OAAO,CAACC,GAAR,CAAY,CACpF,MAAM9B,aAAa,CAAC+B,iBAAd,EAD8E,EAEpF,MAAM/B,aAAa,CAACgC,aAAd,CAA4BhB,YAA5B,CAF8E,EAGpF,MAAMhB,aAAa,CAACiC,cAAd,CACJhB,OADI,EAEJC,WAFI,EAGJK,iBAHI,EAIJC,eAJI,EAKJF,OALI,CAH8E,EAUpF,MAAMtB,aAAa,CAACkC,YAAd,EAV8E,CAAZ,CAA1E;AAaA,QAAMC,eAAe,GAAGlC,kBAAkB,CAACwB,OAAD,CAA1C;AACAX,EAAAA,KAAK,CAACsB,QAAN,CAAejC,OAAO,CAACkC,iBAAR,CAA0BF,eAAe,CAACG,aAA1C,CAAf;AACAxB,EAAAA,KAAK,CAACsB,QAAN,CAAejC,OAAO,CAACoC,cAAR,CAAuBZ,WAAW,CAACa,YAAnC,EAAiDlB,OAAjD,EAA0D,EAA1D,CAAf;AACAR,EAAAA,KAAK,CAACsB,QAAN,CAAejC,OAAO,CAACsC,UAAR,CAAmBf,OAAnB,CAAf;AACAZ,EAAAA,KAAK,CAACsB,QAAN,CAAejC,OAAO,CAACuC,YAAR,CAAqBd,SAArB,CAAf;AACD,CAzB2B,CAAvB;AA4BP,eAAepB,WAAf","sourcesContent":["//@flow\nimport React from 'react';\nimport buildRequests from '../../apiUtil/requests/buildRequests';\nimport { getNavigationProps } from '@helpers/page';\nimport ListingContent from '@containers/ListingContent';\nimport { actions } from '../../app/root-actions';\nimport { wrapper } from '../../app/store';\nimport PageSkeleton from '@layouts';\nimport { type StaticPaths } from '@types/next';\nimport { type Filters } from '@types/product';\nimport { type WrapperParamsStaticProps } from '@types/redux';\nimport {\n  type CmsApiQuery,\n  type NavigationApiQuery,\n  type ProductApiQuery,\n  type BrandListApiQuery,\n} from '../../types/apiQueries';\nimport { getFilterValues } from '@helpers/page';\nimport config from '@config';\n\ntype ReqDataPromises = [NavigationApiQuery, CmsApiQuery, ProductApiQuery, BrandListApiQuery];\n\nconst ListingPage = () => {\n  return (\n    <PageSkeleton>\n      <ListingContent />\n    </PageSkeleton>\n  );\n};\n\nexport async function getStaticPaths(): StaticPaths {\n  return {\n    paths: config.productListingStaticPaths,\n    fallback: true,\n  };\n}\n\nexport const getStaticProps = wrapper.getStaticProps(\n  async ({ store, params }: WrapperParamsStaticProps): Promise<any> => {\n    const homeCmsQuery = 'listingContent, productViewContent, marketing';\n    const [section, productType, filterPathKey, filterValues] = params.slug;\n    const filters: Filters = getFilterValues(filterPathKey, filterValues);\n    const productCountStart = 0;\n    const productCountEnd = 100;\n    const [navData, cmsData, productData, brandList]: ReqDataPromises = await Promise.all([\n      await buildRequests.getNavigationData(),\n      await buildRequests.getCmsContent(homeCmsQuery),\n      await buildRequests.getProductData(\n        section,\n        productType,\n        productCountStart,\n        productCountEnd,\n        filters\n      ),\n      await buildRequests.getBrandList(),\n    ]);\n\n    const navigationProps = getNavigationProps(navData);\n    store.dispatch(actions.setNavigationData(navigationProps.affiliateData));\n    store.dispatch(actions.setProductData(productData.categoryData, filters, {}));\n    store.dispatch(actions.setCmsData(cmsData));\n    store.dispatch(actions.setBrandList(brandList));\n  }\n);\n\nexport default ListingPage;\n"]},"metadata":{},"sourceType":"module"}