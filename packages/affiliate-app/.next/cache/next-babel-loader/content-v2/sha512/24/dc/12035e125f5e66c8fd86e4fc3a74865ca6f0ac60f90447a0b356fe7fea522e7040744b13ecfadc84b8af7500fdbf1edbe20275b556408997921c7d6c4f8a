{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nimport initalSettings from './initalState';\nexport function* watcherSetUserSettings() {\n  while (true) {\n    const {\n      user\n    } = yield take(actionTypes.SET_USER_SETTINGS);\n\n    const userWithDefaults = _objectSpread(_objectSpread({}, initalSettings.user), user);\n\n    yield put(actions.setUserSettingsSuccess(userWithDefaults));\n  }\n}\nexport function* watcherSetUserCookies() {\n  while (true) {\n    const {\n      allowCookies\n    } = yield take(actionTypes.SET_USER_COOKIE_POLICY);\n    yield put(actions.setUserCookiePolicySuccess(allowCookies));\n  }\n}\nexport default function* rootSaga() {\n  yield all([fork(watcherSetUserSettings), fork(watcherSetUserCookies)]);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/containers/UserSettings/saga.js"],"names":["actions","actionTypes","take","put","all","fork","initalSettings","watcherSetUserSettings","user","SET_USER_SETTINGS","userWithDefaults","setUserSettingsSuccess","watcherSetUserCookies","allowCookies","SET_USER_COOKIE_POLICY","setUserCookiePolicySuccess","rootSaga"],"mappings":";;;;;;AACA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AAEA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,OAAO,UAAUC,sBAAV,GAAyC;AAC9C,SAAO,IAAP,EAAa;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACD,WAAW,CAACQ,iBAAb,CAA3B;;AACA,UAAMC,gBAAgB,mCAAQJ,cAAc,CAACE,IAAvB,GAAgCA,IAAhC,CAAtB;;AACA,UAAML,GAAG,CAACH,OAAO,CAACW,sBAAR,CAA+BD,gBAA/B,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUE,qBAAV,GAAwC;AAC7C,SAAO,IAAP,EAAa;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAmB,MAAMX,IAAI,CAACD,WAAW,CAACa,sBAAb,CAAnC;AACA,UAAMX,GAAG,CAACH,OAAO,CAACe,0BAAR,CAAmCF,YAAnC,CAAD,CAAT;AACD;AACF;AAED,eAAe,UAAUG,QAAV,GAA2B;AACxC,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACE,sBAAD,CAAL,EAA+BF,IAAI,CAACO,qBAAD,CAAnC,CAAD,CAAT;AACD","sourcesContent":["//@flow\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nimport { type Saga } from '@types/redux';\nimport initalSettings from './initalState';\n\nexport function* watcherSetUserSettings(): Saga {\n  while (true) {\n    const { user } = yield take(actionTypes.SET_USER_SETTINGS);\n    const userWithDefaults = { ...initalSettings.user, ...user };\n    yield put(actions.setUserSettingsSuccess(userWithDefaults));\n  }\n}\n\nexport function* watcherSetUserCookies(): Saga {\n  while (true) {\n    const { allowCookies } = yield take(actionTypes.SET_USER_COOKIE_POLICY);\n    yield put(actions.setUserCookiePolicySuccess(allowCookies));\n  }\n}\n\nexport default function* rootSaga(): Saga {\n  yield all([fork(watcherSetUserSettings), fork(watcherSetUserCookies)]);\n}\n"]},"metadata":{},"sourceType":"module"}