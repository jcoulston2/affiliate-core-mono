{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchPopulateProductView),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchOpenProductView),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watcherClientFilterStatus),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watcherSetLoading),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchFetchProducts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchFetchProductsInSearch),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watcherClearFetchedProducts),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork, call } from 'redux-saga/effects';\nimport clientRequests from '../../apiUtil/requests/clientRequests';\nimport { getFetchedProductsData } from './helper';\nexport function watchPopulateProductView() {\n  var _yield$take, productViewData;\n\n  return _regeneratorRuntime.wrap(function watchPopulateProductView$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!true) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 3;\n          return take(actionTypes.POPULATE_PRODUCT_VIEW);\n\n        case 3:\n          _yield$take = _context.sent;\n          productViewData = _yield$take.productViewData;\n          _context.next = 7;\n          return put(actions.populateProductViewSuccess(productViewData));\n\n        case 7:\n          _context.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function watchOpenProductView() {\n  return _regeneratorRuntime.wrap(function watchOpenProductView$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!true) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 3;\n          return take(actionTypes.OPEN_PRODUCT_DETAIL_VIEW);\n\n        case 3:\n          _context2.next = 5;\n          return put(actions.openProductDetailViewSuccess());\n\n        case 5:\n          _context2.next = 0;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function watcherClientFilterStatus() {\n  var _yield$take2, status;\n\n  return _regeneratorRuntime.wrap(function watcherClientFilterStatus$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!true) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 3;\n          return take(actionTypes.HAS_FILTERS_SET_FROM_CLIENT);\n\n        case 3:\n          _yield$take2 = _context3.sent;\n          status = _yield$take2.status;\n          _context3.next = 7;\n          return put(actions.setClientFilterStatusSuccess(status));\n\n        case 7:\n          _context3.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function watcherSetLoading() {\n  var _yield$take3, status;\n\n  return _regeneratorRuntime.wrap(function watcherSetLoading$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!true) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 3;\n          return take(actionTypes.SET_LOADING);\n\n        case 3:\n          _yield$take3 = _context4.sent;\n          status = _yield$take3.status;\n          _context4.next = 7;\n          return put(actions.setLoadingSuccess(status));\n\n        case 7:\n          _context4.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function watchFetchProducts() {\n  var _yield$take4, section, productType, productCountStart, productCountEnd, filters, incrementExistingProducts, _yield$call, categoryData, _getFetchedProductsDa, fetchedProducts, totalProductsInCategory;\n\n  return _regeneratorRuntime.wrap(function watchFetchProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!true) {\n            _context5.next = 23;\n            break;\n          }\n\n          _context5.next = 3;\n          return take(actionTypes.FETCH_PRODUCTS_LISTING);\n\n        case 3:\n          _yield$take4 = _context5.sent;\n          section = _yield$take4.section;\n          productType = _yield$take4.productType;\n          productCountStart = _yield$take4.productCountStart;\n          productCountEnd = _yield$take4.productCountEnd;\n          filters = _yield$take4.filters;\n          incrementExistingProducts = _yield$take4.incrementExistingProducts;\n          _context5.next = 12;\n          return call(clientRequests.getProductData, section, productType, productCountStart, productCountEnd, filters);\n\n        case 12:\n          _yield$call = _context5.sent;\n          categoryData = _yield$call.categoryData;\n          _getFetchedProductsDa = getFetchedProductsData(categoryData), fetchedProducts = _getFetchedProductsDa.data, totalProductsInCategory = _getFetchedProductsDa.totalProductsInCategory;\n\n          if (fetchedProducts) {\n            _context5.next = 17;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", null);\n\n        case 17:\n          _context5.next = 19;\n          return put(actions.setLoadingSuccess(false));\n\n        case 19:\n          _context5.next = 21;\n          return put(actions.fetchProductsSuccess(fetchedProducts, productCountStart, productCountEnd, incrementExistingProducts, totalProductsInCategory));\n\n        case 21:\n          _context5.next = 0;\n          break;\n\n        case 23:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchFetchProductsInSearch() {\n  var _yield$take5, searchValues, productCountStart, productCountEnd, searchFilters, incrementExistingProducts, _yield$call2, searchData, _getFetchedProductsDa2, fetchedProducts, totalProductsInCategory;\n\n  return _regeneratorRuntime.wrap(function watchFetchProductsInSearch$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!true) {\n            _context6.next = 22;\n            break;\n          }\n\n          _context6.next = 3;\n          return take(actionTypes.FETCH_PRODUCTS_IN_SEARCH);\n\n        case 3:\n          _yield$take5 = _context6.sent;\n          searchValues = _yield$take5.searchValues;\n          productCountStart = _yield$take5.productCountStart;\n          productCountEnd = _yield$take5.productCountEnd;\n          searchFilters = _yield$take5.searchFilters;\n          incrementExistingProducts = _yield$take5.incrementExistingProducts;\n          _context6.next = 11;\n          return call(clientRequests.getSearchData, searchValues, productCountStart, productCountEnd, searchFilters);\n\n        case 11:\n          _yield$call2 = _context6.sent;\n          searchData = _yield$call2.searchData;\n          _getFetchedProductsDa2 = getFetchedProductsData(searchData), fetchedProducts = _getFetchedProductsDa2.data, totalProductsInCategory = _getFetchedProductsDa2.totalProductsInCategory;\n\n          if (fetchedProducts) {\n            _context6.next = 16;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", null);\n\n        case 16:\n          _context6.next = 18;\n          return put(actions.setLoadingSuccess(false));\n\n        case 18:\n          _context6.next = 20;\n          return put(actions.fetchProductsSuccess(fetchedProducts, productCountStart, productCountEnd, incrementExistingProducts, totalProductsInCategory));\n\n        case 20:\n          _context6.next = 0;\n          break;\n\n        case 22:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watcherClearFetchedProducts() {\n  return _regeneratorRuntime.wrap(function watcherClearFetchedProducts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!true) {\n            _context7.next = 7;\n            break;\n          }\n\n          _context7.next = 3;\n          return take(actionTypes.CLEAR_FETCHED_PRODUCTS);\n\n        case 3:\n          _context7.next = 5;\n          return put(actions.clearClientFetchedProductsSuccess());\n\n        case 5:\n          _context7.next = 0;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([fork(watchPopulateProductView), fork(watchOpenProductView), fork(watchFetchProducts), fork(watcherClientFilterStatus), fork(watcherSetLoading), fork(watchFetchProductsInSearch), fork(watcherClearFetchedProducts)]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/containers/ListingContent/saga.js"],"names":["watchPopulateProductView","watchOpenProductView","watcherClientFilterStatus","watcherSetLoading","watchFetchProducts","watchFetchProductsInSearch","watcherClearFetchedProducts","rootSaga","actions","actionTypes","take","put","all","fork","call","clientRequests","getFetchedProductsData","POPULATE_PRODUCT_VIEW","productViewData","populateProductViewSuccess","OPEN_PRODUCT_DETAIL_VIEW","openProductDetailViewSuccess","HAS_FILTERS_SET_FROM_CLIENT","status","setClientFilterStatusSuccess","SET_LOADING","setLoadingSuccess","FETCH_PRODUCTS_LISTING","section","productType","productCountStart","productCountEnd","filters","incrementExistingProducts","getProductData","categoryData","fetchedProducts","data","totalProductsInCategory","fetchProductsSuccess","FETCH_PRODUCTS_IN_SEARCH","searchValues","searchFilters","getSearchData","searchData","CLEAR_FETCHED_PRODUCTS","clearClientFetchedProductsSuccess"],"mappings":"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","sourcesContent":["//@flow\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork, call } from 'redux-saga/effects';\nimport clientRequests from '../../apiUtil/requests/clientRequests';\nimport { getFetchedProductsData } from './helper';\nimport { type Saga } from '@types/redux';\n\nexport function* watchPopulateProductView(): Saga {\n  while (true) {\n    const { productViewData } = yield take(actionTypes.POPULATE_PRODUCT_VIEW);\n    yield put(actions.populateProductViewSuccess(productViewData));\n  }\n}\n\nexport function* watchOpenProductView(): Saga {\n  while (true) {\n    yield take(actionTypes.OPEN_PRODUCT_DETAIL_VIEW);\n    yield put(actions.openProductDetailViewSuccess());\n  }\n}\n\nexport function* watcherClientFilterStatus(): Saga {\n  while (true) {\n    const { status } = yield take(actionTypes.HAS_FILTERS_SET_FROM_CLIENT);\n    yield put(actions.setClientFilterStatusSuccess(status));\n  }\n}\n\nexport function* watcherSetLoading(): Saga {\n  while (true) {\n    const { status } = yield take(actionTypes.SET_LOADING);\n    yield put(actions.setLoadingSuccess(status));\n  }\n}\n\nexport function* watchFetchProducts(): Saga {\n  while (true) {\n    const {\n      section,\n      productType,\n      productCountStart,\n      productCountEnd,\n      filters,\n      incrementExistingProducts,\n    } = yield take(actionTypes.FETCH_PRODUCTS_LISTING);\n\n    const { categoryData } = yield call(\n      clientRequests.getProductData,\n      section,\n      productType,\n      productCountStart,\n      productCountEnd,\n      filters\n    );\n\n    const { data: fetchedProducts, totalProductsInCategory } = getFetchedProductsData(categoryData);\n    if (!fetchedProducts) return null;\n\n    yield put(actions.setLoadingSuccess(false));\n    yield put(\n      actions.fetchProductsSuccess(\n        fetchedProducts,\n        productCountStart,\n        productCountEnd,\n        incrementExistingProducts,\n        totalProductsInCategory\n      )\n    );\n  }\n}\n\nexport function* watchFetchProductsInSearch(): Saga {\n  while (true) {\n    const {\n      searchValues,\n      productCountStart,\n      productCountEnd,\n      searchFilters,\n      incrementExistingProducts,\n    } = yield take(actionTypes.FETCH_PRODUCTS_IN_SEARCH);\n\n    const { searchData } = yield call(\n      clientRequests.getSearchData,\n      searchValues,\n      productCountStart,\n      productCountEnd,\n      searchFilters\n    );\n\n    const { data: fetchedProducts, totalProductsInCategory } = getFetchedProductsData(searchData);\n    if (!fetchedProducts) {\n      return null;\n    }\n\n    yield put(actions.setLoadingSuccess(false));\n    yield put(\n      actions.fetchProductsSuccess(\n        fetchedProducts,\n        productCountStart,\n        productCountEnd,\n        incrementExistingProducts,\n        totalProductsInCategory\n      )\n    );\n  }\n}\n\nexport function* watcherClearFetchedProducts(): Saga {\n  while (true) {\n    yield take(actionTypes.CLEAR_FETCHED_PRODUCTS);\n    yield put(actions.clearClientFetchedProductsSuccess());\n  }\n}\n\nexport default function* rootSaga(): Saga {\n  yield all([\n    fork(watchPopulateProductView),\n    fork(watchOpenProductView),\n    fork(watchFetchProducts),\n    fork(watcherClientFilterStatus),\n    fork(watcherSetLoading),\n    fork(watchFetchProductsInSearch),\n    fork(watcherClearFetchedProducts),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}