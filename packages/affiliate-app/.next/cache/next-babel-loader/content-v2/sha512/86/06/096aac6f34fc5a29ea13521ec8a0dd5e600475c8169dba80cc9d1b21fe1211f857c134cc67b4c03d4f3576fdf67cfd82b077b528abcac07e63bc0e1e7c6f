{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductListing/PorductGridControls.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StickyHeader from '@units/StickyHeader';\nimport { Filters, FilterChips } from '@modules/Filters';\nimport { useTheme, useCms } from '@hooks';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport Image from '@units/Image';\nimport { ChipsContainer, ViewControlContainer } from './styles';\nimport { VIEW_MODE } from '@constants';\nexport default function PorductGridControls(_ref) {\n  _s();\n\n  var setViewMode = _ref.setViewMode,\n      viewMode = _ref.viewMode,\n      filterProps = _ref.filterProps;\n\n  var _useCms = useCms('listingContent'),\n      productFiltersContent = _useCms.productFiltersContent;\n\n  var filterWrapperPadding = productFiltersContent.filterWrapperPadding,\n      filterWrappeMaxWidth = productFiltersContent.filterWrappeMaxWidth,\n      filterWrapperSticky = productFiltersContent.filterWrapperSticky;\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.brandThemeColors;\n\n  var FLICK_MODE = VIEW_MODE.FLICK_MODE,\n      GRID_MODE = VIEW_MODE.GRID_MODE;\n  var isFlickMode = viewMode === FLICK_MODE;\n  return __jsx(StyledCmsGrid, {\n    container: true,\n    padding: filterWrapperPadding,\n    maxWidth: filterWrappeMaxWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(StickyHeader, {\n    background: theme.commonBackground,\n    padding: filterWrapperSticky,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(StyledCmsGrid, {\n    container: true,\n    justify: \"space-between\",\n    maxWidth: filterWrappeMaxWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(ViewControlContainer, {\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Filters, _extends({}, filterProps, filterProps.filterMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))), __jsx(ViewControlContainer, {\n    alignItems: \"center\",\n    onClick: function onClick() {\n      return setViewMode(FLICK_MODE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    icon: \"FlickIcon\",\n    maxWidth: \"40px\",\n    iconSize: \"large\",\n    iconColor: isFlickMode ? theme.tertiaryColor : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), __jsx(ViewControlContainer, {\n    alignItems: \"center\",\n    onClick: function onClick() {\n      return setViewMode(GRID_MODE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    icon: \"GridIcon\",\n    maxWidth: \"40px\",\n    iconSize: \"large\",\n    iconColor: !isFlickMode ? theme.tertiaryColor : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))), __jsx(ChipsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(FilterChips, _extends({\n    scaler: filterProps.scaler\n  }, filterProps.normalizedFilters, filterProps.filterMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(PorductGridControls, \"IOXJ7HKyrmue5cit1p7dt95e0yc=\", false, function () {\n  return [useCms, useTheme];\n});\n\n_c = PorductGridControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"PorductGridControls\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductListing/PorductGridControls.js"],"names":["React","StickyHeader","Filters","FilterChips","useTheme","useCms","StyledCmsGrid","Image","ChipsContainer","ViewControlContainer","VIEW_MODE","PorductGridControls","setViewMode","viewMode","filterProps","productFiltersContent","filterWrapperPadding","filterWrappeMaxWidth","filterWrapperSticky","theme","brandThemeColors","FLICK_MODE","GRID_MODE","isFlickMode","commonBackground","filterMethods","tertiaryColor","scaler","normalizedFilters"],"mappings":"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","sourcesContent":["//@flow\nimport React from 'react';\nimport StickyHeader from '@units/StickyHeader';\nimport { Filters, FilterChips } from '@modules/Filters';\nimport { useTheme, useCms } from '@hooks';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport Image from '@units/Image';\nimport { ChipsContainer, ViewControlContainer } from './styles';\nimport { VIEW_MODE } from '@constants';\nimport {\n  type FiltersData,\n  type FilterMethods,\n  type NormalizeFiltersOutput,\n} from '@modules/Filters';\n\ntype FilterProps = {\n  ...FiltersData,\n  FilterMethods: FilterMethods,\n  normalizedFilters: NormalizeFiltersOutput,\n};\n\ntype PorductGridControlsProps = {\n  setViewMode: Function,\n  viewMode: 'grid-mode' | 'flick-mode',\n  filterProps: FilterProps,\n};\n\nexport default function PorductGridControls({\n  setViewMode,\n  viewMode,\n  filterProps,\n}: PorductGridControlsProps) {\n  const { productFiltersContent } = useCms('listingContent');\n  const { filterWrapperPadding, filterWrappeMaxWidth, filterWrapperSticky } = productFiltersContent;\n  const { brandThemeColors: theme } = useTheme();\n  const { FLICK_MODE, GRID_MODE } = VIEW_MODE;\n  const isFlickMode = viewMode === FLICK_MODE;\n\n  return (\n    <StyledCmsGrid container padding={filterWrapperPadding} maxWidth={filterWrappeMaxWidth}>\n      <StickyHeader background={theme.commonBackground} padding={filterWrapperSticky}>\n        <StyledCmsGrid container justify=\"space-between\" maxWidth={filterWrappeMaxWidth}>\n          <ViewControlContainer alignItems=\"center\">\n            <Filters {...filterProps} {...filterProps.filterMethods} />\n          </ViewControlContainer>\n          <ViewControlContainer alignItems=\"center\" onClick={() => setViewMode(FLICK_MODE)}>\n            <Image\n              icon=\"FlickIcon\"\n              maxWidth=\"40px\"\n              iconSize=\"large\"\n              iconColor={isFlickMode ? theme.tertiaryColor : false}\n            />\n          </ViewControlContainer>\n          <ViewControlContainer alignItems=\"center\" onClick={() => setViewMode(GRID_MODE)}>\n            <Image\n              icon=\"GridIcon\"\n              maxWidth=\"40px\"\n              iconSize=\"large\"\n              iconColor={!isFlickMode ? theme.tertiaryColor : false}\n            />\n          </ViewControlContainer>\n        </StyledCmsGrid>\n      </StickyHeader>\n      <ChipsContainer>\n        <FilterChips\n          scaler={filterProps.scaler}\n          {...filterProps.normalizedFilters}\n          {...filterProps.filterMethods}\n        />\n      </ChipsContainer>\n    </StyledCmsGrid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}