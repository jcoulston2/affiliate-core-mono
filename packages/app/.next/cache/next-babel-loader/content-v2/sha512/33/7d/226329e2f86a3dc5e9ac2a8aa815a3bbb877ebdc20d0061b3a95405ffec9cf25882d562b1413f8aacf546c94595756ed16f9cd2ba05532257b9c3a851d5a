{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/containers/Header/Header.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Navigation from '@modules/Navigation';\nimport BenefitBar from '@modules/BenefitBar';\nimport { connect } from 'react-redux';\nimport { actions as headerActions } from './actions';\nimport { actions as listingActions } from '@containers/ListingContent/actions';\nimport { useCms } from '@hooks';\nimport { HeaderWrapper } from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nvar Header = function Header(_ref) {\n  _s();\n\n  var navigationData = _ref.navigationData,\n      mobileMenuOpen = _ref.mobileMenuOpen,\n      togglMobileNav = _ref.togglMobileNav,\n      resetProductFeeds = _ref.resetProductFeeds,\n      topLevelAppState = _objectWithoutProperties(_ref, [\"navigationData\", \"mobileMenuOpen\", \"togglMobileNav\", \"resetProductFeeds\"]);\n\n  // TODO: start to migrate CMS config further down the component instead of passing props down\n  var _useCms = useCms('header'),\n      benefitBarConfig = _useCms.benefitBar,\n      navigationConfig = _useCms.navigation,\n      headerBarConfig = _useCms.headerBar;\n\n  var muiTheme = useTheme();\n  var headerSeparatorStyle = headerBarConfig.headerSeparatorStyle,\n      headerSeparatorColor = headerBarConfig.headerSeparatorColor;\n  var isDesktop = useMediaQuery(muiTheme.breakpoints.up('lg'));\n\n  var renderAdaptiveNavigation = function renderAdaptiveNavigation(device) {\n    var adaptiveNavigationProp = '';\n    if (device === 'mobile') adaptiveNavigationProp = 'isMobileNavigation';\n    if (device === 'desktop') adaptiveNavigationProp = 'isDesktopNavigation';\n    return __jsx(Navigation, _extends({}, _defineProperty({}, adaptiveNavigationProp, true), {\n      navigationData: navigationData,\n      togglMobileNav: togglMobileNav,\n      mobileMenuOpen: mobileMenuOpen,\n      resetProductFeeds: resetProductFeeds\n    }, navigationConfig, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(HeaderWrapper, _extends({\n    headerSeparatorStyle: headerSeparatorStyle,\n    headerSeparatorColor: headerSeparatorColor\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), benefitBarConfig.showBenefitbar && __jsx(BenefitBar, _extends({}, benefitBarConfig, topLevelAppState, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), renderAdaptiveNavigation(isDesktop ? 'desktop' : 'mobile'));\n};\n\n_s(Header, \"5WqFgpUYauEP0t/fDCT+Yf1WKHs=\", false, function () {\n  return [useCms, useTheme, useMediaQuery];\n});\n\n_c = Header;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    togglMobileNav: function togglMobileNav(flag) {\n      return dispatch(headerActions.togglMobileNav(flag));\n    },\n    resetProductFeeds: function resetProductFeeds() {\n      return dispatch(listingActions.clearClientFetchedProducts());\n    }\n  };\n}\n\nexport default connect(function (state) {\n  var globalAppState = state.globalAppState,\n      headerState = state.headerState,\n      buildTimeState = state.buildTimeState;\n  var clientWidth = globalAppState.clientWidth;\n  var navigationData = buildTimeState.navigationData;\n  var mobileMenuOpen = headerState.mobileMenuOpen;\n  return {\n    clientWidth: clientWidth,\n    navigationData: navigationData,\n    mobileMenuOpen: mobileMenuOpen\n  };\n}, mapDispatchToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/containers/Header/Header.js"],"names":["React","useTheme","Navigation","BenefitBar","connect","actions","headerActions","listingActions","useCms","HeaderWrapper","useMediaQuery","Header","navigationData","mobileMenuOpen","togglMobileNav","resetProductFeeds","topLevelAppState","benefitBarConfig","benefitBar","navigationConfig","navigation","headerBarConfig","headerBar","muiTheme","headerSeparatorStyle","headerSeparatorColor","isDesktop","breakpoints","up","renderAdaptiveNavigation","device","adaptiveNavigationProp","showBenefitbar","mapDispatchToProps","dispatch","flag","clearClientFetchedProducts","state","globalAppState","headerState","buildTimeState","clientWidth"],"mappings":"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","sourcesContent":["//@flow\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Navigation from '@modules/Navigation';\nimport BenefitBar from '@modules/BenefitBar';\nimport { connect } from 'react-redux';\nimport { actions as headerActions } from './actions';\nimport { actions as listingActions } from '@containers/ListingContent/actions';\nimport { useCms } from '@hooks';\nimport { HeaderWrapper } from './styles';\nimport { type GlobalState, type HeaderState } from '@types/appState';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ntype HeaderProps = {\n  togglMobileNav: Function,\n  resetProductFeeds: Function,\n} & HeaderState;\n\nconst Header = ({\n  navigationData,\n  mobileMenuOpen,\n  togglMobileNav,\n  resetProductFeeds,\n  ...topLevelAppState\n}: HeaderProps) => {\n  // TODO: start to migrate CMS config further down the component instead of passing props down\n  const {\n    benefitBar: benefitBarConfig,\n    navigation: navigationConfig,\n    headerBar: headerBarConfig,\n  } = useCms('header');\n\n  const muiTheme = useTheme();\n  const { headerSeparatorStyle, headerSeparatorColor } = headerBarConfig;\n  const isDesktop = useMediaQuery(muiTheme.breakpoints.up('lg'));\n\n  const renderAdaptiveNavigation = (device) => {\n    let adaptiveNavigationProp: string = '';\n    if (device === 'mobile') adaptiveNavigationProp = 'isMobileNavigation';\n    if (device === 'desktop') adaptiveNavigationProp = 'isDesktopNavigation';\n\n    return (\n      <Navigation\n        {...{ [adaptiveNavigationProp]: true }}\n        {...{ navigationData, togglMobileNav, mobileMenuOpen, resetProductFeeds }}\n        {...navigationConfig}\n      />\n    );\n  };\n\n  return (\n    <HeaderWrapper {...{ headerSeparatorStyle, headerSeparatorColor }}>\n      {benefitBarConfig.showBenefitbar && (\n        <BenefitBar {...benefitBarConfig} {...topLevelAppState} />\n      )}\n\n      {renderAdaptiveNavigation(isDesktop ? 'desktop' : 'mobile')}\n    </HeaderWrapper>\n  );\n};\n\nfunction mapDispatchToProps(dispatch): { [string]: Function } {\n  return {\n    togglMobileNav: (flag?: boolean) => dispatch(headerActions.togglMobileNav(flag)),\n    resetProductFeeds: () => dispatch(listingActions.clearClientFetchedProducts()),\n  };\n}\n\nexport default connect((state: $Shape<GlobalState>) => {\n  const { globalAppState, headerState, buildTimeState } = state;\n  const { clientWidth } = globalAppState;\n  const { navigationData } = buildTimeState;\n  const { mobileMenuOpen } = headerState;\n  return {\n    clientWidth,\n    navigationData,\n    mobileMenuOpen,\n  };\n}, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}