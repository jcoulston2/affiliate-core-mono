{"ast":null,"code":"import _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport produce from 'immer';\nimport initalState from './initalState';\nimport { actionTypes } from './actions';\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case actionTypes.POPULATE_PRODUCT_VIEW_SUCCESS:\n        draft.productViewData = action.productViewData;\n        return draft;\n\n      case actionTypes.OPEN_PRODUCT_DETAIL_VIEW_SUCCESS:\n        draft.productViewOpen = !draft.productViewOpen;\n        return draft;\n\n      case actionTypes.HAS_FILTERS_SET_FROM_CLIENT_SUCCESS:\n        draft.hasFiltersSetFromClient = action.status;\n        return draft;\n\n      case actionTypes.SET_LOADING_SUCCESS:\n        draft.loading = action.status;\n        return draft;\n\n      case actionTypes.FETCH_PRODUCTS_LISTING_SUCCESS:\n        draft.fetchedProducts = action.incrementExistingProducts ? [].concat(_toConsumableArray(draft.fetchedProducts), _toConsumableArray(action.products)) : action.products;\n        draft.productCountStart = action.productCountStart;\n        draft.productCountEnd = action.productCountEnd;\n        draft.totalProductsInCategory = action.totalProductsInCategory;\n        return draft;\n\n      case actionTypes.CLEAR_FETCHED_PRODUCTS_SUCCESS:\n        draft.fetchedProducts = [];\n        draft.totalProductsInCategory = 0;\n        draft.hasFiltersSetFromClient = false;\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/containers/ListingContent/reducer.js"],"names":["produce","initalState","actionTypes","reducer","state","action","draft","type","POPULATE_PRODUCT_VIEW_SUCCESS","productViewData","OPEN_PRODUCT_DETAIL_VIEW_SUCCESS","productViewOpen","HAS_FILTERS_SET_FROM_CLIENT_SUCCESS","hasFiltersSetFromClient","status","SET_LOADING_SUCCESS","loading","FETCH_PRODUCTS_LISTING_SUCCESS","fetchedProducts","incrementExistingProducts","products","productCountStart","productCountEnd","totalProductsInCategory","CLEAR_FETCHED_PRODUCTS_SUCCESS"],"mappings":";AACA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AA2BA,eAAe,SAASC,OAAT,GAAgF;AAAA,MAA/DC,KAA+D,uEAA1CH,WAA0C;AAAA,MAA7BI,MAA6B,uEAAJ,EAAI;AAC7F,SAAOL,OAAO,CAACI,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC/B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKL,WAAW,CAACM,6BAAjB;AACEF,QAAAA,KAAK,CAACG,eAAN,GAAwBJ,MAAM,CAACI,eAA/B;AACA,eAAOH,KAAP;;AAEF,WAAKJ,WAAW,CAACQ,gCAAjB;AACEJ,QAAAA,KAAK,CAACK,eAAN,GAAwB,CAACL,KAAK,CAACK,eAA/B;AACA,eAAOL,KAAP;;AAEF,WAAKJ,WAAW,CAACU,mCAAjB;AACEN,QAAAA,KAAK,CAACO,uBAAN,GAAgCR,MAAM,CAACS,MAAvC;AACA,eAAOR,KAAP;;AAEF,WAAKJ,WAAW,CAACa,mBAAjB;AACET,QAAAA,KAAK,CAACU,OAAN,GAAgBX,MAAM,CAACS,MAAvB;AACA,eAAOR,KAAP;;AAEF,WAAKJ,WAAW,CAACe,8BAAjB;AACEX,QAAAA,KAAK,CAACY,eAAN,GAAwBb,MAAM,CAACc,yBAAP,gCAChBb,KAAK,CAACY,eADU,sBACUb,MAAM,CAACe,QADjB,KAEpBf,MAAM,CAACe,QAFX;AAIAd,QAAAA,KAAK,CAACe,iBAAN,GAA0BhB,MAAM,CAACgB,iBAAjC;AACAf,QAAAA,KAAK,CAACgB,eAAN,GAAwBjB,MAAM,CAACiB,eAA/B;AACAhB,QAAAA,KAAK,CAACiB,uBAAN,GAAgClB,MAAM,CAACkB,uBAAvC;AAEA,eAAOjB,KAAP;;AAEF,WAAKJ,WAAW,CAACsB,8BAAjB;AACElB,QAAAA,KAAK,CAACY,eAAN,GAAwB,EAAxB;AACAZ,QAAAA,KAAK,CAACiB,uBAAN,GAAgC,CAAhC;AACAjB,QAAAA,KAAK,CAACO,uBAAN,GAAgC,KAAhC;AACA,eAAOP,KAAP;;AAEF;AACE,eAAOF,KAAP;AAnCJ;AAqCD,GAtCa,CAAd;AAuCD","sourcesContent":["//@flow\nimport produce from 'immer';\nimport initalState from './initalState';\nimport { actionTypes } from './actions';\nimport { type ProductData, type ProductSection } from '../../types/product';\n\ntype InitalState = {\n  initialProductData: ProductSection,\n  fetchedProducts: Array<ProductData>,\n  productViewData: ProductData,\n  productViewOpen: boolean,\n  productCountStart?: number,\n  productCountEnd?: number,\n  hasFiltersSetFromClient?: boolean,\n  totalProductsInCategory: ?number,\n  loading: boolean,\n};\n\ntype ListingActions = {\n  type: string,\n  productViewData: ProductData,\n  productViewOpen: boolean,\n  products: Array<ProductData>,\n  productCountStart: number,\n  productCountEnd: number,\n  status: boolean,\n  incrementExistingProducts: boolean,\n  totalProductsInCategory: ?number,\n};\n\nexport default function reducer(state: InitalState = initalState, action: ListingActions = {}) {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case actionTypes.POPULATE_PRODUCT_VIEW_SUCCESS:\n        draft.productViewData = action.productViewData;\n        return draft;\n\n      case actionTypes.OPEN_PRODUCT_DETAIL_VIEW_SUCCESS:\n        draft.productViewOpen = !draft.productViewOpen;\n        return draft;\n\n      case actionTypes.HAS_FILTERS_SET_FROM_CLIENT_SUCCESS:\n        draft.hasFiltersSetFromClient = action.status;\n        return draft;\n\n      case actionTypes.SET_LOADING_SUCCESS:\n        draft.loading = action.status;\n        return draft;\n\n      case actionTypes.FETCH_PRODUCTS_LISTING_SUCCESS:\n        draft.fetchedProducts = action.incrementExistingProducts\n          ? [...draft.fetchedProducts, ...action.products]\n          : action.products;\n\n        draft.productCountStart = action.productCountStart;\n        draft.productCountEnd = action.productCountEnd;\n        draft.totalProductsInCategory = action.totalProductsInCategory;\n\n        return draft;\n\n      case actionTypes.CLEAR_FETCHED_PRODUCTS_SUCCESS:\n        draft.fetchedProducts = [];\n        draft.totalProductsInCategory = 0;\n        draft.hasFiltersSetFromClient = false;\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}