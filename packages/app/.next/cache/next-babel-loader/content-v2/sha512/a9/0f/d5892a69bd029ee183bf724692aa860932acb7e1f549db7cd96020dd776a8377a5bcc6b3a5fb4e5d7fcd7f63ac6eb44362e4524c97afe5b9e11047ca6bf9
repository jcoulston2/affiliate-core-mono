{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/containers/Header/Header.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Navigation from '@modules/Navigation';\nimport BenefitBar from '@modules/BenefitBar';\nimport { connect } from 'react-redux';\nimport { actions as headerActions } from './actions';\nimport { actions as listingActions } from '@containers/ListingContent/actions';\nimport { useCms } from '@hooks';\nimport { HeaderWrapper } from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Header = (_ref) => {\n  let {\n    navigationData,\n    mobileMenuOpen,\n    togglMobileNav,\n    resetProductFeeds\n  } = _ref,\n      topLevelAppState = _objectWithoutProperties(_ref, [\"navigationData\", \"mobileMenuOpen\", \"togglMobileNav\", \"resetProductFeeds\"]);\n\n  // TODO: start to migrate CMS config further down the component instead of passing props down\n  const {\n    benefitBar: benefitBarConfig,\n    navigation: navigationConfig,\n    headerBar: headerBarConfig\n  } = useCms('header');\n  const muiTheme = useTheme();\n  const {\n    headerSeparatorStyle,\n    headerSeparatorColor\n  } = headerBarConfig;\n  const isDesktop = useMediaQuery(muiTheme.breakpoints.up('lg'));\n\n  const renderAdaptiveNavigation = device => {\n    let adaptiveNavigationProp = '';\n    if (device === 'mobile') adaptiveNavigationProp = 'isMobileNavigation';\n    if (device === 'desktop') adaptiveNavigationProp = 'isDesktopNavigation';\n    return __jsx(Navigation, _extends({\n      [adaptiveNavigationProp]: true\n    }, {\n      navigationData,\n      togglMobileNav,\n      mobileMenuOpen,\n      resetProductFeeds\n    }, navigationConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(HeaderWrapper, _extends({\n    headerSeparatorStyle,\n    headerSeparatorColor\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), benefitBarConfig.showBenefitbar && __jsx(BenefitBar, _extends({}, benefitBarConfig, topLevelAppState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), renderAdaptiveNavigation(isDesktop ? 'desktop' : 'mobile'));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    togglMobileNav: flag => dispatch(headerActions.togglMobileNav(flag)),\n    resetProductFeeds: () => dispatch(listingActions.clearClientFetchedProducts())\n  };\n}\n\nexport default connect(state => {\n  const {\n    globalAppState,\n    headerState,\n    buildTimeState\n  } = state;\n  const {\n    clientWidth\n  } = globalAppState;\n  const {\n    navigationData\n  } = buildTimeState;\n  const {\n    mobileMenuOpen\n  } = headerState;\n  return {\n    clientWidth,\n    navigationData,\n    mobileMenuOpen\n  };\n}, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/containers/Header/Header.js"],"names":["React","useTheme","Navigation","BenefitBar","connect","actions","headerActions","listingActions","useCms","HeaderWrapper","useMediaQuery","Header","navigationData","mobileMenuOpen","togglMobileNav","resetProductFeeds","topLevelAppState","benefitBar","benefitBarConfig","navigation","navigationConfig","headerBar","headerBarConfig","muiTheme","headerSeparatorStyle","headerSeparatorColor","isDesktop","breakpoints","up","renderAdaptiveNavigation","device","adaptiveNavigationProp","showBenefitbar","mapDispatchToProps","dispatch","flag","clearClientFetchedProducts","state","globalAppState","headerState","buildTimeState","clientWidth"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyC,WAAzC;AACA,SAASD,OAAO,IAAIE,cAApB,QAA0C,oCAA1C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;;AAOA,MAAMC,MAAM,GAAG,UAMI;AAAA,MANH;AACdC,IAAAA,cADc;AAEdC,IAAAA,cAFc;AAGdC,IAAAA,cAHc;AAIdC,IAAAA;AAJc,GAMG;AAAA,MADdC,gBACc;;AACjB;AACA,QAAM;AACJC,IAAAA,UAAU,EAAEC,gBADR;AAEJC,IAAAA,UAAU,EAAEC,gBAFR;AAGJC,IAAAA,SAAS,EAAEC;AAHP,MAIFd,MAAM,CAAC,QAAD,CAJV;AAMA,QAAMe,QAAQ,GAAGtB,QAAQ,EAAzB;AACA,QAAM;AAAEuB,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAiDH,eAAvD;AACA,QAAMI,SAAS,GAAGhB,aAAa,CAACa,QAAQ,CAACI,WAAT,CAAqBC,EAArB,CAAwB,IAAxB,CAAD,CAA/B;;AAEA,QAAMC,wBAAwB,GAAIC,MAAD,IAAY;AAC3C,QAAIC,sBAA8B,GAAG,EAArC;AACA,QAAID,MAAM,KAAK,QAAf,EAAyBC,sBAAsB,GAAG,oBAAzB;AACzB,QAAID,MAAM,KAAK,SAAf,EAA0BC,sBAAsB,GAAG,qBAAzB;AAE1B,WACE,MAAC,UAAD,WACM;AAAE,OAACA,sBAAD,GAA0B;AAA5B,KADN,EAEM;AAAEnB,MAAAA,cAAF;AAAkBE,MAAAA,cAAlB;AAAkCD,MAAAA,cAAlC;AAAkDE,MAAAA;AAAlD,KAFN,EAGMK,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD,GAZD;;AAcA,SACE,MAAC,aAAD,WAAmB;AAAEI,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGP,gBAAgB,CAACc,cAAjB,IACC,MAAC,UAAD,eAAgBd,gBAAhB,EAAsCF,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKGa,wBAAwB,CAACH,SAAS,GAAG,SAAH,GAAe,QAAzB,CAL3B,CADF;AASD,CAzCD;;AA2CA,SAASO,kBAAT,CAA4BC,QAA5B,EAA8D;AAC5D,SAAO;AACLpB,IAAAA,cAAc,EAAGqB,IAAD,IAAoBD,QAAQ,CAAC5B,aAAa,CAACQ,cAAd,CAA6BqB,IAA7B,CAAD,CADvC;AAELpB,IAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAAC3B,cAAc,CAAC6B,0BAAf,EAAD;AAF5B,GAAP;AAID;;AAED,eAAehC,OAAO,CAAEiC,KAAD,IAAgC;AACrD,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAAkDH,KAAxD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkBH,cAAxB;AACA,QAAM;AAAE1B,IAAAA;AAAF,MAAqB4B,cAA3B;AACA,QAAM;AAAE3B,IAAAA;AAAF,MAAqB0B,WAA3B;AACA,SAAO;AACLE,IAAAA,WADK;AAEL7B,IAAAA,cAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAVqB,EAUnBoB,kBAVmB,CAAP,CAUQtB,MAVR,CAAf","sourcesContent":["//@flow\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Navigation from '@modules/Navigation';\nimport BenefitBar from '@modules/BenefitBar';\nimport { connect } from 'react-redux';\nimport { actions as headerActions } from './actions';\nimport { actions as listingActions } from '@containers/ListingContent/actions';\nimport { useCms } from '@hooks';\nimport { HeaderWrapper } from './styles';\nimport { type GlobalState, type HeaderState } from '@types/appState';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ntype HeaderProps = {\n  togglMobileNav: Function,\n  resetProductFeeds: Function,\n} & HeaderState;\n\nconst Header = ({\n  navigationData,\n  mobileMenuOpen,\n  togglMobileNav,\n  resetProductFeeds,\n  ...topLevelAppState\n}: HeaderProps) => {\n  // TODO: start to migrate CMS config further down the component instead of passing props down\n  const {\n    benefitBar: benefitBarConfig,\n    navigation: navigationConfig,\n    headerBar: headerBarConfig,\n  } = useCms('header');\n\n  const muiTheme = useTheme();\n  const { headerSeparatorStyle, headerSeparatorColor } = headerBarConfig;\n  const isDesktop = useMediaQuery(muiTheme.breakpoints.up('lg'));\n\n  const renderAdaptiveNavigation = (device) => {\n    let adaptiveNavigationProp: string = '';\n    if (device === 'mobile') adaptiveNavigationProp = 'isMobileNavigation';\n    if (device === 'desktop') adaptiveNavigationProp = 'isDesktopNavigation';\n\n    return (\n      <Navigation\n        {...{ [adaptiveNavigationProp]: true }}\n        {...{ navigationData, togglMobileNav, mobileMenuOpen, resetProductFeeds }}\n        {...navigationConfig}\n      />\n    );\n  };\n\n  return (\n    <HeaderWrapper {...{ headerSeparatorStyle, headerSeparatorColor }}>\n      {benefitBarConfig.showBenefitbar && (\n        <BenefitBar {...benefitBarConfig} {...topLevelAppState} />\n      )}\n\n      {renderAdaptiveNavigation(isDesktop ? 'desktop' : 'mobile')}\n    </HeaderWrapper>\n  );\n};\n\nfunction mapDispatchToProps(dispatch): { [string]: Function } {\n  return {\n    togglMobileNav: (flag?: boolean) => dispatch(headerActions.togglMobileNav(flag)),\n    resetProductFeeds: () => dispatch(listingActions.clearClientFetchedProducts()),\n  };\n}\n\nexport default connect((state: $Shape<GlobalState>) => {\n  const { globalAppState, headerState, buildTimeState } = state;\n  const { clientWidth } = globalAppState;\n  const { navigationData } = buildTimeState;\n  const { mobileMenuOpen } = headerState;\n  return {\n    clientWidth,\n    navigationData,\n    mobileMenuOpen,\n  };\n}, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}