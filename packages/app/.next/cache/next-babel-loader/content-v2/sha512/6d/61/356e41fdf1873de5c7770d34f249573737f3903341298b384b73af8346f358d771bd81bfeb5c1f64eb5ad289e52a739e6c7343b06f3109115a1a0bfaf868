{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Header from '@containers/Header/Header';\nimport Footer from '@containers/Footer/Footer';\nimport Cookies from '@containers/Cookies/Cookies';\nimport PageHead from '@document/Head';\nimport Router, { useRouter } from 'next/router';\nimport Loader from '@units/Loader';\nimport { sendGaPageView } from '@helpers/tracking';\nimport { isServer, getLocalStorage } from '@helpers/common';\nimport MarketingSpace from '@modules/MarketingSpace';\nexport default function PageSkeleton(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      routerProgress = _useState[0],\n      setRouterProgress = _useState[1];\n\n  var routerHook = useRouter();\n  Router.events.on('routeChangeStart', function () {\n    return setRouterProgress(true);\n  });\n  Router.events.on('routeChangeComplete', function () {\n    return setRouterProgress(false);\n  });\n  Router.events.on('routeChangeError', function () {\n    return setRouterProgress(false);\n  });\n  var userSettings = !isServer() && getLocalStorage('user-settings');\n  var hasTrackingCookiesEnabled = userSettings && userSettings.allowCookies;\n  useEffect(function () {\n    if (hasTrackingCookiesEnabled) {\n      sendGaPageView();\n    }\n  }, [routerHook.asPath]);\n  return __jsx(React.Fragment, null, __jsx(Loader, {\n    active: routerProgress,\n    useBackdrop: true\n  }), __jsx(\"section\", null, __jsx(PageHead, null), __jsx(Header, null), __jsx(MarketingSpace, null), children, __jsx(Footer, null), __jsx(Cookies, null)));\n}","map":null,"metadata":{},"sourceType":"module"}