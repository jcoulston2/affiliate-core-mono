{"ast":null,"code":"import { GraphQLScalarType } from 'graphql';\nexport const MultiString = new GraphQLScalarType({\n  name: 'MultiString',\n  description: 'Accepts a string or an array of strings',\n  serialize: value => {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        if (typeof item !== 'string') return null;\n      }\n    } else if (typeof value !== 'string') {\n      return null;\n    }\n\n    return value;\n  }\n});\nexport const ObjectScalarType = new GraphQLScalarType({\n  name: 'Object',\n  description: 'Arbitrary object',\n  serialize: value => {\n    return typeof value === 'object' ? value : null;\n  }\n});\nexport const CmsJsonRequired = new GraphQLScalarType({\n  name: 'CmsJsonRequired',\n  description: 'Accepts JSON format',\n  serialize: value => {\n    const cmsKeys = Object.keys(value);\n\n    for (const key of cmsKeys) {\n      if (typeof value[key] !== 'object') return null;\n      if (!Object.keys(value[key]).length) return null;\n    }\n\n    return value;\n  }\n});","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/graphQL/customScalars/customScalars.js"],"names":["GraphQLScalarType","MultiString","name","description","serialize","value","Array","isArray","item","ObjectScalarType","CmsJsonRequired","cmsKeys","Object","keys","key","length"],"mappings":"AACA,SAASA,iBAAT,QAAkC,SAAlC;AAEA,OAAO,MAAMC,WAAW,GAAG,IAAID,iBAAJ,CAAsB;AAC/CE,EAAAA,IAAI,EAAE,aADyC;AAE/CC,EAAAA,WAAW,EAAE,yCAFkC;AAG/CC,EAAAA,SAAS,EAAGC,KAAD,IAAgB;AACzB,QAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,WAAK,MAAMG,IAAX,IAAmBH,KAAnB,EAA0B;AACxB,YAAI,OAAOG,IAAP,KAAgB,QAApB,EAA8B,OAAO,IAAP;AAC/B;AACF,KAJD,MAIO,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AACpC,aAAO,IAAP;AACD;;AAED,WAAOA,KAAP;AACD;AAb8C,CAAtB,CAApB;AAgBP,OAAO,MAAMI,gBAAgB,GAAG,IAAIT,iBAAJ,CAAsB;AACpDE,EAAAA,IAAI,EAAE,QAD8C;AAEpDC,EAAAA,WAAW,EAAE,kBAFuC;AAGpDC,EAAAA,SAAS,EAAGC,KAAD,IAAgB;AACzB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,IAA3C;AACD;AALmD,CAAtB,CAAzB;AAQP,OAAO,MAAMK,eAAe,GAAG,IAAIV,iBAAJ,CAAsB;AACnDE,EAAAA,IAAI,EAAE,iBAD6C;AAEnDC,EAAAA,WAAW,EAAE,qBAFsC;AAGnDC,EAAAA,SAAS,EAAGC,KAAD,IAAgB;AACzB,UAAMM,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAAhB;;AACA,SAAK,MAAMS,GAAX,IAAkBH,OAAlB,EAA2B;AACzB,UAAI,OAAON,KAAK,CAACS,GAAD,CAAZ,KAAsB,QAA1B,EAAoC,OAAO,IAAP;AACpC,UAAI,CAACF,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,GAAD,CAAjB,EAAwBC,MAA7B,EAAqC,OAAO,IAAP;AACtC;;AACD,WAAOV,KAAP;AACD;AAVkD,CAAtB,CAAxB","sourcesContent":["//@flow\nimport { GraphQLScalarType } from 'graphql';\n\nexport const MultiString = new GraphQLScalarType({\n  name: 'MultiString',\n  description: 'Accepts a string or an array of strings',\n  serialize: (value: any) => {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        if (typeof item !== 'string') return null;\n      }\n    } else if (typeof value !== 'string') {\n      return null;\n    }\n\n    return value;\n  },\n});\n\nexport const ObjectScalarType = new GraphQLScalarType({\n  name: 'Object',\n  description: 'Arbitrary object',\n  serialize: (value: any) => {\n    return typeof value === 'object' ? value : null;\n  },\n});\n\nexport const CmsJsonRequired = new GraphQLScalarType({\n  name: 'CmsJsonRequired',\n  description: 'Accepts JSON format',\n  serialize: (value: any) => {\n    const cmsKeys = Object.keys(value);\n    for (const key of cmsKeys) {\n      if (typeof value[key] !== 'object') return null;\n      if (!Object.keys(value[key]).length) return null;\n    }\n    return value;\n  },\n});\n"]},"metadata":{},"sourceType":"module"}