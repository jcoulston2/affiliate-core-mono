{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/containers/UserSettings/UserSettings.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from './actions';\nimport { UserSettingsModal, UserSettingsConfig } from '@modules/UserSettings';\nimport { useCms } from '@hooks';\n\nfunction UserSettings({\n  user,\n  setUserSettings\n}) {\n  const {\n    userSettingsModal,\n    settingsAvatarIconColor\n  } = useCms('userSettings');\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(UserSettingsModal, _extends({\n    setUserSettings: setUserSettings\n  }, userSettingsModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })), __jsx(UserSettingsConfig, {\n    setUserSettings: setUserSettings,\n    user: user,\n    avatarIconColor: settingsAvatarIconColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUserSettings: settings => dispatch(actions.setUserSettings(settings))\n  };\n}\n\nfunction mapStateToProps(state) {\n  var _state$userSettingsSt;\n\n  return {\n    user: (_state$userSettingsSt = state.userSettingsState) === null || _state$userSettingsSt === void 0 ? void 0 : _state$userSettingsSt.user\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettings);","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/containers/UserSettings/UserSettings.js"],"names":["React","connect","actions","UserSettingsModal","UserSettingsConfig","useCms","UserSettings","user","setUserSettings","userSettingsModal","settingsAvatarIconColor","mapDispatchToProps","dispatch","settings","mapStateToProps","state","userSettingsState"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAGA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,uBAAtD;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAOA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAAoE;AAClE,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAiDL,MAAM,CAAC,cAAD,CAA7D;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,eAAe,EAAEG;AAApC,KAAyDC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,kBAAD;AACE,IAAA,eAAe,EAAED,eADnB;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,eAAe,EAAEG,uBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAwE;AACtE,SAAO;AACLJ,IAAAA,eAAe,EAAGK,QAAD,IAAoBD,QAAQ,CAACV,OAAO,CAACM,eAAR,CAAwBK,QAAxB,CAAD;AADxC,GAAP;AAGD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAqD;AAAA;;AACnD,SAAO;AACLR,IAAAA,IAAI,2BAAEQ,KAAK,CAACC,iBAAR,0DAAE,sBAAyBT;AAD1B,GAAP;AAGD;;AAED,eAAeN,OAAO,CAACa,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CL,YAA7C,CAAf","sourcesContent":["//@flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from './actions';\nimport { type GlobalState } from '../../types/appState';\nimport { type User } from '../../types/user';\nimport { UserSettingsModal, UserSettingsConfig } from '@modules/UserSettings';\nimport { useCms } from '@hooks';\n\ntype UserSettingsProps = {\n  setUserSettings: Function,\n  user: User,\n};\n\nfunction UserSettings({ user, setUserSettings }: UserSettingsProps) {\n  const { userSettingsModal, settingsAvatarIconColor } = useCms('userSettings');\n  return (\n    <div>\n      <UserSettingsModal setUserSettings={setUserSettings} {...userSettingsModal} />\n      <UserSettingsConfig\n        setUserSettings={setUserSettings}\n        user={user}\n        avatarIconColor={settingsAvatarIconColor}\n      />\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch: Function): { [string]: Function } {\n  return {\n    setUserSettings: (settings: User) => dispatch(actions.setUserSettings(settings)),\n  };\n}\n\nfunction mapStateToProps(state: $Shape<GlobalState>) {\n  return {\n    user: state.userSettingsState?.user,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettings);\n"]},"metadata":{},"sourceType":"module"}