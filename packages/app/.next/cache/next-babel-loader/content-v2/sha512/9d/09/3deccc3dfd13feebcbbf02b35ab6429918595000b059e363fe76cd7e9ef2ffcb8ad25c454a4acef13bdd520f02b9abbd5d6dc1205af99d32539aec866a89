{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/CmsContentSplit/CmsContentSplit.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components';\nimport Image from '@units/Image';\nimport bp from '@styles/breakPoints';\nimport isEmpty from 'lodash/isEmpty';\nimport Button from '@units/Button';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport { ContentItemSection } from './styles';\nimport InnerContent from './InnerContent';\nexport default function CmsContentSplit({\n  bgColor,\n  padding,\n  margin,\n  items,\n  cmsEventMappings,\n  separator\n}) {\n  return __jsx(StyledCmsGrid, _extends({\n    padding,\n    bgColor,\n    margin\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, items.map(({\n    contentItems,\n    grid,\n    padding: itemPadding,\n    margin: itemMargin\n  }, outerIndex) => {\n    var _contentItems$items;\n\n    return __jsx(ContentItemSection, _extends({\n      item: true,\n      container: true,\n      key: `outer-${outerIndex}`,\n      separator: separator,\n      padding: itemPadding,\n      margin: itemMargin\n    }, grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), contentItems === null || contentItems === void 0 ? void 0 : (_contentItems$items = contentItems.items) === null || _contentItems$items === void 0 ? void 0 : _contentItems$items.map(({\n      copy,\n      cta,\n      img\n    }, innerIndex) => __jsx(InnerContent, _extends({\n      key: `inner-${innerIndex}`\n    }, {\n      copy,\n      cta,\n      img,\n      grid: contentItems.grid,\n      cmsEventMappings\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }))));\n  })));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/CmsContentSplit/CmsContentSplit.js"],"names":["React","Grid","styled","Image","bp","isEmpty","Button","Typography","Copy","StyledCmsGrid","ContentItemSection","InnerContent","CmsContentSplit","bgColor","padding","margin","items","cmsEventMappings","separator","map","contentItems","grid","itemPadding","itemMargin","outerIndex","copy","cta","img","innerIndex"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,EAAP,MAAe,qBAAf;AAOA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AA6BA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,OADsC;AAEtCC,EAAAA,OAFsC;AAGtCC,EAAAA,MAHsC;AAItCC,EAAAA,KAJsC;AAKtCC,EAAAA,gBALsC;AAMtCC,EAAAA;AANsC,CAAzB,EAOU;AACvB,SACE,MAAC,aAAD,WAAmB;AAAEJ,IAAAA,OAAF;AAAWD,IAAAA,OAAX;AAAoBE,IAAAA;AAApB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACG,GAAN,CACC,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,IAAhB;AAAsBP,IAAAA,OAAO,EAAEQ,WAA/B;AAA4CP,IAAAA,MAAM,EAAEQ;AAApD,GAAD,EAAmEC,UAAnE,KAAkF;AAAA;;AAChF,WACE,MAAC,kBAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,GAAG,EAAG,SAAQA,UAAW,EAH3B;AAIE,MAAA,SAAS,EAAEN,SAJb;AAKE,MAAA,OAAO,EAAEI,WALX;AAME,MAAA,MAAM,EAAEC;AANV,OAOMF,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQGD,YARH,aAQGA,YARH,8CAQGA,YAAY,CAAEJ,KARjB,wDAQG,oBAAqBG,GAArB,CAAyB,CAAC;AAAEM,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,KAAD,EAAqBC,UAArB,KACxB,MAAC,YAAD;AACE,MAAA,GAAG,EAAG,SAAQA,UAAW;AAD3B,OAEM;AAAEH,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,GAAb;AAAkBN,MAAAA,IAAI,EAAED,YAAY,CAACC,IAArC;AAA2CJ,MAAAA;AAA3C,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CARH,CADF;AAiBD,GAnBF,CADH,CADF,CADF;AA2BD","sourcesContent":["//@flow\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components';\nimport Image from '@units/Image';\nimport bp from '@styles/breakPoints';\nimport {\n  type CmsGrid,\n  type CmsResponsiveString,\n  type CmsContentSplitItem,\n  type CmsEventMappings,\n} from '@types/cms';\nimport isEmpty from 'lodash/isEmpty';\nimport Button from '@units/Button';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport { ContentItemSection } from './styles';\nimport InnerContent from './InnerContent';\n\ntype CmsContentSplitProps = {\n  bgColor?: string,\n  cmsEventMappings?: CmsEventMappings,\n  padding?: CmsResponsiveString,\n  margin?: CmsResponsiveString,\n  separator?: {\n    mobile: {\n      color: string,\n      visible: boolean,\n    },\n    tablet: {\n      color: string,\n      visible: boolean,\n    },\n    desktop: {\n      color: string,\n      visible: boolean,\n    },\n  },\n  items: Array<{\n    grid: CmsGrid,\n    padding?: CmsResponsiveString,\n    margin?: CmsResponsiveString,\n    contentItems: CmsContentSplitItem,\n  }>,\n};\n\nexport default function CmsContentSplit({\n  bgColor,\n  padding,\n  margin,\n  items,\n  cmsEventMappings,\n  separator,\n}: CmsContentSplitProps) {\n  return (\n    <StyledCmsGrid {...{ padding, bgColor, margin }}>\n      <Grid container>\n        {items.map(\n          ({ contentItems, grid, padding: itemPadding, margin: itemMargin }, outerIndex) => {\n            return (\n              <ContentItemSection\n                item\n                container\n                key={`outer-${outerIndex}`}\n                separator={separator}\n                padding={itemPadding}\n                margin={itemMargin}\n                {...grid}>\n                {contentItems?.items?.map(({ copy, cta, img }, innerIndex) => (\n                  <InnerContent\n                    key={`inner-${innerIndex}`}\n                    {...{ copy, cta, img, grid: contentItems.grid, cmsEventMappings }}\n                  />\n                ))}\n              </ContentItemSection>\n            );\n          }\n        )}\n      </Grid>\n    </StyledCmsGrid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}