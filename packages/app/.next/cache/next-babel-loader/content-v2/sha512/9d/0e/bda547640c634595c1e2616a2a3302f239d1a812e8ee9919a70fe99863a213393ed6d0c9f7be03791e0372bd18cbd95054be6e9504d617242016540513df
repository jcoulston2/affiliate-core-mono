{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductWishList/ProductWishListAction.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport styled, { keyframes } from 'styled-components';\nimport { useWishListAction } from '@hooks';\nimport { isServer } from '@helpers/common';\nimport { getSavedPoductLinks } from './helper';\nexport const wishListAnimation = keyframes([\"0%{transform:scale(0);}50%{transform:scale(2.2);}100%{transform:scale(0);}\"]);\nconst WishListButton = styled(FavoriteIcon).withConfig({\n  displayName: \"ProductWishListAction__WishListButton\",\n  componentId: \"sc-7nux2b-0\"\n})([\"&&{font-size:\", \";cursor:pointer;&:hover{opacity:0.5;}}\"], props => props.fontSize);\nconst WishListAnimation = styled(FavoriteIcon).withConfig({\n  displayName: \"ProductWishListAction__WishListAnimation\",\n  componentId: \"sc-7nux2b-1\"\n})([\"position:absolute;animation-name:\", \";animation-duration:0.5s;\"], wishListAnimation);\nexport default function ProductWishListAction({\n  product,\n  iconSize\n}) {\n  const {\n    0: wishListAnimate,\n    1: setWishListAnimate\n  } = useState(false);\n  const {\n    0: wishListAdded,\n    1: setWishListAdded\n  } = useState(false);\n  const {\n    link\n  } = product.topLevelData;\n  const savedProducts = useSelector(store => {\n    var _store$wishListState;\n\n    return (_store$wishListState = store.wishListState) === null || _store$wishListState === void 0 ? void 0 : _store$wishListState.savedProducts;\n  });\n  const savedProductLinks = getSavedPoductLinks(savedProducts);\n  const isSaved = savedProductLinks === null || savedProductLinks === void 0 ? void 0 : savedProductLinks.includes(link);\n  const wishListAction = useWishListAction(isSaved ? 'remove' : 'add');\n  const isClient = !isServer();\n\n  const wishListOnClick = () => {\n    if (!wishListAnimate) setWishListAnimate(true);\n    wishListAction(product);\n    setTimeout(() => {\n      setWishListAnimate(false);\n    }, 500);\n  }; // The wishlist or \"saved products\" is persisted in browser local storage. This will not be accessible during build time, this\n  // means we'll have to rely on client side logic to detect whether a product has already been added to the wishlist. We do this\n  // in the following useEffect, ensuring these checks are invoked on the client only\n\n\n  useEffect(() => {\n    if (isClient) setWishListAdded(isSaved);\n  }, [isSaved]);\n  return __jsx(React.Fragment, null, wishListAnimate && __jsx(WishListAnimation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }), __jsx(WishListButton, {\n    isSaved: isSaved,\n    fontSize: iconSize || '32px',\n    onClick: wishListOnClick,\n    color: wishListAdded ? 'primary' : 'inherit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductWishList/ProductWishListAction.js"],"names":["React","useState","useEffect","useSelector","FavoriteIcon","styled","keyframes","useWishListAction","isServer","getSavedPoductLinks","wishListAnimation","WishListButton","props","fontSize","WishListAnimation","ProductWishListAction","product","iconSize","wishListAnimate","setWishListAnimate","wishListAdded","setWishListAdded","link","topLevelData","savedProducts","store","wishListState","savedProductLinks","isSaved","includes","wishListAction","isClient","wishListOnClick","setTimeout"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,mBAAT,QAAoC,UAApC;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,SAAH,gFAAvB;AAMP,MAAMK,cAAc,GAAGN,MAAM,CAACD,YAAD,CAAT;AAAA;AAAA;AAAA,gEAEFQ,KAAD,IAAWA,KAAK,CAACC,QAFd,CAApB;AAUA,MAAMC,iBAAiB,GAAGT,MAAM,CAACD,YAAD,CAAT;AAAA;AAAA;AAAA,uEAEHM,iBAFG,CAAvB;AAWA,eAAe,SAASK,qBAAT,CAA+B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA/B,EAAkF;AAC/F,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwClB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACmB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAWN,OAAO,CAACO,YAAzB;AACA,QAAMC,aAAa,GAAGrB,WAAW,CAAEsB,KAAD;AAAA;;AAAA,mCAAWA,KAAK,CAACC,aAAjB,yDAAW,qBAAqBF,aAAhC;AAAA,GAAD,CAAjC;AACA,QAAMG,iBAAiB,GAAGlB,mBAAmB,CAACe,aAAD,CAA7C;AACA,QAAMI,OAAO,GAAGD,iBAAH,aAAGA,iBAAH,uBAAGA,iBAAiB,CAAEE,QAAnB,CAA4BP,IAA5B,CAAhB;AACA,QAAMQ,cAAc,GAAGvB,iBAAiB,CAACqB,OAAO,GAAG,QAAH,GAAc,KAAtB,CAAxC;AACA,QAAMG,QAAQ,GAAG,CAACvB,QAAQ,EAA1B;;AACA,QAAMwB,eAAe,GAAG,MAAY;AAClC,QAAI,CAACd,eAAL,EAAsBC,kBAAkB,CAAC,IAAD,CAAlB;AACtBW,IAAAA,cAAc,CAACd,OAAD,CAAd;AACAiB,IAAAA,UAAU,CAAC,MAAM;AACfd,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAND,CAT+F,CAiB/F;AACA;AACA;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAJ,EAAcV,gBAAgB,CAACO,OAAD,CAAhB;AACf,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SACE,4BACGV,eAAe,IAAI,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEE,MAAC,cAAD;AACE,IAAA,OAAO,EAAEU,OADX;AAEE,IAAA,QAAQ,EAAEX,QAAQ,IAAI,MAFxB;AAGE,IAAA,OAAO,EAAEe,eAHX;AAIE,IAAA,KAAK,EAAEZ,aAAa,GAAG,SAAH,GAAe,SAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD","sourcesContent":["//@flow\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { type ProductData } from '@types/product';\nimport styled, { keyframes } from 'styled-components';\nimport { useWishListAction } from '@hooks';\nimport { isServer } from '@helpers/common';\nimport { getSavedPoductLinks } from './helper';\n\nexport const wishListAnimation = keyframes`\n  0% { transform: scale(0); }\n  50% { transform: scale(2.2); }\n  100% { transform: scale(0); }\n `;\n\nconst WishListButton = styled(FavoriteIcon)`\n  && {\n    font-size: ${(props) => props.fontSize};\n    cursor: pointer;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n`;\n\nconst WishListAnimation = styled(FavoriteIcon)`\n  position: absolute;\n  animation-name: ${wishListAnimation};\n  animation-duration: 0.5s;\n`;\n\ntype ProductWishListActionProps = {\n  product: ProductData,\n  iconSize?: string,\n};\n\nexport default function ProductWishListAction({ product, iconSize }: ProductWishListActionProps) {\n  const [wishListAnimate, setWishListAnimate] = useState(false);\n  const [wishListAdded, setWishListAdded] = useState(false);\n  const { link } = product.topLevelData;\n  const savedProducts = useSelector((store) => store.wishListState?.savedProducts);\n  const savedProductLinks = getSavedPoductLinks(savedProducts);\n  const isSaved = savedProductLinks?.includes(link);\n  const wishListAction = useWishListAction(isSaved ? 'remove' : 'add');\n  const isClient = !isServer();\n  const wishListOnClick = (): void => {\n    if (!wishListAnimate) setWishListAnimate(true);\n    wishListAction(product);\n    setTimeout(() => {\n      setWishListAnimate(false);\n    }, 500);\n  };\n\n  // The wishlist or \"saved products\" is persisted in browser local storage. This will not be accessible during build time, this\n  // means we'll have to rely on client side logic to detect whether a product has already been added to the wishlist. We do this\n  // in the following useEffect, ensuring these checks are invoked on the client only\n  useEffect(() => {\n    if (isClient) setWishListAdded(isSaved);\n  }, [isSaved]);\n\n  return (\n    <>\n      {wishListAnimate && <WishListAnimation />}\n      <WishListButton\n        isSaved={isSaved}\n        fontSize={iconSize || '32px'}\n        onClick={wishListOnClick}\n        color={wishListAdded ? 'primary' : 'inherit'}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}