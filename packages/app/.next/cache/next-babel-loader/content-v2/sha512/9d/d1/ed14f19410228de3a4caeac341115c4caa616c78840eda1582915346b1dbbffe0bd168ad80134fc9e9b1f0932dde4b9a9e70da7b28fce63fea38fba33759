{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nimport initalSettings from './initalState';\nexport function* watcherSetUserSettings() {\n  while (true) {\n    const {\n      user\n    } = yield take(actionTypes.SET_USER_SETTINGS);\n\n    const userWithDefaults = _objectSpread(_objectSpread({}, initalSettings.user), user);\n\n    yield put(actions.setUserSettingsSuccess(userWithDefaults));\n  }\n}\nexport function* watcherSetUserCookies() {\n  while (true) {\n    const {\n      allowCookies\n    } = yield take(actionTypes.SET_USER_COOKIE_POLICY);\n    yield put(actions.setUserCookiePolicySuccess(allowCookies));\n  }\n}\nexport default function* rootSaga() {\n  yield all([fork(watcherSetUserSettings), fork(watcherSetUserCookies)]);\n}","map":null,"metadata":{},"sourceType":"module"}