{"ast":null,"code":"import { urlCaseMatches } from '@helpers/common';\nexport function categoryPipe(affiliateData, section, productType) {\n  const productSection = affiliateData.find(category => urlCaseMatches(category.section, section));\n  return productSection === null || productSection === void 0 ? void 0 : productSection.data.filter(({\n    category\n  }) => urlCaseMatches(category, productType));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/graphQL/resolvers/resolverPipes/categoryPipe.js"],"names":["urlCaseMatches","categoryPipe","affiliateData","section","productType","productSection","find","category","data","filter"],"mappings":"AAGA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,OAAO,SAASC,YAAT,CACLC,aADK,EAELC,OAFK,EAGLC,WAHK,EAIoB;AACzB,QAAMC,cAA+B,GAAGH,aAAa,CAACI,IAAd,CAAoBC,QAAD,IACzDP,cAAc,CAACO,QAAQ,CAACJ,OAAV,EAAmBA,OAAnB,CADwB,CAAxC;AAIA,SAAOE,cAAP,aAAOA,cAAP,uBAAOA,cAAc,CAAEG,IAAhB,CAAqBC,MAArB,CAA4B,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAkBP,cAAc,CAACO,QAAD,EAAWH,WAAX,CAA5D,CAAP;AACD","sourcesContent":["//@flow\nimport { type ProductSection } from '@types/product';\nimport { type ProductsData, type ProductCategory } from '@types/product';\nimport { urlCaseMatches } from '@helpers/common';\n\nexport function categoryPipe(\n  affiliateData: ProductsData,\n  section: string,\n  productType: string\n): ?Array<ProductCategory> {\n  const productSection: ?ProductSection = affiliateData.find((category) =>\n    urlCaseMatches(category.section, section)\n  );\n\n  return productSection?.data.filter(({ category }) => urlCaseMatches(category, productType));\n}\n"]},"metadata":{},"sourceType":"module"}