{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MobileNavigation from './MobileNavigation/MobileNavigation';\nimport DesktopNavigation from './DesktopNavigation/DesktopNavigation';\nimport QuickFinder from '@modules/QuickFinder';\nexport default function Navigation(_ref) {\n  let {\n    navigationData,\n    isMobileNavigation,\n    isDesktopNavigation,\n    togglMobileNav,\n    mobileMenuOpen,\n    desktopLinksPerColumn,\n    desktopNavLabel,\n    desktopNavLink,\n    desktopNavigationMaxWidth,\n    desktopNavBarBackground,\n    desktopNavBarShadow,\n    quickFinderCopy,\n    resetProductFeeds\n  } = _ref,\n      restMobileCms = _objectWithoutProperties(_ref, [\"navigationData\", \"isMobileNavigation\", \"isDesktopNavigation\", \"togglMobileNav\", \"mobileMenuOpen\", \"desktopLinksPerColumn\", \"desktopNavLabel\", \"desktopNavLink\", \"desktopNavigationMaxWidth\", \"desktopNavBarBackground\", \"desktopNavBarShadow\", \"quickFinderCopy\", \"resetProductFeeds\"]);\n\n  const {\n    0: quickFinderOpen,\n    1: setQuickFinderOpen\n  } = useState(false);\n  return __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, (isDesktopNavigation || !isMobileNavigation) && __jsx(DesktopNavigation, _extends({\n    navigationData: navigationData\n  }, {\n    desktopLinksPerColumn,\n    desktopNavLabel,\n    desktopNavLink,\n    desktopNavigationMaxWidth,\n    desktopNavBarBackground,\n    desktopNavBarShadow,\n    setQuickFinderOpen,\n    quickFinderCopy,\n    resetProductFeeds\n  })), isMobileNavigation && __jsx(MobileNavigation, _extends({\n    togglMobileNav,\n    resetProductFeeds,\n    mobileMenuOpen,\n    navigationData,\n    setQuickFinderOpen,\n    quickFinderCopy\n  }, restMobileCms)), __jsx(QuickFinder, {\n    onSubmitCallback: () => {\n      togglMobileNav(false);\n      resetProductFeeds();\n    },\n    onClose: () => setQuickFinderOpen(false),\n    navigationData: navigationData,\n    open: quickFinderOpen,\n    setOpen: setQuickFinderOpen\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}