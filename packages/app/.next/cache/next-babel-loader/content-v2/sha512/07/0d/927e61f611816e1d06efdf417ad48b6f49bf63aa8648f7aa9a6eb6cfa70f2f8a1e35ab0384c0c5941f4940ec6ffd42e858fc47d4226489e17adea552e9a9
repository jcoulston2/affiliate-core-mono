{"ast":null,"code":"import rootReducer from './reducer/root-reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-sagas';\nimport throttle from 'lodash/throttle';\nimport { persistState } from './subscribers';\nimport { USER_SETTINGS_KEY, WISH_LIST_KEY } from '@constants';\nimport { getLocalStorage } from '@helpers/common';\nimport { createStoreWithPersist } from './helper';\nexport const configureStore = initialState => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware];\n  const localStorageKeys = [USER_SETTINGS_KEY, WISH_LIST_KEY].map(key => getLocalStorage(key));\n  const store = createStore(rootReducer, createStoreWithPersist(initialState, ...localStorageKeys), applyMiddleware(...middleWares));\n  store.subscribe(throttle(() => persistState(store), 1000));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(configureStore, {\n  debug: false\n});","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/app/store.js"],"names":["rootReducer","createStore","applyMiddleware","createWrapper","createSagaMiddleware","rootSaga","throttle","persistState","USER_SETTINGS_KEY","WISH_LIST_KEY","getLocalStorage","createStoreWithPersist","configureStore","initialState","sagaMiddleware","middleWares","localStorageKeys","map","key","store","subscribe","run","wrapper","debug"],"mappings":"AACA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,YAAjD;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,sBAAT,QAAuC,UAAvC;AAEA,OAAO,MAAMC,cAAc,GAAIC,YAAD,IAA4C;AACxE,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,gBAAgB,GAAG,CAACR,iBAAD,EAAoBC,aAApB,EAAmCQ,GAAnC,CAAwCC,GAAD,IAASR,eAAe,CAACQ,GAAD,CAA/D,CAAzB;AAEA,QAAMC,KAAK,GAAGlB,WAAW,CACvBD,WADuB,EAEvBW,sBAAsB,CAACE,YAAD,EAAe,GAAGG,gBAAlB,CAFC,EAGvBd,eAAe,CAAC,GAAGa,WAAJ,CAHQ,CAAzB;AAMAI,EAAAA,KAAK,CAACC,SAAN,CAAgBd,QAAQ,CAAC,MAAMC,YAAY,CAACY,KAAD,CAAnB,EAA4B,IAA5B,CAAxB;AACAL,EAAAA,cAAc,CAACO,GAAf,CAAmBhB,QAAnB;AACA,SAAOc,KAAP;AACD,CAdM;AAgBP,OAAO,MAAMG,OAAO,GAAGnB,aAAa,CAACS,cAAD,EAAiB;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAjB,CAA7B","sourcesContent":["//@flow\nimport rootReducer from './reducer/root-reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-sagas';\nimport { type Store } from '../types/redux';\nimport throttle from 'lodash/throttle';\nimport { persistState } from './subscribers';\nimport { USER_SETTINGS_KEY, WISH_LIST_KEY } from '@constants';\nimport { getLocalStorage } from '@helpers/common';\nimport { createStoreWithPersist } from './helper';\n\nexport const configureStore = (initialState: { [string]: any }): Store => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware];\n  const localStorageKeys = [USER_SETTINGS_KEY, WISH_LIST_KEY].map((key) => getLocalStorage(key));\n\n  const store = createStore(\n    rootReducer,\n    createStoreWithPersist(initialState, ...localStorageKeys),\n    applyMiddleware(...middleWares)\n  );\n\n  store.subscribe(throttle(() => persistState(store), 1000));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport const wrapper = createWrapper(configureStore, { debug: false });\n"]},"metadata":{},"sourceType":"module"}