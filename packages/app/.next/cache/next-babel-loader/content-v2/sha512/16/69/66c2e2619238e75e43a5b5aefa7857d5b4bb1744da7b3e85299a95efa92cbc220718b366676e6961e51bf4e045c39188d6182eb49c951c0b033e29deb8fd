{"ast":null,"code":"import _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INVALID_SEARCH_PATH } from '@constants/errors';\nimport camelCase from 'lodash/camelCase';\nimport isEmpty from 'lodash/isEmpty';\nvar validSearchParams = ['category', 'key-term', 'product-color', 'section', 'brand'];\nexport function getSearchValues(searchTerms) {\n  if (isEmpty(searchTerms)) throw INVALID_SEARCH_PATH;\n  return Object.keys(searchTerms).reduce(function (acc, cur) {\n    return validSearchParams.includes(cur) ? _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, camelCase(cur), searchTerms[cur])) : acc;\n  }, {});\n}\nexport function getSearchQueryFromUrl(router) {\n  var query = router.query;\n  var valuesFromSearch = Object.keys(query).reduce(function (acc, cur) {\n    return validSearchParams.includes(cur) ? \"\".concat(acc).concat(cur, \"=\").concat(query[cur], \"&\") : acc;\n  }, '?');\n  return valuesFromSearch.length > 1 ? valuesFromSearch : '';\n}","map":null,"metadata":{},"sourceType":"module"}