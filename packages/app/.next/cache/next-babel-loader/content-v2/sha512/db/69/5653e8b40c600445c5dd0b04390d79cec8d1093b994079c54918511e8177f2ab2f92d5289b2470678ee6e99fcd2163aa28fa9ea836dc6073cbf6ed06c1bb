{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchMobileNav),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { actions, actionTypes } from './actions';\nimport { take, put, all, fork } from 'redux-saga/effects';\nexport function watchMobileNav() {\n  var _yield$take, flag;\n\n  return _regeneratorRuntime.wrap(function watchMobileNav$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!true) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 3;\n          return take(actionTypes.MOBILE_NAV_TOGGLE);\n\n        case 3:\n          _yield$take = _context.sent;\n          flag = _yield$take.flag;\n          _context.next = 7;\n          return put(actions.togglMobileNavSuccess(flag));\n\n        case 7:\n          _context.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([fork(watchMobileNav)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":null,"metadata":{},"sourceType":"module"}