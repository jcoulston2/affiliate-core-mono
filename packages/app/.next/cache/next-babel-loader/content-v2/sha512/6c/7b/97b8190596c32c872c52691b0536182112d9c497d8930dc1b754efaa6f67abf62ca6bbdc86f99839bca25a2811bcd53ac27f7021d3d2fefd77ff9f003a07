{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/CmsSplitCards/CmsSplitCards.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@units/Card';\nimport { InnerCardLeft, InnerCardRight } from './InnerCardContent';\nimport useCurrentBreakpoint from '@hooks/useCurrentBreakpoint';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nexport default function CmsSplitCards(_ref) {\n  _s();\n\n  var _this = this;\n\n  var cards = _ref.cards,\n      cardOffset = _ref.cardOffset,\n      cmsEventMappings = _ref.cmsEventMappings,\n      gridContainerProps = _objectWithoutProperties(_ref, [\"cards\", \"cardOffset\", \"cmsEventMappings\"]);\n\n  var currentBreakpoint = useCurrentBreakpoint();\n  var isMobile = currentBreakpoint === 'xs';\n  return __jsx(StyledCmsGrid, _extends({\n    container: true\n  }, gridContainerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), cards === null || cards === void 0 ? void 0 : cards.map(function (_ref2, index) {\n    var inverse = _ref2.inverse,\n        heading = _ref2.heading,\n        cta = _ref2.cta,\n        splitSpacing = _ref2.splitSpacing,\n        copy = _ref2.copy,\n        img = _ref2.img,\n        padding = _ref2.padding,\n        grid = _ref2.grid,\n        expand = _ref2.expand,\n        restGrid = _objectWithoutProperties(_ref2, [\"inverse\", \"heading\", \"cta\", \"splitSpacing\", \"copy\", \"img\", \"padding\", \"grid\", \"expand\"]);\n\n    var cardContent = [__jsx(InnerCardLeft, _extends({\n      key: 1\n    }, {\n      heading: heading,\n      cta: cta,\n      splitSpacing: splitSpacing,\n      copy: copy,\n      cmsEventMappings: cmsEventMappings\n    }, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), __jsx(Grid, _extends({\n      key: 2,\n      item: true\n    }, (splitSpacing === null || splitSpacing === void 0 ? void 0 : splitSpacing.spacer) || {}, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })), __jsx(InnerCardRight, _extends({\n      key: 3\n    }, {\n      img: img,\n      splitSpacing: splitSpacing\n    }, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }))];\n    return __jsx(StyledCmsGrid, _extends({\n      item: true\n    }, restGrid, grid, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), __jsx(Card, _extends({\n      expand: expand,\n      padding: padding,\n      cardOffset: cardOffset\n    }, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }), __jsx(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, inverse && !isMobile ? cardContent.reverse() : cardContent)));\n  }));\n}\n\n_s(CmsSplitCards, \"fjmuHgMt2BxzLBPxxOm9tdwLzxQ=\", false, function () {\n  return [useCurrentBreakpoint];\n});\n\n_c = CmsSplitCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"CmsSplitCards\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/CmsSplitCards/CmsSplitCards.js"],"names":["React","Grid","Card","InnerCardLeft","InnerCardRight","useCurrentBreakpoint","StyledCmsGrid","CmsSplitCards","cards","cardOffset","cmsEventMappings","gridContainerProps","currentBreakpoint","isMobile","map","index","inverse","heading","cta","splitSpacing","copy","img","padding","grid","expand","restGrid","cardContent","spacer","reverse"],"mappings":"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","sourcesContent":["//@flow\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  type CmsSplitCard,\n  type CmsGridAlignItems,\n  type CmsGridJustify,\n  type CmsResponsiveInt,\n  type CmsResponsiveString,\n  type CmsEventMappings,\n} from '@types/cms';\nimport Card from '@units/Card';\nimport { InnerCardLeft, InnerCardRight } from './InnerCardContent';\nimport useCurrentBreakpoint from '@hooks/useCurrentBreakpoint';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\n\ntype CmsSplitCardsProps = $Exact<{\n  padding?: CmsResponsiveString,\n  margin?: CmsResponsiveString,\n  bgColor: string,\n  alignItems?: CmsGridAlignItems,\n  justifyContent?: CmsGridJustify,\n  cards: Array<CmsSplitCard>,\n  cardOffset?: CmsResponsiveInt,\n  spacing?: number,\n  cmsEventMappings?: CmsEventMappings,\n}>;\n\nexport default function CmsSplitCards({\n  cards,\n  cardOffset,\n  cmsEventMappings,\n  ...gridContainerProps\n}: CmsSplitCardsProps) {\n  const currentBreakpoint = useCurrentBreakpoint();\n  const isMobile = currentBreakpoint === 'xs';\n\n  return (\n    <StyledCmsGrid container {...gridContainerProps}>\n      {cards?.map(\n        (\n          { inverse, heading, cta, splitSpacing, copy, img, padding, grid, expand, ...restGrid },\n          index\n        ) => {\n          const cardContent = [\n            <InnerCardLeft key={1} {...{ heading, cta, splitSpacing, copy, cmsEventMappings }} />,\n            <Grid key={2} item {...(splitSpacing?.spacer || {})} />,\n            <InnerCardRight key={3} {...{ img, splitSpacing }} />,\n          ];\n\n          return (\n            <StyledCmsGrid item {...restGrid} {...grid} key={index}>\n              <Card {...{ expand, padding, cardOffset }}>\n                <Grid container item xs={12}>\n                  {inverse && !isMobile ? cardContent.reverse() : cardContent}\n                </Grid>\n              </Card>\n            </StyledCmsGrid>\n          );\n        }\n      )}\n    </StyledCmsGrid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}