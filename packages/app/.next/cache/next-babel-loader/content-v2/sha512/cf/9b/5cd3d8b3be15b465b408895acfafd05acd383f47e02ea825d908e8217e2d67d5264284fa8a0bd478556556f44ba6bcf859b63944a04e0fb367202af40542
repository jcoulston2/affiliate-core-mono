{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Filters/Filters.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Image from '@units/Image';\nimport Card from '@units/Card';\nimport Input from '@units/Input';\nimport Checkbox from '@units/Checkbox';\nimport Typography from '@units/Typography';\nimport RadioButton from '@units/RadioButton';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Slider from '@units/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpIcon from '@material-ui/icons/Info';\nimport { CenterVertical } from '@styles/CommonStyledComponents';\nimport Button from '@units/Button';\nimport { useRouter } from 'next/router';\nimport { PLP_PATH, SEARCH_PATH } from '@constants';\nimport { createUrlFilters, normalizeFilters, getNumberOfFiltersSelected, getCategoryFilters, getSectionFilters, sortSelectedCheckboxes, isSearch } from './helper';\nimport { stringifySafe, toArrayNullable, keyWordsToString, urlCase } from '@helpers/common';\nimport { getFilterPlpBasePath, pushFilterPlpBasePath, getFiltersFromUrl } from '@helpers/page';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Drawer from '@units/Drawer';\nimport { TooltopContent, ClearFilters, FilterNotification } from './styles';\nimport { useBrandList, useCategoryData } from '@hooks';\nimport FilterItem from './FilterItem';\nimport isEmpty from 'lodash/isEmpty';\nimport capitalize from 'lodash/capitalize';\nexport default function Filters({\n  section,\n  category,\n  productSearchValues,\n  fetchProducts,\n  fetchProductsInSearch,\n  setClientFilterStatus,\n  scaler,\n  setLoading,\n  setPriceSort,\n  setPriceThreshold,\n  setKeyWords,\n  setBrands,\n  setCategory,\n  setSection,\n  setSaleThreshold,\n  setFilterDrawOpen,\n  setHasTouchedSlider,\n  hasSetDefaultFilters,\n  triggerFilterRefresh,\n  filterDrawOpen,\n  priceSort,\n  keyWords,\n  brands,\n  saleThreshold,\n  hasTouchedSlider,\n  filterRefresh,\n  priceThreshold,\n  normalizedFilters,\n  useFilterSelectedNotifcation,\n  productFiltersContent: cms\n}) {\n  const router = useRouter();\n  const brandList = useBrandList();\n  const categoryData = useCategoryData();\n  const categoryFilters = getCategoryFilters(section, categoryData);\n  const sectionFilters = getSectionFilters(section, categoryData);\n  const isSearchPage = isSearch(router);\n  const numberOfFiltersSelected = getNumberOfFiltersSelected(normalizedFilters);\n  const sliderMarks = [{\n    label: '£0',\n    value: 0\n  }, {\n    label: hasTouchedSlider ? `£${100 * scaler}` : 'no max',\n    value: 100\n  }];\n\n  const closeFilters = () => setFilterDrawOpen(false);\n\n  const handleInputChange = cb => event => {\n    cb(event.target.value);\n  };\n\n  const handleCheckBoxChange = (stateVale, stateSetter) => value => {\n    if (stateVale.includes(value)) {\n      stateSetter(stateVale.filter(item => urlCase(item) !== value));\n    } else {\n      stateSetter([...stateVale, value]);\n    }\n  };\n\n  const restoreDefaultFilters = () => {\n    setFilterDrawOpen(false);\n    pushFilterPlpBasePath(router);\n  };\n\n  const applyFilters = () => {\n    setClientFilterStatus(true);\n    setFilterDrawOpen(false);\n    setLoading(true);\n    createUrlFilters(normalizedFilters, getFilterPlpBasePath(router), isSearchPage);\n\n    if (isSearchPage) {\n      fetchProductsInSearch(productSearchValues, 0, 100, normalizedFilters);\n    } else {\n      fetchProducts(section, category, 0, 100, normalizedFilters);\n    }\n  };\n\n  useEffect(() => {\n    if (filterRefresh) {\n      triggerFilterRefresh(false);\n      applyFilters();\n    }\n  }, [filterRefresh]);\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    onClick: () => setFilterDrawOpen(!filterDrawOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, !!numberOfFiltersSelected && __jsx(FilterNotification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, numberOfFiltersSelected), __jsx(Image, {\n    src: \"filter-icon.svg\",\n    alt: \"Select productFilters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), __jsx(Drawer, {\n    anchor: 'right',\n    open: filterDrawOpen,\n    iconCloseClick: closeFilters,\n    onClose: closeFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    padding: '28px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterCardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Sort\")), __jsx(FilterItem, {\n    isLast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"price sort\",\n    name: \"price-sort\",\n    value: priceSort,\n    onChange: handleInputChange(setPriceSort),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"low\",\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 56\n      }\n    }),\n    label: \"Price low to high\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"high\",\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 28\n      }\n    }),\n    label: \"Price high to low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), __jsx(FormControlLabel, {\n    value: 'recommended',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 28\n      }\n    }),\n    label: \"Recommended\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }))))), isSearchPage && __jsx(React.Fragment, null, __jsx(Spacer, {\n    h: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, !!sectionFilters.length && __jsx(React.Fragment, null, __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Section\"), __jsx(FilterItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"section\",\n    name: \"section\",\n    value: section,\n    onChange: handleInputChange(setSection),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, sectionFilters.map(sectionFilter => __jsx(FormControlLabel, {\n    value: sectionFilter,\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 36\n      }\n    }),\n    label: capitalize(sectionFilter),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  })), __jsx(FormControlLabel, {\n    value: null,\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 63\n      }\n    }),\n    label: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  })))), __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Categories\"), __jsx(FilterItem, {\n    expandable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, sortSelectedCheckboxes(categoryFilters, category).map(catItem => __jsx(Grid, {\n    key: catItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, __jsx(FormControlLabel, {\n    value: urlCase(catItem),\n    control: __jsx(Checkbox, {\n      checked: category.includes(urlCase(catItem)),\n      onChange: handleInputChange(handleCheckBoxChange(category, setCategory)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }),\n    label: capitalize(catItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })))))), __jsx(Spacer, {\n    h: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), __jsx(Card, {\n    padding: '28px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterCardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"Filters\"), __jsx(Spacer, {\n    h: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }), __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, \"Price Range\"), __jsx(FilterItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    scale: scale => scale * scaler,\n    value: priceThreshold,\n    onChange: (__, value) => {\n      setHasTouchedSlider(true);\n      setPriceThreshold(value);\n    },\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"set-price\",\n    marks: sliderMarks,\n    valueLabelFormat: value => `£${value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })), __jsx(CenterVertical, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"Key Words\"), __jsx(Tooltip, {\n    title: __jsx(TooltopContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, cms.keyWordsTooltipText),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, __jsx(HelpIcon, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }))), __jsx(FilterItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: !keyWords.length ? cms.keyWordsInputLabel : '',\n    value: keyWordsToString(keyWords),\n    onChange: ({\n      target\n    }) => setKeyWords(target.value && target.value.toLowerCase().replace(',', ' ').split(' ') || []),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  })), __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"Brands\"), __jsx(FilterItem, {\n    expandable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, brandList.map(brand => __jsx(Grid, {\n    key: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, __jsx(FormControlLabel, {\n    value: urlCase(brand),\n    control: __jsx(Checkbox, {\n      checked: brands.includes(urlCase(brand)),\n      onChange: handleInputChange(handleCheckBoxChange(brands, setBrands)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }),\n    label: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  })))), __jsx(Typography, {\n    tag: \"h3\",\n    typeStyles: cms.filterItemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, \"Sale\"), __jsx(FilterItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"sale filter\",\n    name: \"sale-filter\",\n    value: saleThreshold,\n    onChange: handleInputChange(setSaleThreshold),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    value: '0',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 54\n      }\n    }),\n    label: \"All products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }), __jsx(FormControlLabel, {\n    value: '1',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 54\n      }\n    }),\n    label: \"All sale items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }), __jsx(FormControlLabel, {\n    value: '20',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 55\n      }\n    }),\n    label: \"20% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }), __jsx(FormControlLabel, {\n    value: '50',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 55\n      }\n    }),\n    label: \"50% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }), __jsx(FormControlLabel, {\n    value: '70',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 55\n      }\n    }),\n    label: \"70% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  })))), __jsx(Spacer, {\n    h: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }), __jsx(ClearFilters, {\n    onClick: restoreDefaultFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    tag: \"p\",\n    size: 15,\n    decoration: \"underline\",\n    margin: \"0px 0px 10px 0px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, \"Clear filters\")), __jsx(Button, {\n    primary: true,\n    fullWidth: true,\n    onClick: applyFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, \"Apply filters\")));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Filters/Filters.js"],"names":["React","useState","useEffect","Grid","Image","Card","Input","Checkbox","Typography","RadioButton","Spacer","RadioGroup","FormControlLabel","FormControl","FormLabel","Slider","Tooltip","HelpIcon","CenterVertical","Button","useRouter","PLP_PATH","SEARCH_PATH","createUrlFilters","normalizeFilters","getNumberOfFiltersSelected","getCategoryFilters","getSectionFilters","sortSelectedCheckboxes","isSearch","stringifySafe","toArrayNullable","keyWordsToString","urlCase","getFilterPlpBasePath","pushFilterPlpBasePath","getFiltersFromUrl","ClearIcon","Drawer","TooltopContent","ClearFilters","FilterNotification","useBrandList","useCategoryData","FilterItem","isEmpty","capitalize","Filters","section","category","productSearchValues","fetchProducts","fetchProductsInSearch","setClientFilterStatus","scaler","setLoading","setPriceSort","setPriceThreshold","setKeyWords","setBrands","setCategory","setSection","setSaleThreshold","setFilterDrawOpen","setHasTouchedSlider","hasSetDefaultFilters","triggerFilterRefresh","filterDrawOpen","priceSort","keyWords","brands","saleThreshold","hasTouchedSlider","filterRefresh","priceThreshold","normalizedFilters","useFilterSelectedNotifcation","productFiltersContent","cms","router","brandList","categoryData","categoryFilters","sectionFilters","isSearchPage","numberOfFiltersSelected","sliderMarks","label","value","closeFilters","handleInputChange","cb","event","target","handleCheckBoxChange","stateVale","stateSetter","includes","filter","item","restoreDefaultFilters","applyFilters","filterCardTitle","length","filterItemTitle","map","sectionFilter","catItem","scale","__","keyWordsTooltipText","keyWordsInputLabel","toLowerCase","replace","split","brand"],"mappings":"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","sourcesContent":["//@flow\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Image from '@units/Image';\nimport { type Filters as FilterType } from '@types/product';\nimport { type FiltersComponentProps } from './types';\nimport Card from '@units/Card';\nimport Input from '@units/Input';\nimport Checkbox from '@units/Checkbox';\nimport Typography from '@units/Typography';\nimport RadioButton from '@units/RadioButton';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Slider from '@units/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpIcon from '@material-ui/icons/Info';\nimport { CenterVertical } from '@styles/CommonStyledComponents';\nimport Button from '@units/Button';\nimport { useRouter } from 'next/router';\nimport { PLP_PATH, SEARCH_PATH } from '@constants';\nimport {\n  createUrlFilters,\n  normalizeFilters,\n  getNumberOfFiltersSelected,\n  getCategoryFilters,\n  getSectionFilters,\n  sortSelectedCheckboxes,\n  isSearch,\n} from './helper';\nimport { stringifySafe, toArrayNullable, keyWordsToString, urlCase } from '@helpers/common';\nimport { getFilterPlpBasePath, pushFilterPlpBasePath, getFiltersFromUrl } from '@helpers/page';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Drawer from '@units/Drawer';\nimport { TooltopContent, ClearFilters, FilterNotification } from './styles';\nimport { useBrandList, useCategoryData } from '@hooks';\nimport FilterItem from './FilterItem';\nimport isEmpty from 'lodash/isEmpty';\nimport capitalize from 'lodash/capitalize';\n\nexport default function Filters({\n  section,\n  category,\n  productSearchValues,\n  fetchProducts,\n  fetchProductsInSearch,\n  setClientFilterStatus,\n  scaler,\n  setLoading,\n  setPriceSort,\n  setPriceThreshold,\n  setKeyWords,\n  setBrands,\n  setCategory,\n  setSection,\n  setSaleThreshold,\n  setFilterDrawOpen,\n  setHasTouchedSlider,\n  hasSetDefaultFilters,\n  triggerFilterRefresh,\n  filterDrawOpen,\n  priceSort,\n  keyWords,\n  brands,\n  saleThreshold,\n  hasTouchedSlider,\n  filterRefresh,\n  priceThreshold,\n  normalizedFilters,\n  useFilterSelectedNotifcation,\n  productFiltersContent: cms,\n}: FiltersComponentProps) {\n  const router = useRouter();\n  const brandList = useBrandList();\n  const categoryData = useCategoryData();\n  const categoryFilters = getCategoryFilters(section, categoryData);\n  const sectionFilters = getSectionFilters(section, categoryData);\n  const isSearchPage = isSearch(router);\n  const numberOfFiltersSelected = getNumberOfFiltersSelected(normalizedFilters);\n  const sliderMarks = [\n    { label: '£0', value: 0 },\n    { label: hasTouchedSlider ? `£${100 * scaler}` : 'no max', value: 100 },\n  ];\n\n  const closeFilters = () => setFilterDrawOpen(false);\n  const handleInputChange = (cb: Function) => (event: Object) => {\n    cb(event.target.value);\n  };\n\n  const handleCheckBoxChange = (stateVale: Array<any>, stateSetter: Function) => (\n    value: string\n  ): void => {\n    if (stateVale.includes(value)) {\n      stateSetter(stateVale.filter((item) => urlCase(item) !== value));\n    } else {\n      stateSetter([...stateVale, value]);\n    }\n  };\n\n  const restoreDefaultFilters = (): void => {\n    setFilterDrawOpen(false);\n    pushFilterPlpBasePath(router);\n  };\n\n  const applyFilters = (): void => {\n    setClientFilterStatus(true);\n    setFilterDrawOpen(false);\n    setLoading(true);\n    createUrlFilters(normalizedFilters, getFilterPlpBasePath(router), isSearchPage);\n\n    if (isSearchPage) {\n      fetchProductsInSearch(productSearchValues, 0, 100, normalizedFilters);\n    } else {\n      fetchProducts(section, category, 0, 100, normalizedFilters);\n    }\n  };\n\n  useEffect(() => {\n    if (filterRefresh) {\n      triggerFilterRefresh(false);\n      applyFilters();\n    }\n  }, [filterRefresh]);\n\n  return (\n    <>\n      <Grid item onClick={() => setFilterDrawOpen(!filterDrawOpen)}>\n        {!!numberOfFiltersSelected && (\n          <FilterNotification>{numberOfFiltersSelected}</FilterNotification>\n        )}\n        <Image src=\"filter-icon.svg\" alt=\"Select productFilters\" />\n      </Grid>\n\n      <Drawer\n        anchor={'right'}\n        open={filterDrawOpen}\n        iconCloseClick={closeFilters}\n        onClose={closeFilters}>\n        <Card padding={'28px'}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n              <Typography tag=\"h3\" typeStyles={cms.filterCardTitle}>\n                Sort\n              </Typography>\n            </FormLabel>\n            <FilterItem isLast>\n              <RadioGroup\n                aria-label=\"price sort\"\n                name=\"price-sort\"\n                value={priceSort}\n                onChange={handleInputChange(setPriceSort)}>\n                <FormControlLabel value=\"low\" control={<RadioButton />} label=\"Price low to high\" />\n                <FormControlLabel\n                  value=\"high\"\n                  control={<RadioButton />}\n                  label=\"Price high to low\"\n                />\n                <FormControlLabel\n                  value={'recommended'}\n                  control={<RadioButton />}\n                  label=\"Recommended\"\n                />\n              </RadioGroup>\n            </FilterItem>\n          </FormControl>\n        </Card>\n\n        {isSearchPage && (\n          <>\n            <Spacer h={20} />\n            <Card>\n              {!!sectionFilters.length && (\n                <>\n                  <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n                    Section\n                  </Typography>\n                  <FilterItem>\n                    <RadioGroup\n                      aria-label=\"section\"\n                      name=\"section\"\n                      value={section}\n                      onChange={handleInputChange(setSection)}>\n                      {sectionFilters.map((sectionFilter: string) => (\n                        <FormControlLabel\n                          value={sectionFilter}\n                          control={<RadioButton />}\n                          label={capitalize(sectionFilter)}\n                        />\n                      ))}\n                      <FormControlLabel value={null} control={<RadioButton />} label=\"All\" />\n                    </RadioGroup>\n                  </FilterItem>\n                </>\n              )}\n\n              <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n                Categories\n              </Typography>\n              <FilterItem expandable>\n                {sortSelectedCheckboxes(categoryFilters, category).map((catItem: string) => (\n                  <Grid key={catItem}>\n                    <FormControlLabel\n                      value={urlCase(catItem)}\n                      control={\n                        <Checkbox\n                          checked={category.includes(urlCase(catItem))}\n                          onChange={handleInputChange(handleCheckBoxChange(category, setCategory))}\n                        />\n                      }\n                      label={capitalize(catItem)}\n                    />\n                  </Grid>\n                ))}\n              </FilterItem>\n            </Card>\n          </>\n        )}\n\n        <Spacer h={20} />\n        <Card padding={'28px'}>\n          <Typography tag=\"h3\" typeStyles={cms.filterCardTitle}>\n            Filters\n          </Typography>\n          <Spacer h={20} />\n\n          <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n            Price Range\n          </Typography>\n          <FilterItem>\n            <Slider\n              scale={(scale) => scale * scaler}\n              value={priceThreshold}\n              onChange={(__, value) => {\n                setHasTouchedSlider(true);\n                setPriceThreshold(value);\n              }}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"set-price\"\n              marks={sliderMarks}\n              valueLabelFormat={(value) => `£${value}`}\n            />\n          </FilterItem>\n\n          <CenterVertical>\n            <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n              Key Words\n            </Typography>\n            <Tooltip title={<TooltopContent>{cms.keyWordsTooltipText}</TooltopContent>}>\n              <HelpIcon size=\"small\" />\n            </Tooltip>\n          </CenterVertical>\n\n          <FilterItem>\n            <Input\n              fullWidth\n              variant=\"outlined\"\n              label={!keyWords.length ? cms.keyWordsInputLabel : ''}\n              value={keyWordsToString(keyWords)}\n              onChange={({ target }) =>\n                setKeyWords(\n                  (target.value && target.value.toLowerCase().replace(',', ' ').split(' ')) || []\n                )\n              }\n            />\n          </FilterItem>\n\n          <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n            Brands\n          </Typography>\n          <FilterItem expandable>\n            {brandList.map((brand: string) => (\n              <Grid key={brand}>\n                <FormControlLabel\n                  value={urlCase(brand)}\n                  control={\n                    <Checkbox\n                      checked={brands.includes(urlCase(brand))}\n                      onChange={handleInputChange(handleCheckBoxChange(brands, setBrands))}\n                    />\n                  }\n                  label={brand}\n                />\n              </Grid>\n            ))}\n          </FilterItem>\n\n          <Typography tag=\"h3\" typeStyles={cms.filterItemTitle}>\n            Sale\n          </Typography>\n          <FilterItem>\n            <RadioGroup\n              aria-label=\"sale filter\"\n              name=\"sale-filter\"\n              value={saleThreshold}\n              onChange={handleInputChange(setSaleThreshold)}>\n              <FormControlLabel value={'0'} control={<RadioButton />} label=\"All products\" />\n              <FormControlLabel value={'1'} control={<RadioButton />} label=\"All sale items\" />\n              <FormControlLabel value={'20'} control={<RadioButton />} label=\"20% and more\" />\n              <FormControlLabel value={'50'} control={<RadioButton />} label=\"50% and more\" />\n              <FormControlLabel value={'70'} control={<RadioButton />} label=\"70% and more\" />\n            </RadioGroup>\n          </FilterItem>\n        </Card>\n\n        <Spacer h={7} />\n\n        <ClearFilters onClick={restoreDefaultFilters}>\n          <Typography tag=\"p\" size={15} decoration=\"underline\" margin=\"0px 0px 10px 0px\">\n            Clear filters\n          </Typography>\n        </ClearFilters>\n\n        <Button primary fullWidth onClick={applyFilters}>\n          Apply filters\n        </Button>\n      </Drawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}