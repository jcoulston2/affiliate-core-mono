{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\nvalue         |0px     600px    960px    1280px   1920px\nkey           |xs      sm       md       lg       xl\nscreen width  |--------|--------|--------|--------|-------->\nrange         |   xs   |   sm   |   md   |   lg   |   xl\n*/\nexport const breakPoints = [{\n  query: 'xs',\n  min: 0,\n  max: 499\n}, {\n  query: 'sm',\n  min: 500,\n  max: 768\n}, {\n  query: 'md',\n  min: 768,\n  max: 1024\n}, {\n  query: 'lg',\n  min: 1024,\n  max: 1400\n}, {\n  query: 'xl',\n  min: 1400,\n  max: 9e4\n}];\n\nconst breakPointQueries = _objectSpread({}, breakPoints.reduce((accum, {\n  query,\n  min,\n  max\n}) => _objectSpread(_objectSpread({}, accum), {}, {\n  [`min_${query}`]: `@media (min-width: ${min}px)`,\n  [`max_${query}`]: `@media (max-width: ${max}px)`\n}), {}));\n\nexport default breakPointQueries;","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/styles/breakPoints.js"],"names":["breakPoints","query","min","max","breakPointQueries","reduce","accum"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAqBA,OAAO,MAAMA,WAA+B,GAAG,CAC7C;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,CAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAD6C,EAM7C;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,GAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAN6C,EAW7C;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,GAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAX6C,EAgB7C;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,IAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAhB6C,EAqB7C;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,IAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CArB6C,CAAxC;;AA4BP,MAAMC,iBAAoC,qBACrCJ,WAAW,CAACK,MAAZ,CACD,CAACC,KAAD,EAAQ;AAAEL,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAR,qCACKG,KADL;AAEE,GAAE,OAAML,KAAM,EAAd,GAAmB,sBAAqBC,GAAI,KAF9C;AAGE,GAAE,OAAMD,KAAM,EAAd,GAAmB,sBAAqBE,GAAI;AAH9C,EADC,EAMD,EANC,CADqC,CAA1C;;AAWA,eAAeC,iBAAf","sourcesContent":["//@flow\n\n/*\nvalue         |0px     600px    960px    1280px   1920px\nkey           |xs      sm       md       lg       xl\nscreen width  |--------|--------|--------|--------|-------->\nrange         |   xs   |   sm   |   md   |   lg   |   xl\n*/\n\nexport type BreakPoints = {\n  query: 'xs' | 'sm' | 'md' | 'lg' | 'xl',\n  min: number,\n  max: number,\n};\n\nexport type BreakPointQueries = {\n  max_xs: string,\n  min_xs: string,\n  max_sm: string,\n  min_sm: string,\n  max_md: string,\n  min_md: string,\n  max_lg: string,\n  min_lg: string,\n  max_xl: string,\n  min_xl: string,\n};\n\nexport const breakPoints: Array<BreakPoints> = [\n  {\n    query: 'xs',\n    min: 0,\n    max: 499,\n  },\n  {\n    query: 'sm',\n    min: 500,\n    max: 768,\n  },\n  {\n    query: 'md',\n    min: 768,\n    max: 1024,\n  },\n  {\n    query: 'lg',\n    min: 1024,\n    max: 1400,\n  },\n  {\n    query: 'xl',\n    min: 1400,\n    max: 9e4,\n  },\n];\n\nconst breakPointQueries: BreakPointQueries = {\n  ...breakPoints.reduce<{ [string]: string }>(\n    (accum, { query, min, max }) => ({\n      ...accum,\n      [`min_${query}`]: `@media (min-width: ${min}px)`,\n      [`max_${query}`]: `@media (max-width: ${max}px)`,\n    }),\n    {}\n  ),\n};\n\nexport default breakPointQueries;\n"]},"metadata":{},"sourceType":"module"}