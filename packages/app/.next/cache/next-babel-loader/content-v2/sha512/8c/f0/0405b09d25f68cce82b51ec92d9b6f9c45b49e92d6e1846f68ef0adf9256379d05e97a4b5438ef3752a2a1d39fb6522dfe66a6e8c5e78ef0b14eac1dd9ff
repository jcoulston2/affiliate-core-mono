{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/Pwa/PwaBanner.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Image from '@units/Image';\nimport styled from 'styled-components';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport { useCms } from '@hooks';\nimport { isInPwa } from '@helpers/common';\nimport bp from '@styles/breakPoints';\nimport { Actionable } from '@styles/CommonStyledComponents';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport usePwa from '@containers/Pwa/hook';\nconst PwaBannerWrapper = styled(Grid).withConfig({\n  displayName: \"PwaBanner__PwaBannerWrapper\",\n  componentId: \"r0okt3-0\"\n})([\"padding:20px;background:\", \";\", \"{padding:40px;}img{width:97px;\", \"{width:200px;}\", \"{width:300px;}}position:relative;\"], props => props.background || '#fff', bp.min_sm, bp.min_sm, bp.min_lg);\nconst PwaCloseBanner = styled(ClearIcon).withConfig({\n  displayName: \"PwaBanner__PwaCloseBanner\",\n  componentId: \"r0okt3-1\"\n})([\"position:absolute;top:10px;right:10px;cursor:pointer;\", \"{top:5px;right:5px;}&:hover{opacity:0.6;}\"], bp.max_sm);\nexport default function PwaBanner() {\n  if (isInPwa()) return null;\n  const {\n    isPwaInitiated,\n    initPwaPrompt,\n    setIsPwaInitiated\n  } = usePwa();\n  const {\n    pwa: pwaCms\n  } = useCms('other');\n\n  const bannerCloseClick = () => {\n    setIsPwaInitiated(false);\n  };\n\n  return __jsx(React.Fragment, null, isPwaInitiated && __jsx(PwaBannerWrapper, {\n    \"data-ref\": \"pwa-banner\",\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    background: pwaCms.pwaDownloadableBannerBgColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(PwaCloseBanner, {\n    fontSize: \"medium\",\n    onClick: bannerCloseClick,\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), __jsx(Grid, {\n    item: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    src: pwaCms.pwaDownloadableBannerImage,\n    alt: \"Download our web app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    onClick: () => initPwaPrompt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(Actionable, {\n    \"aria-label\": \"dowbload our app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    tag: \"h6\",\n    typeStyles: pwaCms.pwaDownloadableBannerCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, __jsx(Copy, {\n    text: pwaCms.pwaDownloadableBannerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/Pwa/PwaBanner.js"],"names":["React","Grid","Image","styled","Typography","Copy","useCms","isInPwa","bp","Actionable","ClearIcon","usePwa","PwaBannerWrapper","props","background","min_sm","min_lg","PwaCloseBanner","max_sm","PwaBanner","isPwaInitiated","initPwaPrompt","setIsPwaInitiated","pwa","pwaCms","bannerCloseClick","pwaDownloadableBannerBgColor","color","pwaDownloadableBannerImage","pwaDownloadableBannerCopy","pwaDownloadableBannerText"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,EAAP,MAAe,qBAAf;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,gBAAgB,GAAGT,MAAM,CAACF,IAAD,CAAT;AAAA;AAAA;AAAA,+HAELY,KAAD,IAAWA,KAAK,CAACC,UAAN,IAAoB,MAFzB,EAIlBN,EAAE,CAACO,MAJe,EAWhBP,EAAE,CAACO,MAXa,EAehBP,EAAE,CAACQ,MAfa,CAAtB;AAuBA,MAAMC,cAAc,GAAGd,MAAM,CAACO,SAAD,CAAT;AAAA;AAAA;AAAA,2GAMhBF,EAAE,CAACU,MANa,CAApB;AAgBA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAIZ,OAAO,EAAX,EAAe,OAAO,IAAP;AACf,QAAM;AAAEa,IAAAA,cAAF;AAAkBC,IAAAA,aAAlB;AAAiCC,IAAAA;AAAjC,MAAuDX,MAAM,EAAnE;AACA,QAAM;AAAEY,IAAAA,GAAG,EAAEC;AAAP,MAAkBlB,MAAM,CAAC,OAAD,CAA9B;;AAEA,QAAMmB,gBAAgB,GAAG,MAAY;AACnCH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFD;;AAIA,SACE,4BACGF,cAAc,IACb,MAAC,gBAAD;AACE,gBAAS,YADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,UAAU,EAAEI,MAAM,CAACE,4BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,QAAzB;AAAkC,IAAA,OAAO,EAAED,gBAA3C;AAA6D,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,OAAO,EAAC,QAAnB;AAA4B,IAAA,UAAU,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEH,MAAM,CAACI,0BAAnB;AAA+C,IAAA,GAAG,EAAC,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,OAAO,EAAC,QAAnB;AAA4B,IAAA,UAAU,EAAC,QAAvC;AAAgD,IAAA,OAAO,EAAE,MAAMP,aAAa,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,kBAAW,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAqB,IAAA,UAAU,EAAEG,MAAM,CAACK,yBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,MAAM,CAACM,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAVF,CAFJ,CADF;AAwBD","sourcesContent":["//@flow\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Image from '@units/Image';\nimport styled from 'styled-components';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport { useCms } from '@hooks';\nimport { isInPwa } from '@helpers/common';\nimport bp from '@styles/breakPoints';\nimport { Actionable } from '@styles/CommonStyledComponents';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport usePwa from '@containers/Pwa/hook';\n\nconst PwaBannerWrapper = styled(Grid)`\n  padding: 20px;\n  background: ${(props) => props.background || '#fff'};\n\n  ${bp.min_sm} {\n    padding: 40px;\n  }\n\n  img {\n    width: 97px;\n\n    ${bp.min_sm} {\n      width: 200px;\n    }\n\n    ${bp.min_lg} {\n      width: 300px;\n    }\n  }\n\n  position: relative;\n`;\n\nconst PwaCloseBanner = styled(ClearIcon)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n\n  ${bp.max_sm} {\n    top: 5px;\n    right: 5px;\n  }\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nexport default function PwaBanner() {\n  if (isInPwa()) return null;\n  const { isPwaInitiated, initPwaPrompt, setIsPwaInitiated } = usePwa();\n  const { pwa: pwaCms } = useCms('other');\n\n  const bannerCloseClick = (): void => {\n    setIsPwaInitiated(false);\n  };\n\n  return (\n    <>\n      {isPwaInitiated && (\n        <PwaBannerWrapper\n          data-ref=\"pwa-banner\"\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          background={pwaCms.pwaDownloadableBannerBgColor}>\n          <PwaCloseBanner fontSize=\"medium\" onClick={bannerCloseClick} style={{ color: '#fff' }} />\n          <Grid item justify=\"center\" alignItems=\"center\">\n            <Image src={pwaCms.pwaDownloadableBannerImage} alt=\"Download our web app\" />\n          </Grid>\n          <Grid item justify=\"center\" alignItems=\"center\" onClick={() => initPwaPrompt()}>\n            <Actionable aria-label=\"dowbload our app\">\n              <Typography tag=\"h6\" typeStyles={pwaCms.pwaDownloadableBannerCopy}>\n                <Copy text={pwaCms.pwaDownloadableBannerText} />\n              </Typography>\n            </Actionable>\n          </Grid>\n        </PwaBannerWrapper>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}