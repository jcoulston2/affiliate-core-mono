{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/units/CmsSplitCards/InnerCardContent.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@units/Button';\nimport Image from '@units/Image';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport isEmpty from 'lodash/isEmpty';\nvar ImageWrapper = styled(Grid).withConfig({\n  displayName: \"InnerCardContent__ImageWrapper\",\n  componentId: \"sc-1u4j7wg-0\"\n})([\"height:100%;\"]);\n_c = ImageWrapper;\nexport function InnerCardLeft(_ref) {\n  var heading = _ref.heading,\n      cta = _ref.cta,\n      splitSpacing = _ref.splitSpacing,\n      copy = _ref.copy,\n      cmsEventMappings = _ref.cmsEventMappings;\n  return __jsx(Grid, _extends({\n    item: true,\n    container: true\n  }, (splitSpacing === null || splitSpacing === void 0 ? void 0 : splitSpacing.left) || {}, {\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), heading && __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    typeStyles: heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(Copy, {\n    text: heading.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 45\n    }\n  }))), copy && __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    typeStyles: copy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Copy, {\n    text: copy.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }\n  }))), !isEmpty(cta) && __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Button, _extends({}, cta, {\n    cmsEventMappings: cmsEventMappings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n}\n_c2 = InnerCardLeft;\nexport function InnerCardRight(_ref2) {\n  var img = _ref2.img,\n      splitSpacing = _ref2.splitSpacing;\n  return __jsx(Grid, _extends({\n    item: true\n  }, (splitSpacing === null || splitSpacing === void 0 ? void 0 : splitSpacing.right) || {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), img && __jsx(ImageWrapper, {\n    item: true,\n    xs: 12,\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Image, _extends({}, img, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))));\n}\n_c3 = InnerCardRight;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImageWrapper\");\n$RefreshReg$(_c2, \"InnerCardLeft\");\n$RefreshReg$(_c3, \"InnerCardRight\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/units/CmsSplitCards/InnerCardContent.js"],"names":["React","styled","Grid","Button","Image","Typography","Copy","isEmpty","ImageWrapper","InnerCardLeft","heading","cta","splitSpacing","copy","cmsEventMappings","left","text","InnerCardRight","img","right"],"mappings":"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","sourcesContent":["//@flow\nimport React from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@units/Button';\nimport Image from '@units/Image';\nimport { type CmsSplitCard } from '@types/cms';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport isEmpty from 'lodash/isEmpty';\n\nconst ImageWrapper = styled(Grid)`\n  height: 100%;\n`;\n\nexport function InnerCardLeft({\n  heading,\n  cta,\n  splitSpacing,\n  copy,\n  cmsEventMappings,\n}: CmsSplitCard) {\n  return (\n    <Grid item container {...(splitSpacing?.left || {})} direction=\"column\">\n      {heading && (\n        <Grid item container justify=\"center\">\n          <Typography typeStyles={heading}>{<Copy text={heading.text} />}</Typography>\n        </Grid>\n      )}\n      {copy && (\n        <Grid item container justify=\"center\">\n          <Typography typeStyles={copy}>{<Copy text={copy.text} />}</Typography>\n        </Grid>\n      )}\n      {!isEmpty(cta) && (\n        <Grid item container justify=\"center\">\n          <Button {...cta} cmsEventMappings={cmsEventMappings} />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport function InnerCardRight({ img, splitSpacing }: CmsSplitCard) {\n  return (\n    <Grid item {...(splitSpacing?.right || {})}>\n      {img && (\n        <ImageWrapper item xs={12} container alignItems=\"center\">\n          <Image {...img} />\n        </ImageWrapper>\n      )}\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}