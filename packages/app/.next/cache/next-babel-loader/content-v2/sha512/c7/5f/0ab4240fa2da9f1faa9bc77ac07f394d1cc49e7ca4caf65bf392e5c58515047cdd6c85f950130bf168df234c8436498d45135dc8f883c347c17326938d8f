{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/pages/product-listing/[...slug].js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ListingContent from '@containers/ListingContent';\nimport PageSkeleton from '@layouts';\n\nvar ListingPage = function ListingPage() {\n  return __jsx(PageSkeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(ListingContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = ListingPage;\nexport var __N_SSG = true;\nexport default ListingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListingPage\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/pages/product-listing/[...slug].js"],"names":["React","ListingContent","PageSkeleton","ListingPage"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,cAAP,MAA2B,4BAA3B;AAGA,OAAOC,YAAP,MAAyB,UAAzB;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;KAAMA,W;;AA2CN,eAAeA,WAAf","sourcesContent":["//@flow\nimport React from 'react';\nimport buildRequests from '../../apiUtil/requests/buildRequests';\nimport { getNavigationProps } from '@helpers/page';\nimport ListingContent from '@containers/ListingContent';\nimport { actions } from '../../app/root-actions';\nimport { wrapper } from '../../app/store';\nimport PageSkeleton from '@layouts';\nimport { type StaticPaths } from '@types/next';\nimport { type Filters } from '@types/product';\nimport { type WrapperParamsStaticProps } from '@types/redux';\nimport {\n  type CmsApiQuery,\n  type NavigationApiQuery,\n  type ProductApiQuery,\n  type BrandListApiQuery,\n} from '../../types/apiQueries';\nimport { getFilterValues } from '@helpers/page';\nimport config from '@config';\n\ntype ReqDataPromises = [NavigationApiQuery, CmsApiQuery, ProductApiQuery, BrandListApiQuery];\n\nconst ListingPage = () => {\n  return (\n    <PageSkeleton>\n      <ListingContent />\n    </PageSkeleton>\n  );\n};\n\nexport async function getStaticPaths(): StaticPaths {\n  return {\n    paths: config.productListingStaticPaths,\n    fallback: true,\n  };\n}\n\nexport const getStaticProps = wrapper.getStaticProps(\n  async ({ store, params }: WrapperParamsStaticProps): Promise<any> => {\n    const homeCmsQuery = 'listingContent, productViewContent, marketing';\n    const [section, productType, filterPathKey, filterValues] = params.slug;\n    const filters: Filters = getFilterValues(filterPathKey, filterValues);\n    const productCountStart = 0;\n    const productCountEnd = 100;\n    const [navData, cmsData, productData, brandList]: ReqDataPromises = await Promise.all([\n      await buildRequests.getNavigationData(),\n      await buildRequests.getCmsContent(homeCmsQuery),\n      await buildRequests.getProductData(\n        section,\n        productType,\n        productCountStart,\n        productCountEnd,\n        filters\n      ),\n      await buildRequests.getBrandList(),\n    ]);\n\n    const navigationProps = getNavigationProps(navData);\n    store.dispatch(actions.setNavigationData(navigationProps.affiliateData));\n    store.dispatch(actions.setProductData(productData.categoryData, filters, {}));\n    store.dispatch(actions.setCmsData(cmsData));\n    store.dispatch(actions.setBrandList(brandList));\n  }\n);\n\nexport default ListingPage;\n"]},"metadata":{},"sourceType":"module"}