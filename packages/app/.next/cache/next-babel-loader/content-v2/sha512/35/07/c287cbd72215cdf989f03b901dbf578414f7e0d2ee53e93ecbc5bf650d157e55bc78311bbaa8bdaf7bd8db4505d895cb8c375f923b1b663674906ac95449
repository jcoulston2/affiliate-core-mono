{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/StickyHeader/StickyHeader.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport { shadowBottom } from '@styles/commonStyles';\nconst StickHeaderWrapper = styled.div.withConfig({\n  displayName: \"StickyHeader__StickHeaderWrapper\",\n  componentId: \"sc-1jsa0sh-0\"\n})([\"width:100%;\", \" \", \"\"], ({\n  sticky,\n  height\n}) => sticky && `    \n    height: ${height}px;    \n    > ${StyledCmsGrid} {      \n      position: fixed;\n      z-index: 99;\n      width: 100%;\n      top: 0px;  \n      left: 0px;\n      ${shadowBottom}\n    }  \n  `, ({\n  background\n}) => background && `\n    > div {\n      background ${background};\n    }\n    \n  `);\nexport default function StickyHeader({\n  children,\n  background,\n  padding\n}) {\n  var _ref$current;\n\n  const ref = useRef(null);\n  const {\n    0: sticky,\n    1: setSticky\n  } = useState(false);\n\n  const handleScroll = () => {\n    document.addEventListener('scroll', () => {\n      if (ref !== null && ref !== void 0 && ref.current) {\n        setSticky(ref.current.getBoundingClientRect().top < 0);\n      }\n    });\n  };\n\n  useEffect(() => {\n    handleScroll();\n  }, []);\n  return __jsx(StickHeaderWrapper, {\n    height: (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.clientHeight,\n    background: background,\n    sticky: sticky,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(StyledCmsGrid, _extends({}, sticky ? {\n    padding\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/units/StickyHeader/StickyHeader.js"],"names":["React","useEffect","useState","useRef","styled","StyledCmsGrid","shadowBottom","StickHeaderWrapper","div","sticky","height","background","StickyHeader","children","padding","ref","setSticky","handleScroll","document","addEventListener","current","getBoundingClientRect","top","clientHeight"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AAQA,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,6BAGpB,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KACAD,MAAM,IACL;AACL,cAAcC,MAAO;AACrB,QAAQL,aAAc;AACtB;AACA;AACA;AACA;AACA;AACA,QAAQC,YAAa;AACrB;AACA,GAfwB,EAiBpB,CAAC;AAAEK,EAAAA;AAAF,CAAD,KACAA,UAAU,IACT;AACL;AACA,mBAAmBA,UAAW;AAC9B;AACA;AACA,GAxBwB,CAAxB;AA2BA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,UAAZ;AAAwBG,EAAAA;AAAxB,CAAtB,EAA4E;AAAA;;AACzF,QAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASO;AAAT,MAAsBd,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMe,YAAY,GAAG,MAAY;AAC/BC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACxC,UAAIJ,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAEK,OAAT,EAAkB;AAChBJ,QAAAA,SAAS,CAACD,GAAG,CAACK,OAAJ,CAAYC,qBAAZ,GAAoCC,GAApC,GAA0C,CAA3C,CAAT;AACD;AACF,KAJD;AAKD,GAND;;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,kBAAD;AACE,IAAA,MAAM,kBAAEF,GAAG,CAACK,OAAN,iDAAE,aAAaG,YADvB;AAEE,IAAA,UAAU,EAAEZ,UAFd;AAGE,IAAA,MAAM,EAAEF,MAHV;AAIE,IAAA,GAAG,EAAEM,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,aAAD,eAAoBN,MAAM,GAAG;AAAEK,IAAAA;AAAF,GAAH,GAAiB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAiDD,QAAjD,CALF,CADF;AASD","sourcesContent":["//@flow\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport { type CmsResponsiveString } from '@types/cms';\nimport { shadowBottom } from '@styles/commonStyles';\n\ntype StickyHeaderProps = {\n  children: any,\n  background: string,\n  padding: CmsResponsiveString,\n};\n\nconst StickHeaderWrapper = styled.div`\n  width: 100%;\n\n  ${({ sticky, height }) =>\n    sticky &&\n    `    \n    height: ${height}px;    \n    > ${StyledCmsGrid} {      \n      position: fixed;\n      z-index: 99;\n      width: 100%;\n      top: 0px;  \n      left: 0px;\n      ${shadowBottom}\n    }  \n  `}\n\n  ${({ background }) =>\n    background &&\n    `\n    > div {\n      background ${background};\n    }\n    \n  `}\n`;\n\nexport default function StickyHeader({ children, background, padding }: StickyHeaderProps) {\n  const ref = useRef(null);\n  const [sticky, setSticky] = useState(false);\n\n  const handleScroll = (): void => {\n    document.addEventListener('scroll', () => {\n      if (ref?.current) {\n        setSticky(ref.current.getBoundingClientRect().top < 0);\n      }\n    });\n  };\n\n  useEffect(() => {\n    handleScroll();\n  }, []);\n\n  return (\n    <StickHeaderWrapper\n      height={ref.current?.clientHeight}\n      background={background}\n      sticky={sticky}\n      ref={ref}>\n      <StyledCmsGrid {...(sticky ? { padding } : {})}>{children}</StyledCmsGrid>\n    </StickHeaderWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}