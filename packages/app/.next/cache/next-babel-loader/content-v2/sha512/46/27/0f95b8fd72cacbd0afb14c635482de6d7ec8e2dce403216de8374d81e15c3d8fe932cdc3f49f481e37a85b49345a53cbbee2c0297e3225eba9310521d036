{"ast":null,"code":"import { buildSchema } from 'graphql';\nexport default buildSchema(`\n  \n  scalar MultiString\n  scalar JSON\n  \n  type Query {\n    categoryData(\n      section: String, \n      productType: String, \n      productCountStart: Int, \n      productCountEnd: Int, \n      priceSort: String, \n      priceThresholdLow: Int, \n      priceThresholdHigh: Int, \n      keyWords: [String], \n      brands: [String],\n      saleThreshold: Int\n    ): ProductData!\n\n    searchData(\n      section: String,\n      category: MultiString,\n      keyTerm: String,\n      productColor: String,\n      brand: String,\n      productCountStart: Int, \n      productCountEnd: Int,\n      priceSort: String, \n      priceThresholdLow: Int, \n      priceThresholdHigh: Int, \n      keyWords: [String],\n      brands: [String],\n      saleThreshold: Int      \n    ): ProductData!\n\n    affiliateData: [ProductData!]!\n    brandList: [String!]!\n  }\n\n  type ProductData {\n    section: String!\n    data: [CatLevel!]!\n  }\n\n  type CatLevel {\n    category: String!\n    label: String!\n    data: [ProductLevel!]!\n    totalProductsInCategory: Int\n    categoryLastUpdated: String\n  }\n\n  type ProductLevel {\n    topLevelData: TopLevelData!\n    detailedData: DetailedData\n    metaData: MetaData!\n  }\n\n  type TopLevelData {\n    name: MultiString\n    price: MultiString\n    wasPrice: MultiString\n    nowPrice: MultiString\n    isSale: Boolean\n    discount: MultiString\n    link: MultiString\n    image: MultiString\n    tags: [String]\n  }\n\n  type Variant {\n    variantText: String\n    data: JSON\n  }\n\n  type CustomData {\n    value: [MultiString]\n    isDescriptive: Boolean\n  }\n\n  type Custom {\n    customText: String\n    data: CustomData\n  }  \n\n  type DetailedData {\n    images: MultiString\n    description: MultiString\n    selectedColor: MultiString\n    delivery: MultiString\n    variants: [Variant]\n    custom: [Custom]    \n  }\n\n  type MetaData {\n    domain: String\n    brand: String\n  }\n  \n`);","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/graphQL/schemas/productSchema.js"],"names":["buildSchema"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,eAAenG0B,CAA1B","sourcesContent":["import { buildSchema } from 'graphql';\n\nexport default buildSchema(`\n  \n  scalar MultiString\n  scalar JSON\n  \n  type Query {\n    categoryData(\n      section: String, \n      productType: String, \n      productCountStart: Int, \n      productCountEnd: Int, \n      priceSort: String, \n      priceThresholdLow: Int, \n      priceThresholdHigh: Int, \n      keyWords: [String], \n      brands: [String],\n      saleThreshold: Int\n    ): ProductData!\n\n    searchData(\n      section: String,\n      category: MultiString,\n      keyTerm: String,\n      productColor: String,\n      brand: String,\n      productCountStart: Int, \n      productCountEnd: Int,\n      priceSort: String, \n      priceThresholdLow: Int, \n      priceThresholdHigh: Int, \n      keyWords: [String],\n      brands: [String],\n      saleThreshold: Int      \n    ): ProductData!\n\n    affiliateData: [ProductData!]!\n    brandList: [String!]!\n  }\n\n  type ProductData {\n    section: String!\n    data: [CatLevel!]!\n  }\n\n  type CatLevel {\n    category: String!\n    label: String!\n    data: [ProductLevel!]!\n    totalProductsInCategory: Int\n    categoryLastUpdated: String\n  }\n\n  type ProductLevel {\n    topLevelData: TopLevelData!\n    detailedData: DetailedData\n    metaData: MetaData!\n  }\n\n  type TopLevelData {\n    name: MultiString\n    price: MultiString\n    wasPrice: MultiString\n    nowPrice: MultiString\n    isSale: Boolean\n    discount: MultiString\n    link: MultiString\n    image: MultiString\n    tags: [String]\n  }\n\n  type Variant {\n    variantText: String\n    data: JSON\n  }\n\n  type CustomData {\n    value: [MultiString]\n    isDescriptive: Boolean\n  }\n\n  type Custom {\n    customText: String\n    data: CustomData\n  }  \n\n  type DetailedData {\n    images: MultiString\n    description: MultiString\n    selectedColor: MultiString\n    delivery: MultiString\n    variants: [Variant]\n    custom: [Custom]    \n  }\n\n  type MetaData {\n    domain: String\n    brand: String\n  }\n  \n`);\n"]},"metadata":{},"sourceType":"module"}