{"ast":null,"code":"import _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Filters/FilterChips.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Chip from '@units/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport { useTheme } from '@hooks';\nimport { Highlight } from '@styles/CommonStyledComponents';\nimport { FilterChipWrapper } from './styles';\nimport { urlReverseCase } from '@helpers/common';\nexport default function FilterChips(_ref) {\n  _s();\n\n  var _this = this;\n\n  var priceSort = _ref.priceSort,\n      priceThresholdLow = _ref.priceThresholdLow,\n      priceThresholdHigh = _ref.priceThresholdHigh,\n      saleThreshold = _ref.saleThreshold,\n      setPriceSort = _ref.setPriceSort,\n      setPriceThreshold = _ref.setPriceThreshold,\n      setKeyWords = _ref.setKeyWords,\n      setSection = _ref.setSection,\n      setBrands = _ref.setBrands,\n      setSaleThreshold = _ref.setSaleThreshold,\n      setCategory = _ref.setCategory,\n      triggerFilterRefresh = _ref.triggerFilterRefresh,\n      scaler = _ref.scaler,\n      keyWords = _ref.keyWords,\n      brands = _ref.brands,\n      category = _ref.category,\n      section = _ref.section;\n\n  var _useTheme = useTheme(),\n      brandThemeColors = _useTheme.brandThemeColors;\n\n  var renderCommonChip = function renderCommonChip(label, _onDelete, index) {\n    return __jsx(Chip, {\n      label: label,\n      size: 'small',\n      bgColor: brandThemeColors.commonWhite,\n      key: index,\n      color: \"primary\",\n      useShadow: true,\n      spacing: 20,\n      onDelete: function onDelete() {\n        _onDelete();\n\n        triggerFilterRefresh(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var getChipTitle = function getChipTitle(title, value) {\n    return __jsx(React.Fragment, null, __jsx(Highlight, {\n      weight: 500,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, title, \": \"), urlReverseCase(value));\n  };\n\n  var createChipArrayValues = function createChipArrayValues(arrayValues, label, setter) {\n    return (arrayValues === null || arrayValues === void 0 ? void 0 : arrayValues.map(function (arrayValue) {\n      return {\n        name: arrayValue,\n        label: arrayValue && getChipTitle(label, arrayValue),\n        onDelete: function onDelete() {\n          return setter(function () {\n            return arrayValues.filter(function (k) {\n              return k !== arrayValue;\n            });\n          });\n        },\n        defaultVisibility: true\n      };\n    })) || [];\n  };\n\n  var chipValues = [{\n    name: 'priceSort',\n    label: priceSort && getChipTitle('Price Sort', priceSort),\n    onDelete: function onDelete() {\n      return setPriceSort(null);\n    },\n    defaultVisibility: true\n  }, {\n    name: priceThresholdLow,\n    label: priceThresholdLow && getChipTitle('Price threshold low', priceThresholdLow),\n    onDelete: function onDelete() {\n      return setPriceThreshold([0, parseInt(priceThresholdHigh) / scaler || 100]);\n    },\n    defaultVisibility: true\n  }, {\n    name: priceThresholdHigh,\n    label: priceThresholdHigh && getChipTitle('Price threshold High', priceThresholdHigh),\n    onDelete: function onDelete() {\n      return setPriceThreshold([parseInt(priceThresholdLow) / scaler || 0, 100]);\n    },\n    defaultVisibility: parseInt(priceThresholdHigh) / scaler !== 100\n  }, {\n    name: saleThreshold,\n    label: saleThreshold && getChipTitle('Sale', saleThreshold > 1 ? \"\".concat(saleThreshold, \"% and more\") : 'All sale'),\n    onDelete: function onDelete() {\n      return setSaleThreshold(null);\n    },\n    defaultVisibility: true\n  }, {\n    name: section,\n    label: section && getChipTitle('Section', section || 'all'),\n    onDelete: function onDelete() {\n      return setSection(null);\n    },\n    defaultVisibility: true\n  }].concat(_toConsumableArray(createChipArrayValues(keyWords, 'KeyWord', setKeyWords)), _toConsumableArray(createChipArrayValues(brands, 'Brand', setBrands)), _toConsumableArray(createChipArrayValues(category, 'Category', setCategory)));\n  return __jsx(FilterChipWrapper, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, chipValues.map(function (_ref2, index) {\n    var name = _ref2.name,\n        label = _ref2.label,\n        onDelete = _ref2.onDelete,\n        defaultVisibility = _ref2.defaultVisibility;\n    return !!(defaultVisibility && label) && renderCommonChip(label, onDelete, index);\n  }));\n}\n\n_s(FilterChips, \"wslk1qiFfyCpkTV8MY0+kWeQfdU=\", false, function () {\n  return [useTheme];\n});\n\n_c = FilterChips;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterChips\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Filters/FilterChips.js"],"names":["React","Chip","Grid","useTheme","Highlight","FilterChipWrapper","urlReverseCase","FilterChips","priceSort","priceThresholdLow","priceThresholdHigh","saleThreshold","setPriceSort","setPriceThreshold","setKeyWords","setSection","setBrands","setSaleThreshold","setCategory","triggerFilterRefresh","scaler","keyWords","brands","category","section","brandThemeColors","renderCommonChip","label","onDelete","index","commonWhite","getChipTitle","title","value","createChipArrayValues","arrayValues","setter","map","arrayValue","name","filter","k","defaultVisibility","chipValues","parseInt"],"mappings":"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","sourcesContent":["//@flow\nimport * as React from 'react';\nimport Chip from '@units/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport { type NormalizeFiltersOutput } from './types';\nimport { useTheme } from '@hooks';\nimport { Highlight } from '@styles/CommonStyledComponents';\nimport { FilterChipWrapper } from './styles';\nimport { urlReverseCase } from '@helpers/common';\n\ntype ChipsRestProps = $Exact<{\n  setPriceSort: Function,\n  setPriceThreshold: Function,\n  setKeyWords: Function,\n  setSaleThreshold: Function,\n  triggerFilterRefresh: Function,\n  setCategory: Function,\n  setSection: Function,\n  setBrands: Function,\n  scaler: number,\n}>;\n\ntype FilterChipsProps = {\n  ...ChipsRestProps,\n  ...NormalizeFiltersOutput,\n};\n\nexport default function FilterChips({\n  priceSort,\n  priceThresholdLow,\n  priceThresholdHigh,\n  saleThreshold,\n  setPriceSort,\n  setPriceThreshold,\n  setKeyWords,\n  setSection,\n  setBrands,\n  setSaleThreshold,\n  setCategory,\n  triggerFilterRefresh,\n  scaler,\n  keyWords,\n  brands,\n  category,\n  section,\n}: FilterChipsProps) {\n  const { brandThemeColors } = useTheme();\n  const renderCommonChip = (label: React.Node, onDelete: Function, index: number) => {\n    return (\n      <Chip\n        label={label}\n        size={'small'}\n        bgColor={brandThemeColors.commonWhite}\n        key={index}\n        color=\"primary\"\n        useShadow\n        spacing={20}\n        onDelete={() => {\n          onDelete();\n          triggerFilterRefresh(true);\n        }}\n      />\n    );\n  };\n\n  const getChipTitle = (title: string, value: string | number) => {\n    return (\n      <>\n        <Highlight weight={500}>{title}&#58; </Highlight>\n        {urlReverseCase(value)}\n      </>\n    );\n  };\n\n  const createChipArrayValues = (\n    arrayValues: ?Array<any>,\n    label: string,\n    setter: Function\n  ): Array<{ [string]: any }> => {\n    return (\n      arrayValues?.map((arrayValue) => ({\n        name: arrayValue,\n        label: arrayValue && getChipTitle(label, arrayValue),\n        onDelete: () => setter(() => arrayValues.filter((k) => k !== arrayValue)),\n        defaultVisibility: true,\n      })) || []\n    );\n  };\n\n  const chipValues = [\n    {\n      name: 'priceSort',\n      label: priceSort && getChipTitle('Price Sort', priceSort),\n      onDelete: () => setPriceSort(null),\n      defaultVisibility: true,\n    },\n    {\n      name: priceThresholdLow,\n      label: priceThresholdLow && getChipTitle('Price threshold low', priceThresholdLow),\n      onDelete: () => setPriceThreshold([0, parseInt(priceThresholdHigh) / scaler || 100]),\n      defaultVisibility: true,\n    },\n    {\n      name: priceThresholdHigh,\n      label: priceThresholdHigh && getChipTitle('Price threshold High', priceThresholdHigh),\n      onDelete: () => setPriceThreshold([parseInt(priceThresholdLow) / scaler || 0, 100]),\n      defaultVisibility: parseInt(priceThresholdHigh) / scaler !== 100,\n    },\n    {\n      name: saleThreshold,\n      label:\n        saleThreshold &&\n        getChipTitle('Sale', saleThreshold > 1 ? `${saleThreshold}% and more` : 'All sale'),\n      onDelete: () => setSaleThreshold(null),\n      defaultVisibility: true,\n    },\n    {\n      name: section,\n      label: section && getChipTitle('Section', section || 'all'),\n      onDelete: () => setSection(null),\n      defaultVisibility: true,\n    },\n    ...createChipArrayValues(keyWords, 'KeyWord', setKeyWords),\n    ...createChipArrayValues(brands, 'Brand', setBrands),\n    ...createChipArrayValues(category, 'Category', setCategory),\n  ];\n\n  return (\n    <FilterChipWrapper container>\n      {chipValues.map(\n        ({ name, label, onDelete, defaultVisibility }, index) =>\n          !!(defaultVisibility && label) && renderCommonChip(label, onDelete, index)\n      )}\n    </FilterChipWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}