{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { normalizeFilters } from '@modules/Filters/helper';\nimport { useCms } from '@hooks';\nimport { toArrayNullable, stringifySafe } from '@helpers/common';\nimport { useRouter } from 'next/router';\nimport { isSearch } from './helper';\nexport default function useFilters(defaults) {\n  const router = useRouter();\n  const isSearchPage = isSearch(router);\n  const {\n    productFiltersContent\n  } = useCms('listingContent');\n  const {\n    sliderPriceScaleMultiplier: scaler\n  } = productFiltersContent;\n  const {\n    0: filterDrawOpen,\n    1: setFilterDrawOpen\n  } = useState(false);\n  const {\n    0: priceSort,\n    1: setPriceSort\n  } = useState('recommended');\n  const {\n    0: keyWords,\n    1: setKeyWords\n  } = useState([]);\n  const {\n    0: saleThreshold,\n    1: setSaleThreshold\n  } = useState(null);\n  const {\n    0: hasTouchedSlider,\n    1: setHasTouchedSlider\n  } = useState(null);\n  const {\n    0: filterRefresh,\n    1: triggerFilterRefresh\n  } = useState(false);\n  const {\n    0: priceThreshold,\n    1: setPriceThreshold\n  } = useState([0, 100]);\n  const {\n    0: brands,\n    1: setBrands\n  } = useState([]);\n  const {\n    0: category,\n    1: setCategory\n  } = useState([]);\n  const {\n    0: section,\n    1: setSection\n  } = useState(null);\n\n  const setDefaultFilters = () => {\n    if (!defaults) return;\n    setHasTouchedSlider(!!(defaults.priceThresholdLow || defaults.priceThresholdHigh));\n    setPriceSort(defaults.priceSort || 'recommended');\n    setKeyWords(toArrayNullable(defaults.keyWords) || []);\n    setSaleThreshold(stringifySafe(defaults.saleThreshold));\n    setBrands(toArrayNullable(defaults.brands) || []);\n    setCategory(toArrayNullable(defaults.category) || []);\n    setSection(defaults.section || null);\n    setPriceThreshold([parseInt(defaults.priceThresholdLow) / scaler || 0, parseInt(defaults.priceThresholdHigh) / scaler || 100]);\n  };\n\n  useEffect(() => {\n    setDefaultFilters();\n  }, [defaults]);\n  const searchFilters = isSearchPage ? {\n    category,\n    section\n  } : {};\n  const filterMethods = {\n    setPriceSort,\n    setPriceThreshold,\n    setKeyWords,\n    setSaleThreshold,\n    setFilterDrawOpen,\n    setHasTouchedSlider,\n    triggerFilterRefresh,\n    setBrands,\n    setCategory,\n    setSection\n  };\n\n  const filterState = _objectSpread({\n    filterDrawOpen,\n    priceSort,\n    keyWords,\n    saleThreshold,\n    hasTouchedSlider,\n    filterRefresh,\n    priceThreshold,\n    brands\n  }, searchFilters);\n\n  const normalizedFilters = normalizeFilters(_objectSpread({\n    priceSort,\n    priceThreshold,\n    keyWords,\n    saleThreshold,\n    scaler,\n    hasTouchedSlider,\n    brands\n  }, searchFilters), isSearchPage);\n  return {\n    filterMethods,\n    filterState,\n    normalizedFilters\n  };\n}","map":null,"metadata":{},"sourceType":"module"}