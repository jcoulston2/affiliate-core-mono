{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductListing/ProductListing.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@units/Button';\nimport Typography from '@units/Typography';\nimport Loader from '@units/Loader';\nimport Card from '@units/Card';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { getScrollTop, setScrollTop, navigateToUrl, urlContainsQuery } from '@helpers/common';\nimport { getFiltersFromUrl } from '@helpers/page';\nimport { SEARCH_PATH } from '@constants';\nimport { useRouter } from 'next/router';\nimport { getProductLink } from '@helpers/page';\nimport { useWishListAction, useCms } from '@hooks';\nimport { useFilters } from '@modules/Filters';\nimport { ProductListingContainer, LoadMoreProductsCopy, ListingInformation } from './styles';\nimport PorductGridControls from './PorductGridControls';\nimport { VIEW_MODE, FLICK_VIEW_QUERY } from '@constants';\nimport { useTheme } from '@hooks';\nimport NoMoreProductsIndicator from './NoMoreProductsIndicator';\nimport memoize from 'fast-memoize';\nimport ProductsView from './ProductsView';\nexport default function ProductListing(_ref) {\n  let {\n    initialProducts,\n    fetchedProducts,\n    initialProductsPerPage,\n    listingContentInnerMaxWidth,\n    listingContentInnerPadding,\n    noMoreProductsCopyText,\n    noMoreProductsCopy,\n    loadMoreProductsButton,\n    loadMoreProductsCopy,\n    fetchProducts,\n    totalCategoryProducts,\n    productSearchValues,\n    fetchProductsInSearch,\n    section,\n    category,\n    setLoading,\n    loading,\n    openProductDetailView,\n    populateProductView,\n    productFilters,\n    setClientFilterStatus,\n    noSearchResultText,\n    flickViewTitleCopy,\n    flickViewTitleText\n  } = _ref,\n      listingItemProps = _objectWithoutProperties(_ref, [\"initialProducts\", \"fetchedProducts\", \"initialProductsPerPage\", \"listingContentInnerMaxWidth\", \"listingContentInnerPadding\", \"noMoreProductsCopyText\", \"noMoreProductsCopy\", \"loadMoreProductsButton\", \"loadMoreProductsCopy\", \"fetchProducts\", \"totalCategoryProducts\", \"productSearchValues\", \"fetchProductsInSearch\", \"section\", \"category\", \"setLoading\", \"loading\", \"openProductDetailView\", \"populateProductView\", \"productFilters\", \"setClientFilterStatus\", \"noSearchResultText\", \"flickViewTitleCopy\", \"flickViewTitleText\"]);\n\n  const {\n    0: viewMode,\n    1: setViewMode\n  } = useState(VIEW_MODE.GRID_MODE);\n  const {\n    0: lastScrolltop,\n    1: setLastScrollTop\n  } = useState(null);\n  const {\n    productFiltersContent\n  } = useCms('listingContent');\n  const {\n    textTheme\n  } = useTheme();\n  const {\n    filterState,\n    filterMethods,\n    normalizedFilters\n  } = useFilters(productFilters);\n  const router = useRouter();\n  const wishListAction = useWishListAction('add');\n  const {\n    sliderPriceScaleMultiplier: scaler\n  } = productFiltersContent;\n  const allProducts = [...initialProducts, ...fetchedProducts];\n  const numberOfProducts = allProducts.length;\n  const nextFetchEndCount = numberOfProducts + initialProductsPerPage;\n  const showNoMoreProducts = numberOfProducts >= totalCategoryProducts;\n  const filters = getFiltersFromUrl();\n  const isSearchPage = router.pathname.includes(SEARCH_PATH);\n  const isFlickView = viewMode === VIEW_MODE.FLICK_MODE;\n\n  const filterProps = _objectSpread({\n    section,\n    category,\n    productFilters,\n    productSearchValues,\n    fetchProducts,\n    fetchProductsInSearch,\n    setClientFilterStatus,\n    setLoading,\n    productFiltersContent,\n    scaler,\n    normalizedFilters,\n    filterMethods\n  }, filterState);\n\n  const openCardAction = product => {\n    try {\n      openProductDetailView();\n      populateProductView(product);\n    } catch (e) {\n      console.warn(e);\n      navigateToUrl(getProductLink(product));\n    }\n  };\n\n  const openCardActionMemo = useCallback(memoize(product => () => openCardAction(product)), []);\n\n  const setScroll = () => {\n    if (document.scrollingElement) {\n      setLastScrollTop(getScrollTop());\n    }\n  };\n\n  const loadMoreProducts = () => {\n    setLoading(true);\n    setScroll();\n\n    if (isSearchPage) {\n      fetchProductsInSearch(productSearchValues, numberOfProducts, nextFetchEndCount, filters, true);\n    } else {\n      fetchProducts(section, category, numberOfProducts, nextFetchEndCount, filters, true);\n    }\n  };\n\n  const maintainScrollTop = () => {\n    if (document.scrollingElement && lastScrolltop !== null) {\n      setScrollTop(lastScrolltop);\n      setLastScrollTop(null);\n    }\n  };\n\n  useEffect(() => {\n    maintainScrollTop();\n  }, [numberOfProducts]);\n  useEffect(() => {\n    if (urlContainsQuery(FLICK_VIEW_QUERY)) {\n      setViewMode(VIEW_MODE.FLICK_MODE);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(PorductGridControls, {\n    filterProps: filterProps,\n    setViewMode: setViewMode,\n    viewMode: viewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), __jsx(Loader, {\n    active: loading,\n    useBackdrop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), __jsx(ProductListingContainer, {\n    padding: listingContentInnerPadding,\n    maxWidth: listingContentInnerMaxWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, __jsx(ProductsView, _extends({\n    isFlickView,\n    setViewMode,\n    flickViewTitleCopy,\n    flickViewTitleText,\n    wishListAction,\n    openCardAction,\n    allProducts,\n    loadMoreProducts,\n    showNoMoreProducts,\n    noMoreProductsCopyText,\n    openCardActionMemo,\n    filterProps\n  }, listingItemProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  })), !numberOfProducts && __jsx(NoMoreProductsIndicator, {\n    text: !loading && noSearchResultText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 31\n    }\n  }), __jsx(ListingInformation, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, !isFlickView && __jsx(Grid, {\n    item: true,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, __jsx(LoadMoreProductsCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    tag: \"h3\",\n    fullwidth: true,\n    typeStyles: loadMoreProductsCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Showing \", numberOfProducts, \" item(s)\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 8,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, !isFlickView && showNoMoreProducts && __jsx(Card, {\n    padding: \"0px\",\n    margin: \"20px 0px 20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: noMoreProductsCopy,\n    color: textTheme.slightlyFadedTextColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, noMoreProductsCopyText)), !showNoMoreProducts && !isFlickView && __jsx(Button, _extends({}, loadMoreProductsButton, {\n    onClick: loadMoreProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }))), __jsx(Spacer, {\n    h: [{\n      value: 20,\n      breakPoint: 'max_xs'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/ProductListing/ProductListing.js"],"names":["React","useEffect","useState","useCallback","Grid","Button","Typography","Loader","Card","Spacer","getScrollTop","setScrollTop","navigateToUrl","urlContainsQuery","getFiltersFromUrl","SEARCH_PATH","useRouter","getProductLink","useWishListAction","useCms","useFilters","ProductListingContainer","LoadMoreProductsCopy","ListingInformation","PorductGridControls","VIEW_MODE","FLICK_VIEW_QUERY","useTheme","NoMoreProductsIndicator","memoize","ProductsView","ProductListing","initialProducts","fetchedProducts","initialProductsPerPage","listingContentInnerMaxWidth","listingContentInnerPadding","noMoreProductsCopyText","noMoreProductsCopy","loadMoreProductsButton","loadMoreProductsCopy","fetchProducts","totalCategoryProducts","productSearchValues","fetchProductsInSearch","section","category","setLoading","loading","openProductDetailView","populateProductView","productFilters","setClientFilterStatus","noSearchResultText","flickViewTitleCopy","flickViewTitleText","listingItemProps","viewMode","setViewMode","GRID_MODE","lastScrolltop","setLastScrollTop","productFiltersContent","textTheme","filterState","filterMethods","normalizedFilters","router","wishListAction","sliderPriceScaleMultiplier","scaler","allProducts","numberOfProducts","length","nextFetchEndCount","showNoMoreProducts","filters","isSearchPage","pathname","includes","isFlickView","FLICK_MODE","filterProps","openCardAction","product","e","console","warn","openCardActionMemo","setScroll","document","scrollingElement","loadMoreProducts","maintainScrollTop","slightlyFadedTextColor","value","breakPoint"],"mappings":"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","sourcesContent":["//@flow\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@units/Button';\nimport Typography from '@units/Typography';\nimport { type CmsCopy, type CmsButton, type CmsResponsiveString } from '@types/cms';\nimport { type Filters as FilterType, type ProductData } from '@types/product';\nimport Loader from '@units/Loader';\nimport Card from '@units/Card';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { getScrollTop, setScrollTop, navigateToUrl, urlContainsQuery } from '@helpers/common';\nimport { type PredictiveSearch } from '@types/search';\nimport { getFiltersFromUrl } from '@helpers/page';\nimport { SEARCH_PATH } from '@constants';\nimport { useRouter } from 'next/router';\nimport { getProductLink } from '@helpers/page';\nimport { useWishListAction, useCms } from '@hooks';\nimport { useFilters } from '@modules/Filters';\nimport { ProductListingContainer, LoadMoreProductsCopy, ListingInformation } from './styles';\nimport PorductGridControls from './PorductGridControls';\nimport { VIEW_MODE, FLICK_VIEW_QUERY } from '@constants';\nimport { useTheme } from '@hooks';\nimport NoMoreProductsIndicator from './NoMoreProductsIndicator';\nimport memoize from 'fast-memoize';\nimport ProductsView from './ProductsView';\n\ntype ProductListingProps = $Exact<{\n  initialProducts: Array<ProductData>,\n  fetchedProducts: Array<ProductData>,\n  initialProductsPerPage: number,\n  listingContentInnerMaxWidth: number,\n  listingContentInnerPadding: CmsResponsiveString,\n  fetchProducts: Function,\n  setClientFilterStatus: Function,\n  loadMoreProductsButton: CmsButton,\n  productCountStart: number,\n  productCountEnd: number,\n  section: string,\n  category: string,\n  totalCategoryProducts: number,\n  noMoreProductsCopyText: string,\n  noSearchResultText: string,\n  noMoreProductsCopy: CmsCopy,\n  loadMoreProductsCopy: CmsCopy,\n  hasFiltersSetFromClient: boolean,\n  productFilters: FilterType,\n  productSearchValues: PredictiveSearch,\n  fetchProductsInSearch: Function,\n  openProductDetailView: Function,\n  populateProductView: Function,\n  setLoading: Function,\n  loading: boolean,\n  productFilters: FilterType,\n  flickViewTitleText: string,\n  flickViewTitleCopy: CmsCopy,\n}>;\n\nexport default function ProductListing({\n  initialProducts,\n  fetchedProducts,\n  initialProductsPerPage,\n  listingContentInnerMaxWidth,\n  listingContentInnerPadding,\n  noMoreProductsCopyText,\n  noMoreProductsCopy,\n  loadMoreProductsButton,\n  loadMoreProductsCopy,\n  fetchProducts,\n  totalCategoryProducts,\n  productSearchValues,\n  fetchProductsInSearch,\n  section,\n  category,\n  setLoading,\n  loading,\n  openProductDetailView,\n  populateProductView,\n  productFilters,\n  setClientFilterStatus,\n  noSearchResultText,\n  flickViewTitleCopy,\n  flickViewTitleText,\n  ...listingItemProps\n}: ProductListingProps) {\n  const [viewMode, setViewMode] = useState(VIEW_MODE.GRID_MODE);\n  const [lastScrolltop, setLastScrollTop] = useState(null);\n  const { productFiltersContent } = useCms('listingContent');\n  const { textTheme } = useTheme();\n  const { filterState, filterMethods, normalizedFilters } = useFilters(productFilters);\n  const router = useRouter();\n  const wishListAction = useWishListAction('add');\n  const { sliderPriceScaleMultiplier: scaler } = productFiltersContent;\n  const allProducts = [...initialProducts, ...fetchedProducts];\n  const numberOfProducts = allProducts.length;\n  const nextFetchEndCount = numberOfProducts + initialProductsPerPage;\n  const showNoMoreProducts = numberOfProducts >= totalCategoryProducts;\n  const filters = getFiltersFromUrl();\n  const isSearchPage = router.pathname.includes(SEARCH_PATH);\n  const isFlickView = viewMode === VIEW_MODE.FLICK_MODE;\n  const filterProps = {\n    section,\n    category,\n    productFilters,\n    productSearchValues,\n    fetchProducts,\n    fetchProductsInSearch,\n    setClientFilterStatus,\n    setLoading,\n    productFiltersContent,\n    scaler,\n    normalizedFilters,\n    filterMethods,\n    ...filterState,\n  };\n\n  const openCardAction = (product: ProductData): void => {\n    try {\n      openProductDetailView();\n      populateProductView(product);\n    } catch (e) {\n      console.warn(e);\n      navigateToUrl(getProductLink(product));\n    }\n  };\n\n  const openCardActionMemo = useCallback(\n    memoize((product: ProductData) => () => openCardAction(product)),\n    []\n  );\n\n  const setScroll = (): void => {\n    if (document.scrollingElement) {\n      setLastScrollTop(getScrollTop());\n    }\n  };\n\n  const loadMoreProducts = (): void => {\n    setLoading(true);\n    setScroll();\n    if (isSearchPage) {\n      fetchProductsInSearch(\n        productSearchValues,\n        numberOfProducts,\n        nextFetchEndCount,\n        filters,\n        true\n      );\n    } else {\n      fetchProducts(section, category, numberOfProducts, nextFetchEndCount, filters, true);\n    }\n  };\n\n  const maintainScrollTop = (): void => {\n    if (document.scrollingElement && lastScrolltop !== null) {\n      setScrollTop(lastScrolltop);\n      setLastScrollTop(null);\n    }\n  };\n\n  useEffect(() => {\n    maintainScrollTop();\n  }, [numberOfProducts]);\n\n  useEffect(() => {\n    if (urlContainsQuery(FLICK_VIEW_QUERY)) {\n      setViewMode(VIEW_MODE.FLICK_MODE);\n    }\n  }, []);\n\n  return (\n    <>\n      <PorductGridControls\n        filterProps={filterProps}\n        setViewMode={setViewMode}\n        viewMode={viewMode}\n      />\n      <Loader active={loading} useBackdrop={true} />\n      <ProductListingContainer\n        padding={listingContentInnerPadding}\n        maxWidth={listingContentInnerMaxWidth}>\n        <ProductsView\n          {...{\n            isFlickView,\n            setViewMode,\n            flickViewTitleCopy,\n            flickViewTitleText,\n            wishListAction,\n            openCardAction,\n            allProducts,\n            loadMoreProducts,\n            showNoMoreProducts,\n            noMoreProductsCopyText,\n            openCardActionMemo,\n            filterProps,\n          }}\n          {...listingItemProps}\n        />\n        {!numberOfProducts && <NoMoreProductsIndicator text={!loading && noSearchResultText} />}\n        <ListingInformation container justify=\"center\">\n          {!isFlickView && (\n            <Grid item lg={5}>\n              <LoadMoreProductsCopy>\n                <Typography tag=\"h3\" fullwidth typeStyles={loadMoreProductsCopy}>\n                  Showing {numberOfProducts} item&#40;s&#41;\n                </Typography>\n              </LoadMoreProductsCopy>\n            </Grid>\n          )}\n\n          <Grid item xs={12} lg={8} container justify=\"center\">\n            {!isFlickView && showNoMoreProducts && (\n              <Card padding=\"0px\" margin=\"20px 0px 20px\">\n                <Typography\n                  tag=\"p\"\n                  typeStyles={noMoreProductsCopy}\n                  color={textTheme.slightlyFadedTextColor}>\n                  {noMoreProductsCopyText}\n                </Typography>\n              </Card>\n            )}\n\n            {!showNoMoreProducts && !isFlickView && (\n              <Button {...loadMoreProductsButton} onClick={loadMoreProducts} />\n            )}\n          </Grid>\n          <Spacer h={[{ value: 20, breakPoint: 'max_xs' }]} />\n        </ListingInformation>\n      </ProductListingContainer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}