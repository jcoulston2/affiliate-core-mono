{"ast":null,"code":"import _asyncToGenerator from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @info This is an alternative to using useCms hook, and can be used outside React components if needed.\n * Uing this requires passing in the cmsContext as a param e.g.\n *\n * const cmsContext = useCmsContext();\n * const cmsContent = getCmsContent(cmsContext, 'theme');\n *\n * When linking to the cms it's preferred to the hook as easier\n *\n */\nexport function getCmsContent(context, cmsContainer, cmsContent) {\n  var content = context && context[cmsContainer];\n\n  if (!cmsContent) {\n    return content;\n  } else {\n    return content && content[cmsContent];\n  }\n}\nexport function getCopy(copy, toReplace) {\n  return copy && copy.replace(/\\{\\}/g, toReplace || '');\n}\nexport function setCommonCmsAttr(value) {\n  return ['mobile', 'tablet', 'desktop'].reduce(function (acc, cur) {\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur, value));\n  }, {});\n}\nexport function injectLocalCms() {\n  return _injectLocalCms.apply(this, arguments);\n}\n\nfunction _injectLocalCms() {\n  _injectLocalCms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$import, cms;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('../../../affiliate-config');\n\n          case 2:\n            _yield$import = _context.sent;\n            cms = _yield$import.cms;\n            return _context.abrupt(\"return\", cms);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _injectLocalCms.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/helpers/cms/cms.js"],"names":["getCmsContent","context","cmsContainer","cmsContent","content","getCopy","copy","toReplace","replace","setCommonCmsAttr","value","reduce","acc","cur","injectLocalCms","cms"],"mappings":";;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CACLC,OADK,EAELC,YAFK,EAGLC,UAHK,EAIO;AACZ,MAAMC,OAAO,GAAGH,OAAO,IAAIA,OAAO,CAACC,YAAD,CAAlC;;AACA,MAAI,CAACC,UAAL,EAAiB;AACf,WAAOC,OAAP;AACD,GAFD,MAEO;AACL,WAAOA,OAAO,IAAIA,OAAO,CAACD,UAAD,CAAzB;AACD;AACF;AAED,OAAO,SAASE,OAAT,CAAiBC,IAAjB,EAA+BC,SAA/B,EAA0D;AAC/D,SAAOD,IAAI,IAAIA,IAAI,CAACE,OAAL,CAAa,OAAb,EAAsBD,SAAS,IAAI,EAAnC,CAAf;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BC,KAA1B,EAAsE;AAC3E,SAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgCC,MAAhC,CAAuC,UAACC,GAAD,EAAcC,GAAd,EAA8B;AAC1E,2CACKD,GADL,2BAEGC,GAFH,EAESH,KAFT;AAID,GALM,EAKJ,EALI,CAAP;AAMD;AAED,gBAAsBI,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyB,OAAO,2BAAP,CADzB;;AAAA;AAAA;AACGC,YAAAA,GADH,iBACGA,GADH;AAAA,6CAEEA,GAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["//@flow\nimport { type CommonJson } from '../../types/other';\nimport { type CmsResponsiveMixed } from '../../types/cms';\n\n/**\n * @info This is an alternative to using useCms hook, and can be used outside React components if needed.\n * Uing this requires passing in the cmsContext as a param e.g.\n *\n * const cmsContext = useCmsContext();\n * const cmsContent = getCmsContent(cmsContext, 'theme');\n *\n * When linking to the cms it's preferred to the hook as easier\n *\n */\nexport function getCmsContent(\n  context: { [string]: any },\n  cmsContainer: string,\n  cmsContent: string\n): CommonJson {\n  const content = context && context[cmsContainer];\n  if (!cmsContent) {\n    return content;\n  } else {\n    return content && content[cmsContent];\n  }\n}\n\nexport function getCopy(copy: string, toReplace: string): string {\n  return copy && copy.replace(/\\{\\}/g, toReplace || '');\n}\n\nexport function setCommonCmsAttr(value: string | number): CmsResponsiveMixed {\n  return ['mobile', 'tablet', 'desktop'].reduce((acc: Object, cur: string) => {\n    return {\n      ...acc,\n      [cur]: value,\n    };\n  }, {});\n}\n\nexport async function injectLocalCms(): CommonJson {\n  const { cms }: Object = await import('../../../affiliate-config');\n  return cms;\n}\n"]},"metadata":{},"sourceType":"module"}