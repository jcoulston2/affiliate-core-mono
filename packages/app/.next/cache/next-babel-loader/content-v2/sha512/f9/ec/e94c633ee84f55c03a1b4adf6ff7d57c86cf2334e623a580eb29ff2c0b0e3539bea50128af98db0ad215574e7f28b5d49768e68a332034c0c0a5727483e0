{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport bp from '@styles/breakPoints';\nimport { useTheme, useDeviceBreakpoint } from '@hooks';\nimport Collapse from '@material-ui/core/Collapse';\nimport { CenterAll } from '@styles/CommonStyledComponents';\nconst StyledCard = styled.section.withConfig({\n  displayName: \"Card__StyledCard\",\n  componentId: \"sd1ngg-0\"\n})([\"position:relative;overflow:\", \";box-shadow:\", \";border-radius:\", \"px;width:\", \";bottom:\", \";padding:\", \";margin:\", \";background:\", \";transition:transform 0.2s ease-in-out;\", \"{padding:\", \";bottom:\", \";margin:\", \";}\", \"{padding:\", \";bottom:\", \";margin:\", \";}&:hover{\", \" \", \" \", \" \", \"}\"], props => props.overflow, props => props.cardTheme.shadow, props => props.cardTheme.borderRadius, props => props.fullWidth ? '100%' : 'auto', props => {\n  var _props$cardOffset;\n\n  return `${((_props$cardOffset = props.cardOffset) === null || _props$cardOffset === void 0 ? void 0 : _props$cardOffset.desktop) || 0}px`;\n}, props => {\n  var _props$padding;\n\n  return ((_props$padding = props.padding) === null || _props$padding === void 0 ? void 0 : _props$padding.desktop) || props.padding || props.cardTheme.defaultPadding;\n}, props => {\n  var _props$margin;\n\n  return ((_props$margin = props.margin) === null || _props$margin === void 0 ? void 0 : _props$margin.desktop) || props.margin || '0px';\n}, props => props.cardTheme.background, bp.max_sm, props => {\n  var _props$padding2;\n\n  return ((_props$padding2 = props.padding) === null || _props$padding2 === void 0 ? void 0 : _props$padding2.tablet) || props.padding || props.cardTheme.defaultPadding;\n}, props => {\n  var _props$cardOffset2;\n\n  return `${((_props$cardOffset2 = props.cardOffset) === null || _props$cardOffset2 === void 0 ? void 0 : _props$cardOffset2.tablet) || 0}px`;\n}, props => {\n  var _props$margin2;\n\n  return ((_props$margin2 = props.margin) === null || _props$margin2 === void 0 ? void 0 : _props$margin2.tablet) || props.margin || '0px';\n}, bp.max_xs, props => {\n  var _props$padding3;\n\n  return ((_props$padding3 = props.padding) === null || _props$padding3 === void 0 ? void 0 : _props$padding3.mobile) || props.padding || props.cardTheme.defaultPadding;\n}, props => {\n  var _props$cardOffset3;\n\n  return `${((_props$cardOffset3 = props.cardOffset) === null || _props$cardOffset3 === void 0 ? void 0 : _props$cardOffset3.mobile) || 0}px`;\n}, props => {\n  var _props$margin3;\n\n  return ((_props$margin3 = props.margin) === null || _props$margin3 === void 0 ? void 0 : _props$margin3.mobile) || props.margin || '0px';\n}, props => props.hoverEffect === 'grow' ? 'transform: scale(1.1);' : '', props => props.hoverEffect === 'tilt' ? 'transform: rotate(6deg);' : '', props => props.hoverEffect === 'raise' ? 'translateY(-20px)' : '', props => props.hoverEffect ? 'cursor: pointer;' : '');\nconst ShowMoreCopy = styled.div.withConfig({\n  displayName: \"Card__ShowMoreCopy\",\n  componentId: \"sd1ngg-1\"\n})([\"position:relative;top:\", \";p{font-size:14px;color:\", \";cursor:pointer;&:hover{opacity:0.7;}}\"], props => props.offsetTop ? `${props.offsetTop}px` : 'auto', props => props.color);\nexport default function Card({\n  children,\n  padding,\n  margin,\n  cardOffset,\n  fullWidth,\n  expand,\n  hoverEffect,\n  overflow\n}) {\n  var _expand$deviceBreakpo, _expand$deviceBreakpo2, _ref$current;\n\n  const {\n    cardTheme,\n    textTheme\n  } = useTheme();\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n  const {\n    0: cardCollapsedHeight,\n    1: setCardCollapsedHeight\n  } = useState(false);\n  const deviceBreakpoint = useDeviceBreakpoint();\n  const ref = useRef();\n  const collapsedHeight = expand && ((_expand$deviceBreakpo = expand[deviceBreakpoint]) === null || _expand$deviceBreakpo === void 0 ? void 0 : _expand$deviceBreakpo.collapsedHeight);\n  const readMoreCopyOffsetTop = expand && ((_expand$deviceBreakpo2 = expand[deviceBreakpoint]) === null || _expand$deviceBreakpo2 === void 0 ? void 0 : _expand$deviceBreakpo2.readMoreCopyOffsetTop);\n  const renderInnerCard = collapsedHeight ? __jsx(Collapse, {\n    in: expanded,\n    collapsedHeight: collapsedHeight\n  }, __jsx(\"div\", {\n    ref: ref\n  }, children)) : __jsx(React.Fragment, null, children);\n  const refHeight = ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.clientHeight) || 0;\n  const revealShowMoreText = !!collapsedHeight && refHeight > collapsedHeight; // Required for the \"show more\" copy to appear on the second render.\n\n  useEffect(() => {\n    if (collapsedHeight) {\n      setCardCollapsedHeight(collapsedHeight);\n    }\n  }, []);\n  return __jsx(StyledCard, {\n    padding: padding,\n    margin: margin,\n    cardOffset: cardOffset,\n    fullWidth: fullWidth,\n    cardTheme: cardTheme,\n    hoverEffect: hoverEffect,\n    overflow: collapsedHeight ? 'hidden' : overflow\n  }, renderInnerCard, cardCollapsedHeight && __jsx(ShowMoreCopy, {\n    offsetTop: readMoreCopyOffsetTop,\n    color: textTheme.slightlyFadedTextColor,\n    onClick: () => setExpanded(!expanded)\n  }, revealShowMoreText && __jsx(CenterAll, null, __jsx(\"p\", null, \"Show \", expanded ? 'less' : 'more'))));\n}","map":null,"metadata":{},"sourceType":"module"}