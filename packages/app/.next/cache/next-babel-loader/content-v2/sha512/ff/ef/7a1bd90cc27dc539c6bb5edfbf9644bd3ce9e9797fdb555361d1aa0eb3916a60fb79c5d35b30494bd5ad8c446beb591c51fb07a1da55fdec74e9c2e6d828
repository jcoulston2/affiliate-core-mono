{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Navigation/DesktopSubNavContainers/DesktopSubNavContainers.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Link from 'next/link';\nimport { DESKTOP_NAV_BAR_REF } from '@constants';\nimport chunk from 'lodash/chunk';\nimport Typography from '@units/Typography';\nimport Button from '@units/Button';\nimport Card from '@units/Card';\nimport usePwa from '@containers/Pwa/hook';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useThemeColor, useCms } from '@hooks';\nimport { LabelContent, StyledMenu, NavLinksContainer, CollapseContainer, MenuItemTitle, NavLink, NavLinkChunk, FirstLevelNavTitle, NavButtons, ThirdLevelNavContainer } from './styles';\nimport { PLP_PATH } from '@constants';\nimport { isServer, getNode } from '@helpers/common';\nexport default function SubNavContainers({\n  title,\n  subNav,\n  desktopLinksPerColumn,\n  desktopNavLink,\n  desktopNavLabel,\n  quickFinderCopy,\n  setQuickFinderOpen,\n  resetProductFeeds\n}) {\n  const {\n    0: subLevelNavItemExpanded,\n    1: setSubLevelNavItemExpanded\n  } = useState([]);\n  const {\n    0: navBarHeight,\n    1: setNavBarHeight\n  } = useState(100);\n  const primaryColor = useThemeColor('primary');\n  const {\n    isPwaInitiated,\n    initPwaPrompt\n  } = usePwa();\n  const {\n    pwa: pwaCms\n  } = useCms('other');\n  useEffect(() => {\n    if (!isServer()) {\n      var _getNode;\n\n      setNavBarHeight(((_getNode = getNode(DESKTOP_NAV_BAR_REF)) === null || _getNode === void 0 ? void 0 : _getNode.clientHeight) || 0);\n    }\n  });\n\n  const handleSubLevelnavItemClick = index => () => {\n    if (!subLevelNavItemExpanded.length) {\n      return setSubLevelNavItemExpanded([index]);\n    } // If a subnav is already expanded, remove it's index i.e. collapse it\n\n\n    if (subLevelNavItemExpanded.includes(index)) {\n      setSubLevelNavItemExpanded(subLevelNavItemExpanded.filter(expandedSubnavIndex => index !== expandedSubnavIndex));\n    } else {\n      setSubLevelNavItemExpanded([...subLevelNavItemExpanded, index]);\n    }\n  };\n\n  const handleLinkItemClick = () => {\n    resetProductFeeds();\n  }; // Third level - Navigation links (split into columns)\n\n\n  const renderThirdLevelNav = subNavItems => {\n    const split = subNavItems.length / desktopLinksPerColumn;\n    const chunks = subNavItems.length / split;\n    const subNavItemsChunks = chunk(subNavItems, chunks);\n    return subNavItemsChunks.map((NavChunk, index) => {\n      const fullCol = NavChunk.length > 4;\n      return __jsx(NavLinkChunk, {\n        item: true,\n        xs: true,\n        container: fullCol,\n        key: `NavLinkChunk-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, NavChunk.map(({\n        title,\n        link\n      }, index) => __jsx(NavLink, {\n        item: true,\n        xs: 12,\n        key: `NavLink-${index}`,\n        onClick: handleLinkItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, __jsx(Link, {\n        href: `/${PLP_PATH}/[...slug]`,\n        as: `/${PLP_PATH}${link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, __jsx(Typography, {\n        tag: \"p\",\n        typeStyles: desktopNavLink,\n        fullwidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, title))))));\n    });\n  }; // Second level - Wrapper around label and nav links\n\n\n  const renderSecondLevelNav = subNav => subNav.map(({\n    title,\n    subNavItems\n  }, index) => __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: true,\n    key: `grid${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(LabelContent, {\n    item: true,\n    xs: true,\n    id: \"menu-list-Collapse\",\n    seperator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItemTitle, {\n    onClick: handleSubLevelnavItemClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    tag: \"h4\",\n    typeStyles: desktopNavLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, title)), __jsx(Collapse, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(ThirdLevelNavContainer, {\n    container: true,\n    borderColor: primaryColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, renderThirdLevelNav(subNavItems)))))); // First level (e.g. top level: Mens, Womens)\n\n\n  const renderFirstLevelNav = () => __jsx(StyledMenu, {\n    \"aria-controls\": \"menu-list-Collapse\",\n    \"aria-haspopup\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(FirstLevelNavTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, title));\n\n  return __jsx(NavLinksContainer, {\n    container: true,\n    item: true,\n    xs: 12,\n    sm: true,\n    hoverEffectColor: primaryColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, renderFirstLevelNav(), __jsx(Collapse, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(CollapseContainer, {\n    height: navBarHeight,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, renderSecondLevelNav(subNav), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, __jsx(LabelContent, {\n    item: true,\n    xs: true,\n    id: \"menu-list-Collapse\",\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(NavButtons, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    padding: \"0px\",\n    disableHover: true,\n    textTransform: \"initial\",\n    onClick: () => setQuickFinderOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    tag: \"h4\",\n    weight: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, quickFinderCopy), __jsx(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  })))), isPwaInitiated && __jsx(Button, {\n    primary: true,\n    textTransform: \"initial\",\n    onClick: () => initPwaPrompt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, pwaCms.pwaDownloadableBannerText))))))));\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/components/modules/Navigation/DesktopSubNavContainers/DesktopSubNavContainers.js"],"names":["React","useState","useEffect","Grid","Collapse","Link","DESKTOP_NAV_BAR_REF","chunk","Typography","Button","Card","usePwa","ChevronRightIcon","useThemeColor","useCms","LabelContent","StyledMenu","NavLinksContainer","CollapseContainer","MenuItemTitle","NavLink","NavLinkChunk","FirstLevelNavTitle","NavButtons","ThirdLevelNavContainer","PLP_PATH","isServer","getNode","SubNavContainers","title","subNav","desktopLinksPerColumn","desktopNavLink","desktopNavLabel","quickFinderCopy","setQuickFinderOpen","resetProductFeeds","subLevelNavItemExpanded","setSubLevelNavItemExpanded","navBarHeight","setNavBarHeight","primaryColor","isPwaInitiated","initPwaPrompt","pwa","pwaCms","clientHeight","handleSubLevelnavItemClick","index","length","includes","filter","expandedSubnavIndex","handleLinkItemClick","renderThirdLevelNav","subNavItems","split","chunks","subNavItemsChunks","map","NavChunk","fullCol","link","renderSecondLevelNav","renderFirstLevelNav","pwaDownloadableBannerText"],"mappings":"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","sourcesContent":["//@flow\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Link from 'next/link';\nimport { DESKTOP_NAV_BAR_REF } from '@constants';\nimport chunk from 'lodash/chunk';\nimport Typography from '@units/Typography';\nimport Button from '@units/Button';\nimport Card from '@units/Card';\nimport usePwa from '@containers/Pwa/hook';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useThemeColor, useCms } from '@hooks';\nimport {\n  LabelContent,\n  StyledMenu,\n  NavLinksContainer,\n  CollapseContainer,\n  MenuItemTitle,\n  NavLink,\n  NavLinkChunk,\n  FirstLevelNavTitle,\n  NavButtons,\n  ThirdLevelNavContainer,\n} from './styles';\nimport { type CmsCopy } from '@types/cms';\nimport { PLP_PATH } from '@constants';\nimport { isServer, getNode } from '@helpers/common';\n\ntype SubNavContainersProps = {\n  title: string,\n  desktopLinksPerColumn: number,\n  desktopNavLabel: CmsCopy,\n  desktopNavLink: CmsCopy,\n  quickFinderCopy: string,\n  subNav: Array<{\n    title: string,\n    subNavItems: Object,\n  }>,\n  setQuickFinderOpen: Function,\n  resetProductFeeds: Function,\n};\n\nexport default function SubNavContainers({\n  title,\n  subNav,\n  desktopLinksPerColumn,\n  desktopNavLink,\n  desktopNavLabel,\n  quickFinderCopy,\n  setQuickFinderOpen,\n  resetProductFeeds,\n}: SubNavContainersProps) {\n  const [subLevelNavItemExpanded, setSubLevelNavItemExpanded] = useState([]);\n  const [navBarHeight, setNavBarHeight] = useState(100);\n  const primaryColor = useThemeColor('primary');\n  const { isPwaInitiated, initPwaPrompt } = usePwa();\n  const { pwa: pwaCms } = useCms('other');\n\n  useEffect(() => {\n    if (!isServer()) {\n      setNavBarHeight(getNode(DESKTOP_NAV_BAR_REF)?.clientHeight || 0);\n    }\n  });\n\n  const handleSubLevelnavItemClick = (index) => () => {\n    if (!subLevelNavItemExpanded.length) {\n      return setSubLevelNavItemExpanded([index]);\n    }\n\n    // If a subnav is already expanded, remove it's index i.e. collapse it\n    if (subLevelNavItemExpanded.includes(index)) {\n      setSubLevelNavItemExpanded(\n        subLevelNavItemExpanded.filter((expandedSubnavIndex) => index !== expandedSubnavIndex)\n      );\n    } else {\n      setSubLevelNavItemExpanded([...subLevelNavItemExpanded, index]);\n    }\n  };\n\n  const handleLinkItemClick = () => {\n    resetProductFeeds();\n  };\n\n  // Third level - Navigation links (split into columns)\n  const renderThirdLevelNav = (subNavItems) => {\n    const split = subNavItems.length / desktopLinksPerColumn;\n    const chunks = subNavItems.length / split;\n    const subNavItemsChunks = chunk(subNavItems, chunks);\n    return subNavItemsChunks.map((NavChunk, index) => {\n      const fullCol = NavChunk.length > 4;\n      return (\n        <NavLinkChunk item xs container={fullCol} key={`NavLinkChunk-${index}`}>\n          {NavChunk.map(({ title, link }, index) => (\n            <NavLink item xs={12} key={`NavLink-${index}`} onClick={handleLinkItemClick}>\n              <Link href={`/${PLP_PATH}/[...slug]`} as={`/${PLP_PATH}${link}`}>\n                <a>\n                  <Typography tag=\"p\" typeStyles={desktopNavLink} fullwidth>\n                    {title}\n                  </Typography>\n                </a>\n              </Link>\n            </NavLink>\n          ))}\n        </NavLinkChunk>\n      );\n    });\n  };\n\n  // Second level - Wrapper around label and nav links\n  const renderSecondLevelNav = (subNav) =>\n    subNav.map(({ title, subNavItems }, index) => (\n      <Grid container item xs key={`grid${index}`}>\n        <LabelContent item xs id=\"menu-list-Collapse\" seperator>\n          <MenuItemTitle onClick={handleSubLevelnavItemClick(index)}>\n            <Typography tag=\"h4\" typeStyles={desktopNavLabel}>\n              {title}\n            </Typography>\n          </MenuItemTitle>\n          <Collapse in={true}>\n            <ThirdLevelNavContainer container borderColor={primaryColor}>\n              {renderThirdLevelNav(subNavItems)}\n            </ThirdLevelNavContainer>\n          </Collapse>\n        </LabelContent>\n      </Grid>\n    ));\n\n  // First level (e.g. top level: Mens, Womens)\n  const renderFirstLevelNav = () => (\n    <StyledMenu aria-controls=\"menu-list-Collapse\" aria-haspopup=\"true\">\n      <FirstLevelNavTitle>{title}</FirstLevelNavTitle>\n    </StyledMenu>\n  );\n\n  return (\n    <NavLinksContainer container item xs={12} sm hoverEffectColor={primaryColor}>\n      {renderFirstLevelNav()}\n      <Collapse in={true}>\n        <CollapseContainer height={navBarHeight} container>\n          {renderSecondLevelNav(subNav)}\n\n          <Grid container item xs={3} lg={4}>\n            <LabelContent item xs id=\"menu-list-Collapse\" container alignItems=\"center\">\n              <NavButtons container alignItems=\"center\">\n                <Button\n                  fullWidth\n                  padding=\"0px\"\n                  disableHover\n                  textTransform=\"initial\"\n                  onClick={() => setQuickFinderOpen(true)}>\n                  <Card fullWidth>\n                    <Grid container alignItems=\"center\" justify=\"space-between\">\n                      <Typography tag=\"h4\" weight={300}>\n                        {quickFinderCopy}\n                      </Typography>\n                      <ChevronRightIcon />\n                    </Grid>\n                  </Card>\n                </Button>\n\n                {isPwaInitiated && (\n                  <Button primary textTransform=\"initial\" onClick={() => initPwaPrompt()}>\n                    <Grid container alignItems=\"center\" justify=\"space-between\">\n                      {pwaCms.pwaDownloadableBannerText}\n                    </Grid>\n                  </Button>\n                )}\n              </NavButtons>\n            </LabelContent>\n          </Grid>\n        </CollapseContainer>\n      </Collapse>\n    </NavLinksContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}