{"ast":null,"code":"import rootReducer from './reducer/root-reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-sagas';\nimport throttle from 'lodash/throttle';\nimport { persistState } from './subscribers';\nimport { USER_SETTINGS_KEY, WISH_LIST_KEY } from '@constants';\nimport { getLocalStorage } from '@helpers/common';\nimport { createStoreWithPersist } from './helper';\nexport const configureStore = initialState => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware];\n  const localStorageKeys = [USER_SETTINGS_KEY, WISH_LIST_KEY].map(key => getLocalStorage(key));\n  const store = createStore(rootReducer, createStoreWithPersist(initialState, ...localStorageKeys), applyMiddleware(...middleWares));\n  store.subscribe(throttle(() => persistState(store), 1000));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(configureStore, {\n  debug: false\n});","map":null,"metadata":{},"sourceType":"module"}