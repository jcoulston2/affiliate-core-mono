{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components';\nimport Typography from '@units/Typography';\nimport Copy from '@units/Copy';\nimport Button from '@units/Button';\nimport { useTheme } from '@hooks';\nimport bp from '@styles/breakPoints';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { isServer } from '@helpers/common';\nvar CookieWrapper = styled.div.withConfig({\n  displayName: \"CookieBanner__CookieWrapper\",\n  componentId: \"sc-12biwm7-0\"\n})([\"position:fixed;z-index:1;bottom:0px;width:100%;background:\", \";padding:20px;\", \"{padding:30px;}\"], function (props) {\n  return props.background;\n}, bp.min_lg);\nvar CookieButton = styled.div.withConfig({\n  displayName: \"CookieBanner__CookieButton\",\n  componentId: \"sc-12biwm7-1\"\n})([\"display:flex;justify-content:center;padding:0px 40px;\"]);\nexport default function CookieBanner(_ref) {\n  var cookieBannerCopy = _ref.cookieBannerCopy,\n      cookieBannerText = _ref.cookieBannerText,\n      allowCookies = _ref.allowCookies,\n      setCookies = _ref.setCookies;\n\n  var _useState = useState(false),\n      showBanner = _useState[0],\n      setShowBanner = _useState[1];\n\n  var _useTheme = useTheme(),\n      brandThemeColors = _useTheme.brandThemeColors;\n\n  var cookiesNotYetAccepted = !allowCookies;\n  useEffect(function () {\n    // Avoid rendering the cookie banner at build time\n    if (!isServer()) {\n      setShowBanner(cookiesNotYetAccepted);\n    }\n  }, [cookiesNotYetAccepted]);\n  return showBanner && __jsx(CookieWrapper, {\n    background: brandThemeColors.slate\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: \"auto\"\n  }, __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: cookieBannerCopy,\n    fullwidth: true\n  }, __jsx(Copy, {\n    text: cookieBannerText\n  })), __jsx(Spacer, {\n    h: [{\n      value: 10,\n      breakPoint: 'max_md'\n    }]\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: \"auto\"\n  }, __jsx(CookieButton, null, __jsx(Button, {\n    textTransform: 'capitalize',\n    primary: true,\n    padding: '0.5em 4em',\n    onClick: function onClick() {\n      return setCookies(true);\n    }\n  }, \"Accept\")))));\n}","map":null,"metadata":{},"sourceType":"module"}