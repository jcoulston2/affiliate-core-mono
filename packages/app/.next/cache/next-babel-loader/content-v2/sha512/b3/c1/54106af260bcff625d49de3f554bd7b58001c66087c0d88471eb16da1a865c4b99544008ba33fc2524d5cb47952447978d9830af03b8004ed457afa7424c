{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/app/Root.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { actions } from './root-actions';\nimport { wrapper } from './store';\nimport { useDispatch } from 'react-redux';\nimport SiteThemeProvider from '@styles/SiteThemeProvider';\nimport { CmsProvider } from '../app/CmsContext';\nimport { IS_DEV } from '@constants';\nimport { injectLocalCms } from '@helpers/cms';\nimport { useSelector } from 'react-redux';\n\nfunction Root({\n  Component,\n  pageProps\n}) {\n  const dispatch = useDispatch();\n  const {\n    cms\n  } = useSelector(store => {\n    var _store$buildTimeState;\n\n    return ((_store$buildTimeState = store.buildTimeState) === null || _store$buildTimeState === void 0 ? void 0 : _store$buildTimeState.cmsData) || {\n      cms: {}\n    };\n  });\n  const {\n    0: appCms,\n    1: setAppCms\n  } = useState(cms);\n\n  const setLocalCms = async () => {\n    const localCms = await injectLocalCms();\n    console.log('setLocalCms', localCms);\n    setAppCms(localCms);\n  };\n\n  const handleClientWidthOnResize = () => {\n    let timedFn;\n\n    const initResize = () => {\n      timedFn = setTimeout(() => {\n        var _document, _document$body;\n\n        const clientWidth = (_document = document) === null || _document === void 0 ? void 0 : (_document$body = _document.body) === null || _document$body === void 0 ? void 0 : _document$body.clientWidth;\n\n        if (clientWidth) {\n          dispatch(actions.setClientWidth(clientWidth));\n        }\n      }, 200);\n    };\n\n    window.addEventListener('resize', () => {\n      clearTimeout(timedFn);\n      initResize();\n    });\n    initResize();\n  };\n\n  useEffect(() => {\n    handleClientWidthOnResize();\n\n    if (IS_DEV) {\n      setLocalCms();\n    }\n  }, []);\n  return __jsx(CmsProvider, {\n    cms: appCms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(SiteThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default wrapper.withRedux(Root);","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/app/Root.js"],"names":["React","useEffect","useState","actions","wrapper","useDispatch","SiteThemeProvider","CmsProvider","IS_DEV","injectLocalCms","useSelector","Root","Component","pageProps","dispatch","cms","store","buildTimeState","cmsData","appCms","setAppCms","setLocalCms","localCms","console","log","handleClientWidthOnResize","timedFn","initResize","setTimeout","clientWidth","document","body","setClientWidth","window","addEventListener","clearTimeout","withRedux"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAQA,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAAmD;AACjD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUL,WAAW,CAAEM,KAAD;AAAA;;AAAA,WAAwB,0BAAAA,KAAK,CAACC,cAAN,gFAAsBC,OAAtB,KAAiC;AAAEH,MAAAA,GAAG,EAAE;AAAP,KAAzD;AAAA,GAAD,CAA3B;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAACa,GAAD,CAApC;;AAEA,QAAMM,WAAW,GAAG,YAA2B;AAC7C,UAAMC,QAAQ,GAAG,MAAMb,cAAc,EAArC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;AACAF,IAAAA,SAAS,CAACE,QAAD,CAAT;AACD,GAJD;;AAMA,QAAMG,yBAAyB,GAAG,MAAY;AAC5C,QAAIC,OAAJ;;AACA,UAAMC,UAAU,GAAG,MAAM;AACvBD,MAAAA,OAAO,GAAGE,UAAU,CAAC,MAAM;AAAA;;AACzB,cAAMC,WAAW,gBAAGC,QAAH,gEAAG,UAAUC,IAAb,mDAAG,eAAgBF,WAApC;;AACA,YAAIA,WAAJ,EAAiB;AACff,UAAAA,QAAQ,CAACX,OAAO,CAAC6B,cAAR,CAAuBH,WAAvB,CAAD,CAAR;AACD;AACF,OALmB,EAKjB,GALiB,CAApB;AAMD,KAPD;;AASAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtCC,MAAAA,YAAY,CAACT,OAAD,CAAZ;AACAC,MAAAA,UAAU;AACX,KAHD;AAKAA,IAAAA,UAAU;AACX,GAjBD;;AAmBA1B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,yBAAyB;;AACzB,QAAIjB,MAAJ,EAAY;AACVa,MAAAA,WAAW;AACZ;AACF,GALQ,EAKN,EALM,CAAT;AAOA,SACE,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeN,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD;;AAED,eAAeT,OAAO,CAACgC,SAAR,CAAkBzB,IAAlB,CAAf","sourcesContent":["//@flow\nimport React, { useEffect, useState } from 'react';\nimport { actions } from './root-actions';\nimport { wrapper } from './store';\nimport { useDispatch } from 'react-redux';\nimport SiteThemeProvider from '@styles/SiteThemeProvider';\nimport { CmsProvider } from '../app/CmsContext';\nimport { IS_DEV } from '@constants';\nimport { injectLocalCms } from '@helpers/cms';\nimport { useSelector } from 'react-redux';\nimport { type GlobalState } from '@types/appState';\n\ntype RootProps = {\n  Component: Function,\n  pageProps?: { [string]: any },\n};\n\nfunction Root({ Component, pageProps }: RootProps) {\n  const dispatch = useDispatch();\n  const { cms } = useSelector((store: GlobalState) => store.buildTimeState?.cmsData || { cms: {} });\n  const [appCms, setAppCms] = useState(cms);\n\n  const setLocalCms = async (): Promise<void> => {\n    const localCms = await injectLocalCms();\n    console.log('setLocalCms', localCms);\n    setAppCms(localCms);\n  };\n\n  const handleClientWidthOnResize = (): void => {\n    let timedFn;\n    const initResize = () => {\n      timedFn = setTimeout(() => {\n        const clientWidth = document?.body?.clientWidth;\n        if (clientWidth) {\n          dispatch(actions.setClientWidth(clientWidth));\n        }\n      }, 200);\n    };\n\n    window.addEventListener('resize', () => {\n      clearTimeout(timedFn);\n      initResize();\n    });\n\n    initResize();\n  };\n\n  useEffect(() => {\n    handleClientWidthOnResize();\n    if (IS_DEV) {\n      setLocalCms();\n    }\n  }, []);\n\n  return (\n    <CmsProvider cms={appCms}>\n      <SiteThemeProvider>\n        <Component {...pageProps} />\n      </SiteThemeProvider>\n    </CmsProvider>\n  );\n}\n\nexport default wrapper.withRedux(Root);\n"]},"metadata":{},"sourceType":"module"}