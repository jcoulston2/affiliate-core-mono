{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StickyHeader from '@units/StickyHeader';\nimport { Filters, FilterChips } from '@modules/Filters';\nimport { useTheme, useCms } from '@hooks';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport Image from '@units/Image';\nimport { ChipsContainer, ViewControlContainer } from './styles';\nimport { VIEW_MODE } from '@constants';\nexport default function PorductGridControls({\n  setViewMode,\n  viewMode,\n  filterProps\n}) {\n  const {\n    productFiltersContent\n  } = useCms('listingContent');\n  const {\n    filterWrapperPadding,\n    filterWrappeMaxWidth,\n    filterWrapperSticky\n  } = productFiltersContent;\n  const {\n    brandThemeColors: theme\n  } = useTheme();\n  const {\n    FLICK_MODE,\n    GRID_MODE\n  } = VIEW_MODE;\n  const isFlickMode = viewMode === FLICK_MODE;\n  return __jsx(StyledCmsGrid, {\n    container: true,\n    padding: filterWrapperPadding,\n    maxWidth: filterWrappeMaxWidth\n  }, __jsx(StickyHeader, {\n    background: theme.commonBackground,\n    padding: filterWrapperSticky\n  }, __jsx(StyledCmsGrid, {\n    container: true,\n    justify: \"space-between\",\n    maxWidth: filterWrappeMaxWidth\n  }, __jsx(ViewControlContainer, {\n    alignItems: \"center\"\n  }, __jsx(Filters, _extends({}, filterProps, filterProps.filterMethods))), __jsx(ViewControlContainer, {\n    alignItems: \"center\",\n    onClick: () => setViewMode(FLICK_MODE)\n  }, __jsx(Image, {\n    icon: \"FlickIcon\",\n    maxWidth: \"40px\",\n    iconSize: \"large\",\n    iconColor: isFlickMode ? theme.tertiaryColor : false\n  })), __jsx(ViewControlContainer, {\n    alignItems: \"center\",\n    onClick: () => setViewMode(GRID_MODE)\n  }, __jsx(Image, {\n    icon: \"GridIcon\",\n    maxWidth: \"40px\",\n    iconSize: \"large\",\n    iconColor: !isFlickMode ? theme.tertiaryColor : false\n  })))), __jsx(ChipsContainer, null, __jsx(FilterChips, _extends({\n    scaler: filterProps.scaler\n  }, filterProps.normalizedFilters, filterProps.filterMethods))));\n}","map":null,"metadata":{},"sourceType":"module"}