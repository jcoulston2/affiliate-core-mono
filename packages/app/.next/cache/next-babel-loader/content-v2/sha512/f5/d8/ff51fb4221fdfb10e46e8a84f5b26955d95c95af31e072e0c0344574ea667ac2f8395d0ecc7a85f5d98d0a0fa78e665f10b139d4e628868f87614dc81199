{"ast":null,"code":"import _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/ProductDetailView/ProductDescription.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Copy from '@units/Copy';\nimport styled from 'styled-components';\nimport Typography from '@units/Typography';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { hasValidTabbedData, mapCustomDataToTabs } from './helper';\nimport { toArray } from '@helpers/common';\nimport upperFirst from 'lodash/upperFirst';\nimport { useTheme } from '@hooks';\nimport startCase from 'lodash/startCase';\nvar DetailTab = styled(function (_ref) {\n  var isActive = _ref.isActive,\n      textAlign = _ref.textAlign,\n      markerColor = _ref.markerColor,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"isActive\", \"textAlign\", \"markerColor\", \"children\"]);\n\n  return __jsx(Grid, _extends({}, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }), children);\n}).withConfig({\n  displayName: \"ProductDescription__DetailTab\",\n  componentId: \"od93dl-0\"\n})([\"&&{cursor:pointer;opacity:0.5;margin-bottom:0.5em;text-align:\", \";&:hover{opacity:0.7;}\", \"}\"], function (props) {\n  return props.textAlign;\n}, function (_ref2) {\n  var isActive = _ref2.isActive,\n      markerColor = _ref2.markerColor;\n  return isActive && \"\\n      opacity: 1;\\n      h4 {\\n        &::after {\\n          content: ' ';\\n          width: 38px;\\n          height: 2px;\\n          background: \".concat(markerColor, \";\\n          display: block;\\n          position: relative;\\n          top: 9px;\\n        }        \\n      }\\n\\n    \");\n});\n_c = DetailTab;\nvar CardList = styled.ul.withConfig({\n  displayName: \"ProductDescription__CardList\",\n  componentId: \"od93dl-1\"\n})([\"padding-left:0px;display:inline-block;ist-style-type:none;margin-top:5px;width:100%;li{display:flex;align-items:center;padding:2px 0px;justify-content:flex-start;}\"]);\n_c2 = CardList;\n\nfunction ProductDescription(_ref3) {\n  _s();\n\n  var _this2 = this;\n\n  var productDescriptionTitleCopy = _ref3.productDescriptionTitleCopy,\n      productDeliveryTitleCopy = _ref3.productDeliveryTitleCopy,\n      commonLabel = _ref3.commonLabel,\n      description = _ref3.description,\n      delivery = _ref3.delivery,\n      moreInfoCopy = _ref3.moreInfoCopy,\n      moreInfoText = _ref3.moreInfoText,\n      productLink = _ref3.productLink,\n      genericProductDescriptionText = _ref3.genericProductDescriptionText,\n      genericProductDescriptionCopy = _ref3.genericProductDescriptionCopy,\n      customDescriptiveData = _ref3.customDescriptiveData,\n      brand = _ref3.brand;\n\n  var _useState = useState(0),\n      activeDescriptionTab = _useState[0],\n      setActiveDescriptionTab = _useState[1];\n\n  var _useTheme = useTheme(),\n      brandThemeColors = _useTheme.brandThemeColors; // We have two primary variants (delivery and description), there should always be a description\n  // tab but it is not always encouraged for the extractor to pull in bespoke description & delivery\n  // for a given product due to the different formating and cases of different brands but we include\n  // it anyway. There should always be some generic description shown from the CMS which encourages\n  // the user to navigate to the official store.\n\n\n  var tabsInfomration = [{\n    title: productDescriptionTitleCopy,\n    data: toArray(description),\n    isDefault: true\n  }, {\n    title: productDeliveryTitleCopy,\n    data: toArray(delivery)\n  }].concat(_toConsumableArray(mapCustomDataToTabs(customDescriptiveData))).filter(function (_ref4) {\n    var data = _ref4.data,\n        isDefault = _ref4.isDefault;\n    return hasValidTabbedData(data, isDefault);\n  });\n  var hasMultipleTabs = tabsInfomration.length > 1; // Tab clickable headings\n\n  var getTabs = tabsInfomration.map(function (_ref5, index) {\n    var title = _ref5.title;\n    return __jsx(DetailTab, {\n      markerColor: brandThemeColors.primaryColor,\n      textAlign: hasMultipleTabs ? 'center' : 'left',\n      key: index,\n      item: true,\n      xs: true,\n      isActive: index === activeDescriptionTab,\n      onClick: function onClick() {\n        return setActiveDescriptionTab(index);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, __jsx(Typography, {\n      tag: \"h4\",\n      typeStyles: commonLabel,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, __jsx(Copy, {\n      text: title,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    })));\n  }); // Tab inner content\n\n  var getTabsContent = tabsInfomration.map(function (_ref6, index) {\n    var descriptiveValues = _ref6.data;\n    return index === activeDescriptionTab && __jsx(CardList, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, descriptiveValues.map(function (descriptiveValue, index) {\n      return descriptiveValue && __jsx(\"li\", {\n        key: index,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, __jsx(Typography, {\n        tag: \"p\",\n        typeStyles: genericProductDescriptionCopy,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, __jsx(Copy, {\n        text: upperFirst(descriptiveValue),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      })));\n    }));\n  }); // Cms copy\n\n  var getCmsContent = genericProductDescriptionText.map(function (cmsDescriptiveText, index) {\n    return __jsx(Grid, {\n      container: true,\n      xs: 12,\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }\n    }, __jsx(Typography, {\n      tag: \"p\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, __jsx(Copy, {\n      text: cmsDescriptiveText,\n      replaceText: startCase(brand),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    })), __jsx(Spacer, {\n      h: 5,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }));\n  });\n  return __jsx(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, getTabs, getTabsContent, getCmsContent, __jsx(Spacer, {\n    h: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: moreInfoCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: productLink,\n    title: moreInfoText,\n    target: \"_blank\",\n    rel: \"nofollow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(Copy, {\n    text: moreInfoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(ProductDescription, \"m37nubTiYPKG9Jwc/c9qYzXd33E=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = ProductDescription;\nexport default ProductDescription;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DetailTab\");\n$RefreshReg$(_c2, \"CardList\");\n$RefreshReg$(_c3, \"ProductDescription\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/ProductDetailView/ProductDescription.js"],"names":["React","useState","Grid","Copy","styled","Typography","Spacer","hasValidTabbedData","mapCustomDataToTabs","toArray","upperFirst","useTheme","startCase","DetailTab","isActive","textAlign","markerColor","children","rest","props","CardList","ul","ProductDescription","productDescriptionTitleCopy","productDeliveryTitleCopy","commonLabel","description","delivery","moreInfoCopy","moreInfoText","productLink","genericProductDescriptionText","genericProductDescriptionCopy","customDescriptiveData","brand","activeDescriptionTab","setActiveDescriptionTab","brandThemeColors","tabsInfomration","title","data","isDefault","filter","hasMultipleTabs","length","getTabs","map","index","primaryColor","getTabsContent","descriptiveValues","descriptiveValue","getCmsContent","cmsDescriptiveText"],"mappings":"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","sourcesContent":["//@flow\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { type CmsCopy } from '@types/cms';\nimport { type ProductCustomVariant } from '@types/product';\nimport Copy from '@units/Copy';\nimport styled from 'styled-components';\nimport Typography from '@units/Typography';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { hasValidTabbedData, mapCustomDataToTabs } from './helper';\nimport { toArray } from '@helpers/common';\nimport upperFirst from 'lodash/upperFirst';\nimport { useTheme } from '@hooks';\nimport startCase from 'lodash/startCase';\n\ntype ProductDescriptionProps = {\n  productDescriptionTitleCopy: string,\n  productDeliveryTitleCopy: string,\n  commonLabel: CmsCopy,\n  description?: string | Array<string>,\n  delivery?: string | Array<string>,\n  moreInfoCopy: CmsCopy,\n  moreInfoText: string,\n  productLink: string,\n  genericProductDescriptionCopy: CmsCopy,\n  genericProductDescriptionText: Array<string>,\n  customDescriptiveData: Array<ProductCustomVariant>,\n  brand: string,\n};\n\nconst DetailTab = styled(({ isActive, textAlign, markerColor, children, ...rest }) => (\n  <Grid {...rest}>{children}</Grid>\n))`\n  && {\n    cursor: pointer;\n    opacity: 0.5;\n    margin-bottom: 0.5em;\n    text-align: ${(props) => props.textAlign};\n\n    &:hover {\n      opacity: 0.7;\n    }\n\n    ${({ isActive, markerColor }) =>\n      isActive &&\n      `\n      opacity: 1;\n      h4 {\n        &::after {\n          content: ' ';\n          width: 38px;\n          height: 2px;\n          background: ${markerColor};\n          display: block;\n          position: relative;\n          top: 9px;\n        }        \n      }\n\n    `}\n  }\n`;\n\nconst CardList = styled.ul`\n  padding-left: 0px;\n  display: inline-block;\n  ist-style-type: none;\n  margin-top: 5px;\n  width: 100%;\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 2px 0px;\n    justify-content: flex-start;\n  }\n`;\n\nfunction ProductDescription({\n  productDescriptionTitleCopy,\n  productDeliveryTitleCopy,\n  commonLabel,\n  description,\n  delivery,\n  moreInfoCopy,\n  moreInfoText,\n  productLink,\n  genericProductDescriptionText,\n  genericProductDescriptionCopy,\n  customDescriptiveData,\n  brand,\n}: ProductDescriptionProps) {\n  const [activeDescriptionTab, setActiveDescriptionTab] = useState(0);\n  const { brandThemeColors } = useTheme();\n\n  // We have two primary variants (delivery and description), there should always be a description\n  // tab but it is not always encouraged for the extractor to pull in bespoke description & delivery\n  // for a given product due to the different formating and cases of different brands but we include\n  // it anyway. There should always be some generic description shown from the CMS which encourages\n  // the user to navigate to the official store.\n  const tabsInfomration = [\n    {\n      title: productDescriptionTitleCopy,\n      data: toArray(description),\n      isDefault: true,\n    },\n    {\n      title: productDeliveryTitleCopy,\n      data: toArray(delivery),\n    },\n\n    // Custom non primary data will get rendered as a tab\n    ...mapCustomDataToTabs(customDescriptiveData),\n\n    // we run a quick filter on valid variants to prevent rendering empty data\n  ].filter(({ data, isDefault }: Object) => hasValidTabbedData(data, isDefault));\n\n  const hasMultipleTabs = tabsInfomration.length > 1;\n\n  // Tab clickable headings\n  const getTabs = tabsInfomration.map(({ title }, index) => (\n    <DetailTab\n      markerColor={brandThemeColors.primaryColor}\n      textAlign={hasMultipleTabs ? 'center' : 'left'}\n      key={index}\n      item\n      xs\n      isActive={index === activeDescriptionTab}\n      onClick={() => setActiveDescriptionTab(index)}>\n      <Typography tag=\"h4\" typeStyles={commonLabel}>\n        <Copy text={title} />\n      </Typography>\n    </DetailTab>\n  ));\n\n  // Tab inner content\n  const getTabsContent = tabsInfomration.map(\n    ({ data: descriptiveValues }, index) =>\n      index === activeDescriptionTab && (\n        <CardList key={index}>\n          {descriptiveValues.map(\n            (descriptiveValue, index) =>\n              descriptiveValue && (\n                <li key={index}>\n                  <Typography tag=\"p\" typeStyles={genericProductDescriptionCopy}>\n                    <Copy text={upperFirst(descriptiveValue)} />\n                  </Typography>\n                </li>\n              )\n          )}\n        </CardList>\n      )\n  );\n\n  // Cms copy\n  const getCmsContent = genericProductDescriptionText.map((cmsDescriptiveText, index) => (\n    <Grid container xs={12} key={index}>\n      <Typography tag=\"p\">\n        <Copy text={cmsDescriptiveText} replaceText={startCase(brand)} />\n      </Typography>\n      <Spacer h={5} />\n    </Grid>\n  ));\n\n  return (\n    <Grid item container>\n      {getTabs}\n      {getTabsContent}\n      {getCmsContent}\n      <Spacer h={5} />\n      <Typography tag=\"p\" typeStyles={moreInfoCopy}>\n        <a href={productLink} title={moreInfoText} target=\"_blank\" rel=\"nofollow\">\n          <Copy text={moreInfoText} />\n        </a>\n      </Typography>\n    </Grid>\n  );\n}\n\nexport default ProductDescription;\n"]},"metadata":{},"sourceType":"module"}