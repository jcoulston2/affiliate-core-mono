{"ast":null,"code":"import { useCmsContext } from '@cmsContext';\n/**\n * This is the primary way to access the CMS content inside React components, the helper function `getCmsContent`\n * is also identical but should be avoided when using inside components as the hook is simpler.\n */\n\nexport default function useCms(cmsContainer) {\n  const context = useCmsContext();\n  return context && context[cmsContainer];\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/hooks/useCms.js"],"names":["useCmsContext","useCms","cmsContainer","context"],"mappings":"AACA,SAASA,aAAT,QAA8B,aAA9B;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,YAAhB,EAAyD;AACtE,QAAMC,OAAO,GAAGH,aAAa,EAA7B;AACA,SAAOG,OAAO,IAAIA,OAAO,CAACD,YAAD,CAAzB;AACD","sourcesContent":["//@flow\nimport { useCmsContext } from '@cmsContext';\n\n/**\n * This is the primary way to access the CMS content inside React components, the helper function `getCmsContent`\n * is also identical but should be avoided when using inside components as the hook is simpler.\n */\nexport default function useCms(cmsContainer: string): { [string]: any } {\n  const context = useCmsContext();\n  return context && context[cmsContainer];\n}\n"]},"metadata":{},"sourceType":"module"}