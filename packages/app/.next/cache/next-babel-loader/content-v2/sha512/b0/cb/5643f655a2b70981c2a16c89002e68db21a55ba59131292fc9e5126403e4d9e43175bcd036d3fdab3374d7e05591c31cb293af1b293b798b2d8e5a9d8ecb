{"ast":null,"code":"import { urlCase, isServer } from '@helpers/common';\nexport function structureNavigationData(sectionItem) {\n  return sectionItem.data.map(({\n    label\n  }) => {\n    return {\n      title: label,\n      subNavItems: sectionItem.data.filter(catlevel => catlevel.label === label).map(({\n        category\n      }) => ({\n        title: category,\n        link: urlCase(`/${sectionItem.section}/${category}`)\n      }))\n    };\n  });\n}\nexport function normalizeNavigationData(structuredCatLevelData) {\n  return structuredCatLevelData.reduce((acc, current) => {\n    return [...acc, acc && acc.some(has => has.title === current.title) ? null : current];\n  }, []).filter(notNull => notNull);\n}\nexport function getNavigationProps(rawApiResponse) {\n  if (!rawApiResponse) return null;\n  const {\n    affiliateData\n  } = rawApiResponse;\n  const normalizedNavData = affiliateData.map(sectionItem => {\n    const structuredCatLevelData = structureNavigationData(sectionItem);\n    const normalizedCatLevelData = normalizeNavigationData(structuredCatLevelData);\n    return {\n      title: sectionItem.section,\n      link: `/${sectionItem.section}`,\n      subNav: normalizedCatLevelData\n    };\n  });\n  return {\n    affiliateData: normalizedNavData\n  };\n}\nexport function pushState(state, title, url) {\n  var _window$history;\n\n  if ((_window$history = window.history) !== null && _window$history !== void 0 && _window$history.pushState) {\n    window.history.pushState(state, state, url);\n  }\n}\nconst pushDefault = !isServer() && window.onpopstate;\nexport function defatulPopState() {\n  if (!isServer() && window.onpopstate) {\n    window.onpopstate = pushDefault;\n  }\n}\nexport function fixPopState() {\n  if (!isServer() && window.history && window.onpopstate) {\n    window.history.pushState(null, null, location.href);\n    window.history.back();\n    window.history.forward();\n\n    window.onpopstate = function () {\n      history.go(1);\n    };\n  }\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/helpers/page/page.js"],"names":["urlCase","isServer","structureNavigationData","sectionItem","data","map","label","title","subNavItems","filter","catlevel","category","link","section","normalizeNavigationData","structuredCatLevelData","reduce","acc","current","some","has","notNull","getNavigationProps","rawApiResponse","affiliateData","normalizedNavData","normalizedCatLevelData","subNav","pushState","state","url","window","history","pushDefault","onpopstate","defatulPopState","fixPopState","location","href","back","forward","go"],"mappings":"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","sourcesContent":["//@flow\nimport { type NavigationApiQuery, type NavigationDataItem } from '../../types/apiQueries';\nimport {\n  type NormalizedNavigationData,\n  type NormalizedSubNavData,\n} from '../../types/navigationData';\nimport { urlCase, isServer } from '@helpers/common';\n\nexport function structureNavigationData(sectionItem: NavigationDataItem): NormalizedSubNavData {\n  return sectionItem.data.map(({ label }) => {\n    return {\n      title: label,\n      subNavItems: sectionItem.data\n        .filter((catlevel) => catlevel.label === label)\n        .map(({ category }) => ({\n          title: category,\n          link: urlCase(`/${sectionItem.section}/${category}`),\n        })),\n    };\n  });\n}\n\nexport function normalizeNavigationData(\n  structuredCatLevelData: NormalizedSubNavData\n): NormalizedSubNavData {\n  return structuredCatLevelData\n    .reduce((acc, current): any => {\n      return [...acc, acc && acc.some((has) => has.title === current.title) ? null : current];\n    }, [])\n    .filter((notNull) => notNull);\n}\n\nexport function getNavigationProps(rawApiResponse: NavigationApiQuery): NormalizedNavigationData {\n  if (!rawApiResponse) return null;\n\n  const { affiliateData } = rawApiResponse;\n  const normalizedNavData = affiliateData.map((sectionItem) => {\n    const structuredCatLevelData = structureNavigationData(sectionItem);\n    const normalizedCatLevelData = normalizeNavigationData(structuredCatLevelData);\n\n    return {\n      title: sectionItem.section,\n      link: `/${sectionItem.section}`,\n      subNav: normalizedCatLevelData,\n    };\n  });\n\n  return {\n    affiliateData: normalizedNavData,\n  };\n}\n\nexport function pushState(state: { [string]: any }, title: string, url: string): void {\n  if (window.history?.pushState) {\n    window.history.pushState(state, state, url);\n  }\n}\n\nconst pushDefault = !isServer() && window.onpopstate;\nexport function defatulPopState(): void {\n  if (!isServer() && window.onpopstate) {\n    window.onpopstate = pushDefault;\n  }\n}\n\nexport function fixPopState(): void {\n  if (!isServer() && window.history && window.onpopstate) {\n    window.history.pushState(null, null, location.href);\n    window.history.back();\n    window.history.forward();\n    window.onpopstate = function () {\n      history.go(1);\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}