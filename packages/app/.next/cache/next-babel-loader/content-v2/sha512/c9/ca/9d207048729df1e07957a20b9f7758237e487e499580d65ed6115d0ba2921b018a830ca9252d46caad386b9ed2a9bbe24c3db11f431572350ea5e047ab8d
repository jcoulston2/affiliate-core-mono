{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/QuickFinder/QuickFinder.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport RadioButton from '@units/RadioButton';\nimport Checkbox from '@units/Checkbox';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@units/Typography';\nimport { keyWordsToString, urlCase } from '@helpers/common';\nimport { PLP_PATH, SEARCH_PATH } from '@constants';\nimport Input from '@units/Input';\nimport { useCms, useBrandList } from '@hooks';\nimport { useFilters } from '@modules/Filters';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { useRouter } from 'next/router';\nimport { SectionTabs, LabelTabs } from './QuickFinderTabs';\nimport startCase from 'lodash/startCase';\nimport Grid from '@material-ui/core/Grid';\nimport { QuickSectionTabs, QuickViewSection, RadioItem, RadioItemContainer, QuickViewModal, SectionLabel } from './styles';\nexport default function QuickFinder(_ref) {\n  _s();\n\n  var _navigationData$secti,\n      _navigationData$secti2,\n      _this = this,\n      _getCategoryList;\n\n  var navigationData = _ref.navigationData,\n      onSubmitCallback = _ref.onSubmitCallback,\n      modalProps = _objectWithoutProperties(_ref, [\"navigationData\", \"onSubmitCallback\"]);\n\n  var _useState = useState(0),\n      sectionTabValue = _useState[0],\n      setSectionTabValue = _useState[1];\n\n  var _useState2 = useState(0),\n      labelTabValue = _useState2[0],\n      setLabelTabValue = _useState2[1];\n\n  var _useState3 = useState('all'),\n      selectedCategory = _useState3[0],\n      setSelectedCategory = _useState3[1];\n\n  var _useCms = useCms('listingContent'),\n      productFiltersContent = _useCms.productFiltersContent;\n\n  var _useFilters = useFilters(),\n      filterMethods = _useFilters.filterMethods,\n      filterState = _useFilters.filterState,\n      normalizedFilters = _useFilters.normalizedFilters;\n\n  var router = useRouter();\n  var brandList = useBrandList();\n  var selectedSection = (_navigationData$secti = navigationData[sectionTabValue]) === null || _navigationData$secti === void 0 ? void 0 : _navigationData$secti.title;\n  var hasMultipleLabels = ((_navigationData$secti2 = navigationData[sectionTabValue]) === null || _navigationData$secti2 === void 0 ? void 0 : _navigationData$secti2.subNav.length) > 1;\n\n  var getCategoryList = function getCategoryList() {\n    var _navigationData$secti3;\n\n    return (_navigationData$secti3 = navigationData[sectionTabValue]) === null || _navigationData$secti3 === void 0 ? void 0 : _navigationData$secti3.subNav[labelTabValue].subNavItems;\n  };\n\n  var handleCheckBoxChange = function handleCheckBoxChange(value) {\n    var brands = filterState.brands;\n\n    if (brands.includes(value)) {\n      filterMethods.setBrands(brands.filter(function (brand) {\n        return urlCase(brand) !== value;\n      }));\n    } else {\n      filterMethods.setBrands([].concat(_toConsumableArray(brands), [value]));\n    }\n  };\n\n  var submitQuickFinder = function submitQuickFinder() {\n    var path = '';\n    var keyWords = normalizedFilters.keyWords,\n        saleThreshold = normalizedFilters.saleThreshold,\n        brands = normalizedFilters.brands;\n    var urlParts = [];\n    var isSearchBaseUrl = selectedCategory === 'all';\n    var base = isSearchBaseUrl ? \"/\".concat(SEARCH_PATH, \"?section=\").concat(selectedSection) : \"/\".concat(PLP_PATH, \"/\").concat(urlCase(selectedSection), \"/\").concat(urlCase(selectedCategory));\n    if (keyWords !== null && keyWords !== void 0 && keyWords.length) urlParts.push(\"key-words=\".concat(keyWords.join(',')));\n    if (brands !== null && brands !== void 0 && brands.length) urlParts.push(\"brands=\".concat(brands.join(',')));\n    if (saleThreshold && parseInt(saleThreshold)) urlParts.push(\"sale-threshold=\".concat(saleThreshold));\n\n    if (isSearchBaseUrl && urlParts.length > 0) {\n      path = \"&\".concat(urlParts.join('&'));\n    } else {\n      path = urlParts.length ? \"/filter/\".concat(urlParts.join('&')) : '';\n    }\n\n    if (onSubmitCallback) onSubmitCallback();\n    router.push(\"\".concat(base).concat(path));\n  };\n\n  var quickFindSectionLabel = function quickFindSectionLabel(text) {\n    return __jsx(SectionLabel, {\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, __jsx(Typography, {\n      tag: \"h2\",\n      weight: 500,\n      margin: \"10px 0px 10px 0px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, text));\n  };\n\n  return __jsx(QuickViewModal, _extends({\n    onSubmitModal: submitQuickFinder\n  }, modalProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }), __jsx(QuickSectionTabs, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(SectionTabs, _extends({\n    navigationData: navigationData,\n    sectionTabValue: sectionTabValue,\n    setSectionTabValue: setSectionTabValue\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))), quickFindSectionLabel('Category'), hasMultipleLabels && __jsx(QuickViewSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(LabelTabs, _extends({\n    navigationData: navigationData,\n    sectionTabValue: sectionTabValue,\n    labelTabValue: labelTabValue,\n    setLabelTabValue: setLabelTabValue\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))), __jsx(QuickViewSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"set category\",\n    name: \"set-category\",\n    value: selectedCategory,\n    onChange: function onChange(event) {\n      var _event$target;\n\n      return setSelectedCategory((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(RadioItemContainer, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(RadioItem, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    value: 'all',\n    label: \"I'm casually browsing\",\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), (_getCategoryList = getCategoryList()) === null || _getCategoryList === void 0 ? void 0 : _getCategoryList.map(function (_ref2, catIndex) {\n    var title = _ref2.title;\n    return __jsx(RadioItem, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      key: \"\".concat(title, \"-\").concat(catIndex),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, __jsx(FormControlLabel, {\n      value: title,\n      label: startCase(title),\n      control: __jsx(RadioButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }));\n  })))), quickFindSectionLabel('Sale'), __jsx(QuickViewSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"sale filter\",\n    name: \"sale-filter\",\n    value: filterState.saleThreshold,\n    onChange: function onChange(event) {\n      var _event$target2;\n\n      return filterMethods.setSaleThreshold((_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    value: '0',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 50\n      }\n    }),\n    label: \"All products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    value: '1',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 50\n      }\n    }),\n    label: \"All sale items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    value: '20',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 51\n      }\n    }),\n    label: \"20% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    value: '50',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 51\n      }\n    }),\n    label: \"50% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    value: '70',\n    control: __jsx(RadioButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 51\n      }\n    }),\n    label: \"70% and more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }))), quickFindSectionLabel('Brands'), __jsx(QuickViewSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, brandList.map(function (brand) {\n    return __jsx(Grid, {\n      key: brand,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(FormControlLabel, {\n      value: urlCase(brand),\n      control: __jsx(Checkbox, {\n        checked: filterState.brands.includes(urlCase(brand)),\n        onChange: function onChange(_ref3) {\n          var target = _ref3.target;\n          return handleCheckBoxChange(target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }),\n      label: brand,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }));\n  })), quickFindSectionLabel('Key words'), __jsx(QuickViewSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, __jsx(Spacer, {\n    h: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: !filterState.keyWords.length ? productFiltersContent.keyWordsInputLabel : '',\n    value: keyWordsToString(filterState.keyWords),\n    onChange: function onChange(_ref4) {\n      var target = _ref4.target;\n      return filterMethods.setKeyWords(target.value && target.value.toLowerCase().replace(',', ' ').split(' ') || []);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(QuickFinder, \"e9Y+g6hqFtzYyOc4ByFVKoLPZHo=\", false, function () {\n  return [useCms, useFilters, useRouter, useBrandList];\n});\n\n_c = QuickFinder;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickFinder\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/components/modules/QuickFinder/QuickFinder.js"],"names":["React","useState","RadioButton","Checkbox","RadioGroup","FormControlLabel","Typography","keyWordsToString","urlCase","PLP_PATH","SEARCH_PATH","Input","useCms","useBrandList","useFilters","Spacer","useRouter","SectionTabs","LabelTabs","startCase","Grid","QuickSectionTabs","QuickViewSection","RadioItem","RadioItemContainer","QuickViewModal","SectionLabel","QuickFinder","navigationData","onSubmitCallback","modalProps","sectionTabValue","setSectionTabValue","labelTabValue","setLabelTabValue","selectedCategory","setSelectedCategory","productFiltersContent","filterMethods","filterState","normalizedFilters","router","brandList","selectedSection","title","hasMultipleLabels","subNav","length","getCategoryList","subNavItems","handleCheckBoxChange","value","brands","includes","setBrands","filter","brand","submitQuickFinder","path","keyWords","saleThreshold","urlParts","isSearchBaseUrl","base","push","join","parseInt","quickFindSectionLabel","text","event","target","map","catIndex","setSaleThreshold","keyWordsInputLabel","setKeyWords","toLowerCase","replace","split"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,iBAA1C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,YAAtC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,QAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,SAHF,EAIEC,kBAJF,EAKEC,cALF,EAMEC,YANF,QAOO,UAPP;AAeA,eAAe,SAASC,WAAT,OAIM;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,MAHnBC,cAGmB,QAHnBA,cAGmB;AAAA,MAFnBC,gBAEmB,QAFnBA,gBAEmB;AAAA,MADhBC,UACgB;;AAAA,kBAC2B7B,QAAQ,CAAC,CAAD,CADnC;AAAA,MACZ8B,eADY;AAAA,MACKC,kBADL;;AAAA,mBAEuB/B,QAAQ,CAAC,CAAD,CAF/B;AAAA,MAEZgC,aAFY;AAAA,MAEGC,gBAFH;;AAAA,mBAG6BjC,QAAQ,CAAC,KAAD,CAHrC;AAAA,MAGZkC,gBAHY;AAAA,MAGMC,mBAHN;;AAAA,gBAIexB,MAAM,CAAC,gBAAD,CAJrB;AAAA,MAIXyB,qBAJW,WAIXA,qBAJW;;AAAA,oBAKuCvB,UAAU,EALjD;AAAA,MAKXwB,aALW,eAKXA,aALW;AAAA,MAKIC,WALJ,eAKIA,WALJ;AAAA,MAKiBC,iBALjB,eAKiBA,iBALjB;;AAMnB,MAAMC,MAAM,GAAGzB,SAAS,EAAxB;AACA,MAAM0B,SAAS,GAAG7B,YAAY,EAA9B;AAEA,MAAM8B,eAAe,4BAAGf,cAAc,CAACG,eAAD,CAAjB,0DAAG,sBAAiCa,KAAzD;AACA,MAAMC,iBAAiB,GAAG,2BAAAjB,cAAc,CAACG,eAAD,CAAd,kFAAiCe,MAAjC,CAAwCC,MAAxC,IAAiD,CAA3E;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;;AAAA,qCACtBpB,cAAc,CAACG,eAAD,CADQ,2DACtB,uBAAiCe,MAAjC,CAAwCb,aAAxC,EAAuDgB,WADjC;AAAA,GAAxB;;AAGA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAyB;AAAA,QAC5CC,MAD4C,GACjCb,WADiC,CAC5Ca,MAD4C;;AAEpD,QAAIA,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1Bb,MAAAA,aAAa,CAACgB,SAAd,CAAwBF,MAAM,CAACG,MAAP,CAAc,UAACC,KAAD;AAAA,eAAWhD,OAAO,CAACgD,KAAD,CAAP,KAAmBL,KAA9B;AAAA,OAAd,CAAxB;AACD,KAFD,MAEO;AACLb,MAAAA,aAAa,CAACgB,SAAd,8BAA4BF,MAA5B,IAAoCD,KAApC;AACD;AACF,GAPD;;AASA,MAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;AACpC,QAAIC,IAAI,GAAG,EAAX;AADoC,QAE5BC,QAF4B,GAEQnB,iBAFR,CAE5BmB,QAF4B;AAAA,QAElBC,aAFkB,GAEQpB,iBAFR,CAElBoB,aAFkB;AAAA,QAEHR,MAFG,GAEQZ,iBAFR,CAEHY,MAFG;AAGpC,QAAMS,QAAQ,GAAG,EAAjB;AACA,QAAMC,eAAe,GAAG3B,gBAAgB,KAAK,KAA7C;AACA,QAAM4B,IAAI,GAAGD,eAAe,cACpBpD,WADoB,sBACGiC,eADH,eAEpBlC,QAFoB,cAERD,OAAO,CAACmC,eAAD,CAFC,cAEoBnC,OAAO,CAAC2B,gBAAD,CAF3B,CAA5B;AAIA,QAAIwB,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEZ,MAAd,EAAsBc,QAAQ,CAACG,IAAT,qBAA2BL,QAAQ,CAACM,IAAT,CAAc,GAAd,CAA3B;AACtB,QAAIb,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEL,MAAZ,EAAoBc,QAAQ,CAACG,IAAT,kBAAwBZ,MAAM,CAACa,IAAP,CAAY,GAAZ,CAAxB;AACpB,QAAIL,aAAa,IAAIM,QAAQ,CAACN,aAAD,CAA7B,EAA8CC,QAAQ,CAACG,IAAT,0BAAgCJ,aAAhC;;AAC9C,QAAIE,eAAe,IAAID,QAAQ,CAACd,MAAT,GAAkB,CAAzC,EAA4C;AAC1CW,MAAAA,IAAI,cAAOG,QAAQ,CAACI,IAAT,CAAc,GAAd,CAAP,CAAJ;AACD,KAFD,MAEO;AACLP,MAAAA,IAAI,GAAGG,QAAQ,CAACd,MAAT,qBAA6Bc,QAAQ,CAACI,IAAT,CAAc,GAAd,CAA7B,IAAoD,EAA3D;AACD;;AAED,QAAIpC,gBAAJ,EAAsBA,gBAAgB;AACtCY,IAAAA,MAAM,CAACuB,IAAP,WAAeD,IAAf,SAAsBL,IAAtB;AACD,GApBD;;AAsBA,MAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD;AAAA,WAC5B,MAAC,YAAD;AAAc,MAAA,SAAS,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,GAAG,EAAC,IAAhB;AAAqB,MAAA,MAAM,EAAE,GAA7B;AAAkC,MAAA,MAAM,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CADF,CAD4B;AAAA,GAA9B;;AAQA,SACE,MAAC,cAAD;AAAgB,IAAA,aAAa,EAAEX;AAA/B,KAAsD3B,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD,WAAiB;AAAEF,IAAAA,cAAc,EAAdA,cAAF;AAAkBG,IAAAA,eAAe,EAAfA,eAAlB;AAAmCC,IAAAA,kBAAkB,EAAlBA;AAAnC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,EAKGmC,qBAAqB,CAAC,UAAD,CALxB,EAMGtB,iBAAiB,IAChB,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,WAAe;AAAEjB,IAAAA,cAAc,EAAdA,cAAF;AAAkBG,IAAAA,eAAe,EAAfA,eAAlB;AAAmCE,IAAAA,aAAa,EAAbA,aAAnC;AAAkDC,IAAAA,gBAAgB,EAAhBA;AAAlD,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAPJ,EAYE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,kBAAW,cADb;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,KAAK,EAAEC,gBAHT;AAIE,IAAA,QAAQ,EAAE,kBAACkC,KAAD;AAAA;;AAAA,aAAWjC,mBAAmB,kBAACiC,KAAK,CAACC,MAAP,kDAAC,cAAcnB,KAAf,CAA9B;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,kBAAD;AAAoB,IAAA,SAAS,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,KAAK,EAAC,uBAFR;AAGE,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,sBAQGH,eAAe,EARlB,qDAQG,iBAAmBuB,GAAnB,CAAuB,iBAAYC,QAAZ;AAAA,QAAG5B,KAAH,SAAGA,KAAH;AAAA,WACtB,MAAC,SAAD;AAAW,MAAA,IAAI,MAAf;AAAgB,MAAA,EAAE,EAAE,EAApB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAA+B,MAAA,GAAG,YAAKA,KAAL,cAAc4B,QAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,KAAK,EAAE5B,KADT;AAEE,MAAA,KAAK,EAAEzB,SAAS,CAACyB,KAAD,CAFlB;AAGE,MAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADsB;AAAA,GAAvB,CARH,CALF,CADF,CAZF,EAuCGuB,qBAAqB,CAAC,MAAD,CAvCxB,EAwCE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,kBAAW,aADb;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAE5B,WAAW,CAACqB,aAHrB;AAIE,IAAA,QAAQ,EAAE,kBAACS,KAAD;AAAA;;AAAA,aAAW/B,aAAa,CAACmC,gBAAd,mBAA+BJ,KAAK,CAACC,MAArC,mDAA+B,eAAcnB,KAA7C,CAAX;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,GAAzB;AAA8B,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAwD,IAAA,KAAK,EAAC,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,GAAzB;AAA8B,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAwD,IAAA,KAAK,EAAC,gBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,IAAzB;AAA+B,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AAAyD,IAAA,KAAK,EAAC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,IAAzB;AAA+B,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AAAyD,IAAA,KAAK,EAAC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,IAAzB;AAA+B,IAAA,OAAO,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AAAyD,IAAA,KAAK,EAAC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAxCF,EAsDGgB,qBAAqB,CAAC,QAAD,CAtDxB,EAuDE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,SAAS,CAAC6B,GAAV,CAAc,UAACf,KAAD;AAAA,WACb,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,KAAK,EAAEhD,OAAO,CAACgD,KAAD,CADhB;AAEE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,OAAO,EAAEjB,WAAW,CAACa,MAAZ,CAAmBC,QAAnB,CAA4B7C,OAAO,CAACgD,KAAD,CAAnC,CADX;AAEE,QAAA,QAAQ,EAAE;AAAA,cAAGc,MAAH,SAAGA,MAAH;AAAA,iBAAgBpB,oBAAoB,CAACoB,MAAM,CAACnB,KAAR,CAApC;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAQE,MAAA,KAAK,EAAEK,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa;AAAA,GAAd,CADH,CAvDF,EAwEGW,qBAAqB,CAAC,WAAD,CAxExB,EAyEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAE,CAAC5B,WAAW,CAACoB,QAAZ,CAAqBZ,MAAtB,GAA+BV,qBAAqB,CAACqC,kBAArD,GAA0E,EAHnF;AAIE,IAAA,KAAK,EAAEnE,gBAAgB,CAACgC,WAAW,CAACoB,QAAb,CAJzB;AAKE,IAAA,QAAQ,EAAE;AAAA,UAAGW,MAAH,SAAGA,MAAH;AAAA,aACRhC,aAAa,CAACqC,WAAd,CACGL,MAAM,CAACnB,KAAP,IAAgBmB,MAAM,CAACnB,KAAP,CAAayB,WAAb,GAA2BC,OAA3B,CAAmC,GAAnC,EAAwC,GAAxC,EAA6CC,KAA7C,CAAmD,GAAnD,CAAjB,IAA6E,EAD/E,CADQ;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzEF,CADF;AA0FD;;GApJuBnD,W;UAQYf,M,EACwBE,U,EAC3CE,S,EACGH,Y;;;KAXIc,W","sourcesContent":["//@flow\nimport React, { useState } from 'react';\nimport { type NavigationData, type NormalizedSubNavItems } from '@types/navigationData';\nimport RadioButton from '@units/RadioButton';\nimport Checkbox from '@units/Checkbox';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@units/Typography';\nimport { keyWordsToString, urlCase } from '@helpers/common';\nimport { PLP_PATH, SEARCH_PATH } from '@constants';\nimport Input from '@units/Input';\nimport { useCms, useBrandList } from '@hooks';\nimport { useFilters } from '@modules/Filters';\nimport { Spacer } from '@styles/CommonStyledComponents';\nimport { useRouter } from 'next/router';\nimport { SectionTabs, LabelTabs } from './QuickFinderTabs';\nimport startCase from 'lodash/startCase';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  QuickSectionTabs,\n  QuickViewSection,\n  RadioItem,\n  RadioItemContainer,\n  QuickViewModal,\n  SectionLabel,\n} from './styles';\n\ntype QuickFinderProps = $Exact<{\n  navigationData: NavigationData,\n  onSubmitCallback?: Function,\n  ...\n}>;\n\nexport default function QuickFinder({\n  navigationData,\n  onSubmitCallback,\n  ...modalProps\n}: QuickFinderProps) {\n  const [sectionTabValue, setSectionTabValue] = useState(0);\n  const [labelTabValue, setLabelTabValue] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const { productFiltersContent } = useCms('listingContent');\n  const { filterMethods, filterState, normalizedFilters } = useFilters();\n  const router = useRouter();\n  const brandList = useBrandList();\n\n  const selectedSection = navigationData[sectionTabValue]?.title;\n  const hasMultipleLabels = navigationData[sectionTabValue]?.subNav.length > 1;\n\n  const getCategoryList = (): NormalizedSubNavItems =>\n    navigationData[sectionTabValue]?.subNav[labelTabValue].subNavItems;\n\n  const handleCheckBoxChange = (value: string): void => {\n    const { brands } = filterState;\n    if (brands.includes(value)) {\n      filterMethods.setBrands(brands.filter((brand) => urlCase(brand) !== value));\n    } else {\n      filterMethods.setBrands([...brands, value]);\n    }\n  };\n\n  const submitQuickFinder = (): void => {\n    let path = '';\n    const { keyWords, saleThreshold, brands } = normalizedFilters;\n    const urlParts = [];\n    const isSearchBaseUrl = selectedCategory === 'all';\n    const base = isSearchBaseUrl\n      ? `/${SEARCH_PATH}?section=${selectedSection}`\n      : `/${PLP_PATH}/${urlCase(selectedSection)}/${urlCase(selectedCategory)}`;\n\n    if (keyWords?.length) urlParts.push(`key-words=${keyWords.join(',')}`);\n    if (brands?.length) urlParts.push(`brands=${brands.join(',')}`);\n    if (saleThreshold && parseInt(saleThreshold)) urlParts.push(`sale-threshold=${saleThreshold}`);\n    if (isSearchBaseUrl && urlParts.length > 0) {\n      path = `&${urlParts.join('&')}`;\n    } else {\n      path = urlParts.length ? `/filter/${urlParts.join('&')}` : '';\n    }\n\n    if (onSubmitCallback) onSubmitCallback();\n    router.push(`${base}${path}`);\n  };\n\n  const quickFindSectionLabel = (text: string): any => (\n    <SectionLabel container>\n      <Typography tag=\"h2\" weight={500} margin=\"10px 0px 10px 0px\">\n        {text}\n      </Typography>\n    </SectionLabel>\n  );\n\n  return (\n    <QuickViewModal onSubmitModal={submitQuickFinder} {...modalProps}>\n      <QuickSectionTabs container>\n        <SectionTabs {...{ navigationData, sectionTabValue, setSectionTabValue }} />\n      </QuickSectionTabs>\n\n      {quickFindSectionLabel('Category')}\n      {hasMultipleLabels && (\n        <QuickViewSection>\n          <LabelTabs {...{ navigationData, sectionTabValue, labelTabValue, setLabelTabValue }} />\n        </QuickViewSection>\n      )}\n\n      <QuickViewSection>\n        <RadioGroup\n          aria-label=\"set category\"\n          name=\"set-category\"\n          value={selectedCategory}\n          onChange={(event) => setSelectedCategory(event.target?.value)}>\n          <RadioItemContainer container>\n            <RadioItem item xs={12} sm={6}>\n              <FormControlLabel\n                value={'all'}\n                label=\"I'm casually browsing\"\n                control={<RadioButton />}\n              />\n            </RadioItem>\n            {getCategoryList()?.map(({ title }, catIndex) => (\n              <RadioItem item xs={12} sm={6} key={`${title}-${catIndex}`}>\n                <FormControlLabel\n                  value={title}\n                  label={startCase(title)}\n                  control={<RadioButton />}\n                />\n              </RadioItem>\n            ))}\n          </RadioItemContainer>\n        </RadioGroup>\n      </QuickViewSection>\n\n      {quickFindSectionLabel('Sale')}\n      <QuickViewSection>\n        <RadioGroup\n          aria-label=\"sale filter\"\n          name=\"sale-filter\"\n          value={filterState.saleThreshold}\n          onChange={(event) => filterMethods.setSaleThreshold(event.target?.value)}>\n          <FormControlLabel value={'0'} control={<RadioButton />} label=\"All products\" />\n          <FormControlLabel value={'1'} control={<RadioButton />} label=\"All sale items\" />\n          <FormControlLabel value={'20'} control={<RadioButton />} label=\"20% and more\" />\n          <FormControlLabel value={'50'} control={<RadioButton />} label=\"50% and more\" />\n          <FormControlLabel value={'70'} control={<RadioButton />} label=\"70% and more\" />\n        </RadioGroup>\n      </QuickViewSection>\n\n      {quickFindSectionLabel('Brands')}\n      <QuickViewSection>\n        {brandList.map((brand: string) => (\n          <Grid key={brand}>\n            <FormControlLabel\n              value={urlCase(brand)}\n              control={\n                <Checkbox\n                  checked={filterState.brands.includes(urlCase(brand))}\n                  onChange={({ target }) => handleCheckBoxChange(target.value)}\n                />\n              }\n              label={brand}\n            />\n          </Grid>\n        ))}\n      </QuickViewSection>\n\n      {quickFindSectionLabel('Key words')}\n      <QuickViewSection>\n        <Spacer h={8} />\n        <Input\n          fullWidth\n          variant=\"outlined\"\n          label={!filterState.keyWords.length ? productFiltersContent.keyWordsInputLabel : ''}\n          value={keyWordsToString(filterState.keyWords)}\n          onChange={({ target }) =>\n            filterMethods.setKeyWords(\n              (target.value && target.value.toLowerCase().replace(',', ' ').split(' ')) || []\n            )\n          }\n        />\n      </QuickViewSection>\n    </QuickViewModal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}