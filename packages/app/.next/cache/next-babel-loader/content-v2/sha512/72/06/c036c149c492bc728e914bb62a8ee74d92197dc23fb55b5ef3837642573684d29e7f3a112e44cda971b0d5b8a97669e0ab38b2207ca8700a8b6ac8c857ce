{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function productCountPipe(productData, productCountStart, productCountEnd) {\n  return productData.map((_ref) => {\n    let {\n      data\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"data\"]);\n\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      data: data.slice(productCountStart, productCountEnd),\n      totalProductsInCategory: data.length\n    });\n  });\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/graphQL/resolvers/resolverPipes/productCountPipe.js"],"names":["productCountPipe","productData","productCountStart","productCountEnd","map","data","rest","slice","totalProductsInCategory","length"],"mappings":";;;;;;;AAGA,OAAO,SAASA,gBAAT,CACLC,WADK,EAELC,iBAFK,EAGLC,eAHK,EAImB;AACxB,SAAOF,WAAW,CAACG,GAAZ,CAAgB;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,QAAYC,IAAZ;;AAAA,2CAClBA,IADkB;AAErBD,MAAAA,IAAI,EAAEA,IAAI,CAACE,KAAL,CAAWL,iBAAX,EAA8BC,eAA9B,CAFe;AAGrBK,MAAAA,uBAAuB,EAAEH,IAAI,CAACI;AAHT;AAAA,GAAhB,CAAP;AAKD","sourcesContent":["//@flow\nimport { type ProductCategory } from '@types/product';\n\nexport function productCountPipe(\n  productData: Array<ProductCategory>,\n  productCountStart: number,\n  productCountEnd: number\n): Array<ProductCategory> {\n  return productData.map(({ data, ...rest }) => ({\n    ...rest,\n    data: data.slice(productCountStart, productCountEnd),\n    totalProductsInCategory: data.length,\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}