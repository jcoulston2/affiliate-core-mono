{"ast":null,"code":"import _asyncToGenerator from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nexport default function proxy() {\n  var get = function get(endPoint, query) {\n    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return axios.get(\"\".concat(endPoint).concat(query), headers);\n  };\n\n  var post = function post(endPoint, body) {\n    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return axios.post(endPoint, body, headers);\n  };\n\n  var graphQl = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endPoint, queryString, variables) {\n      var _yield$axios$post, responseQuery;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(endPoint, {\n                query: queryString,\n                variables: variables\n              });\n\n            case 2:\n              _yield$axios$post = _context.sent;\n              responseQuery = _yield$axios$post.data;\n              return _context.abrupt(\"return\", responseQuery.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function graphQl(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    get: get,\n    post: post,\n    graphQl: graphQl\n  };\n}","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/affiliate-app/apiUtil/proxy.js"],"names":["axios","proxy","get","endPoint","query","headers","post","body","graphQl","queryString","variables","responseQuery","data"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,eAAe,SAASC,KAAT,GAA+B;AAC5C,MAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,QAAD,EAAmBC,KAAnB,EAA0E;AAAA,QAAxCC,OAAwC,uEAArB,EAAqB;AACpF,WAAOL,KAAK,CAACE,GAAN,WAAaC,QAAb,SAAwBC,KAAxB,GAAiCC,OAAjC,CAAP;AACD,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACH,QAAD,EAAmBI,IAAnB,EAAyE;AAAA,QAAxCF,OAAwC,uEAArB,EAAqB;AACpF,WAAOL,KAAK,CAACM,IAAN,CAAWH,QAAX,EAAqBI,IAArB,EAA2BF,OAA3B,CAAP;AACD,GAFD;;AAIA,MAAMG,OAAO;AAAA,wEAAG,iBACdL,QADc,EAEdM,WAFc,EAGdC,SAHc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKwBV,KAAK,CAACM,IAAN,CAAWH,QAAX,EAAqB;AAAEC,gBAAAA,KAAK,EAAEK,WAAT;AAAsBC,gBAAAA,SAAS,EAATA;AAAtB,eAArB,CALxB;;AAAA;AAAA;AAKAC,cAAAA,aALA,qBAKNC,IALM;AAAA,+CAMPD,aAAa,CAACC,IANP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPJ,OAAO;AAAA;AAAA;AAAA,KAAb;;AASA,SAAO;AACLN,IAAAA,GAAG,EAAHA,GADK;AAELI,IAAAA,IAAI,EAAJA,IAFK;AAGLE,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD","sourcesContent":["//@flow\nimport axios from 'axios';\n\ntype ProxyMethods = {\n  get: Function,\n  post: Function,\n  graphQl: Function,\n};\n\nexport default function proxy(): ProxyMethods {\n  const get = (endPoint: string, query: string, headers?: Object = {}): Promise<any> => {\n    return axios.get(`${endPoint}${query}`, headers);\n  };\n\n  const post = (endPoint: string, body: Object, headers?: Object = {}): Promise<any> => {\n    return axios.post(endPoint, body, headers);\n  };\n\n  const graphQl = async (\n    endPoint: string,\n    queryString: Object,\n    variables?: Object\n  ): Promise<any> => {\n    const { data: responseQuery } = await axios.post(endPoint, { query: queryString, variables });\n    return responseQuery.data;\n  };\n\n  return {\n    get,\n    post,\n    graphQl,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}