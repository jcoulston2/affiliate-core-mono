{"ast":null,"code":"var _jsxFileName = \"/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/app/CmsContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useContext } from 'react';\nvar initialCmsState = {\n  cmsData: {}\n};\nexport var CmsContext = /*#__PURE__*/createContext();\nexport var CmsProvider = function CmsProvider(_ref) {\n  var children = _ref.children,\n      _ref$cms = _ref.cms,\n      cms = _ref$cms === void 0 ? initialCmsState : _ref$cms;\n  return __jsx(CmsContext.Provider, {\n    value: cms,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, children);\n}; // Makes things a little easier to hook into our state\n\n_c = CmsProvider;\nexport var useCmsContext = function useCmsContext() {\n  _s();\n\n  return useContext(CmsContext);\n};\n\n_s(useCmsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CmsProvider\");","map":{"version":3,"sources":["/Users/justincoulston/Desktop/affilaite-core-mono/packages/app/app/CmsContext.js"],"names":["React","createContext","useContext","initialCmsState","cmsData","CmsContext","CmsProvider","children","cms","useCmsContext"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAQA,IAAMC,eAAe,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAxB;AACA,OAAO,IAAMC,UAA6B,gBAAGJ,aAAa,EAAnD;AACP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,OAA2D;AAAA,MAAxDC,QAAwD,QAAxDA,QAAwD;AAAA,sBAA9CC,GAA8C;AAAA,MAA9CA,GAA8C,yBAAxCL,eAAwC;AACpF,SAAO,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEK,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,QAAlC,CAAP;AACD,CAFM,C,CAIP;;KAJaD,W;AAKb,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA,SAAMP,UAAU,CAACG,UAAD,CAAhB;AAAA,CAAtB;;GAAMI,a","sourcesContent":["//@flow\nimport React, { createContext, useContext } from 'react';\nimport { type CmsData } from '../types/apiQueries';\n\ntype CmsProviderProps = {\n  cms: CmsData,\n  children: any,\n};\n\nconst initialCmsState = { cmsData: {} };\nexport const CmsContext: { [string]: any } = createContext();\nexport const CmsProvider = ({ children, cms = initialCmsState }: CmsProviderProps) => {\n  return <CmsContext.Provider value={cms}>{children}</CmsContext.Provider>;\n};\n\n// Makes things a little easier to hook into our state\nexport const useCmsContext = () => useContext(CmsContext);\n"]},"metadata":{},"sourceType":"module"}