{"ast":null,"code":"import _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@units/Typography';\nimport Image from '@units/Image';\nimport Input from '@units/Input';\nimport RadioButton from '@units/RadioButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useForm } from '@hooks';\nimport Button from '@units/Button';\nimport Form from '@units/Form';\nimport { getLocalStorage } from '@helpers/common';\nimport { USER_SETTINGS_KEY } from '@constants';\nimport { ModalContainer, Skip, ModalGridItem, StyledRadioGroup } from './styles';\nexport default function UserSettingsModal(_ref) {\n  var setUserSettings = _ref.setUserSettings,\n      useModal = _ref.useModal,\n      userSettingsModalHeadingText = _ref.userSettingsModalHeadingText,\n      userSettingsModalBlurbText = _ref.userSettingsModalBlurbText,\n      userSettingsModalHeading = _ref.userSettingsModalHeading,\n      userSettingsModalBlurb = _ref.userSettingsModalBlurb,\n      modalDelay = _ref.modalDelay;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var userSettingsConfig = getLocalStorage(USER_SETTINGS_KEY);\n  var hasSeenModal = userSettingsConfig === null || userSettingsConfig === void 0 ? void 0 : userSettingsConfig.hasSeenUserIntroModal;\n  var initialFormValues = {\n    name: null,\n    gender: null\n  };\n  var validationSchema = {\n    name: function name(value) {\n      if (!(value !== null && value !== void 0 && value.length)) {\n        return 'required';\n      }\n    }\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUserSettings(_objectSpread(_objectSpread({}, userSettingsConfig), {}, {\n      hasSeenUserIntroModal: true\n    }));\n    setOpen(false);\n  };\n\n  var submitCallback = function submitCallback(formValues) {\n    setUserSettings(_objectSpread(_objectSpread({}, formValues), {}, {\n      hasSeenUserIntroModal: true\n    }));\n    setOpen(false);\n  };\n\n  var _useForm = useForm(initialFormValues, validationSchema),\n      formValues = _useForm.formValues,\n      onChangeHandler = _useForm.onChangeHandler,\n      submitForm = _useForm.submitForm,\n      errors = _useForm.errors;\n\n  useEffect(function () {\n    if (useModal && !hasSeenModal) {\n      setTimeout(function () {\n        return setOpen(true);\n      }, modalDelay);\n    }\n  }, []);\n  return __jsx(Dialog, {\n    open: open,\n    keepMounted: true,\n    onClose: function onClose() {\n      return handleCloseModal();\n    },\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\"\n  }, __jsx(ModalContainer, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"flex-end\"\n  }, __jsx(Skip, {\n    item: true,\n    onClick: function onClick() {\n      return handleCloseModal();\n    }\n  }, __jsx(Typography, {\n    tag: \"p\",\n    weight: 200,\n    size: 15,\n    padding: '0px 0px 10px 0px',\n    decoration: 'underline'\n  }, \"skip >\"))), __jsx(Form, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      submitForm(submitCallback);\n    }\n  }, __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    typeStyles: userSettingsModalHeading\n  }, userSettingsModalHeadingText)), __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Image, {\n    src: \"shoe-and-bag.svg\",\n    alt: \"welcome to fliik\",\n    maxWidth: \"180px\"\n  })), __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: userSettingsModalBlurb\n  }, userSettingsModalBlurbText)), __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    padding: '0.5em 0em',\n    tag: 'h3',\n    weight: 500\n  }, \"What\\u2019s your name?\"), __jsx(Input, {\n    error: !!errors.name,\n    helperText: errors === null || errors === void 0 ? void 0 : errors.name,\n    value: formValues.name,\n    fullWidth: true,\n    onChange: onChangeHandler('name')\n  })), __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    padding: '0.5em 0em 1em 0em',\n    tag: 'h3',\n    weight: 500\n  }, \"What\\u2019s your gender?\"), __jsx(StyledRadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender\",\n    value: formValues.gender,\n    onChange: onChangeHandler('gender')\n  }, __jsx(FormControlLabel, {\n    value: \"Female\",\n    control: __jsx(RadioButton, null),\n    label: \"Female\"\n  }), __jsx(FormControlLabel, {\n    value: \"Male\",\n    control: __jsx(RadioButton, null),\n    label: \"Male\"\n  }), __jsx(FormControlLabel, {\n    value: \"Other\",\n    control: __jsx(RadioButton, null),\n    label: \"Other\"\n  }))), __jsx(ModalGridItem, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    secondary: true,\n    fullWidth: true,\n    type: \"submit\"\n  }, \"Done\")))));\n}","map":null,"metadata":{},"sourceType":"module"}