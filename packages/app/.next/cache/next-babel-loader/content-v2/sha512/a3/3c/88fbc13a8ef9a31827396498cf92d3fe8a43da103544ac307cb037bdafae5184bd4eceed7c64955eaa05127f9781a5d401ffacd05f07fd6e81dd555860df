{"ast":null,"code":"import { productSchema } from '../../../graphQL/schemas';\nimport { STORE } from '../../../constants';\nimport { storeController } from '../../../apiUtil/controller';\nimport gql from 'graphql-tag';\nexport { config } from '../../../apiUtil';\nimport { baseMiddleware } from '@server/middleware';\nimport Cors from 'cors';\nconst handler = {\n  error: (req, res) => {\n    res.status(404).send();\n  },\n\n  /**\n   * @endpoint /store\n   */\n  store: async (req, res) => {\n    if (req.method === 'POST') {\n      const {\n        query,\n        variables\n      } = req.body;\n      const gqlQuery = gql`\n        ${query}\n      `;\n      const productData = await storeController(gqlQuery, productSchema, true, variables);\n      return res.json({\n        data: productData\n      });\n    } else {\n      handler.error(req, res);\n    }\n  }\n};\nexport default async function handle(req, res) {\n  await baseMiddleware(req, res);\n  const {\n    query\n  } = req;\n  const [endpoint] = query === null || query === void 0 ? void 0 : query.endpoint;\n\n  switch (endpoint) {\n    case STORE:\n      return handler.store(req, res);\n\n    default:\n      return handler.error(req, res);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}