{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport buildRequests from '../../apiUtil/requests/buildRequests';\nimport { getNavigationProps } from '@helpers/page';\nimport ListingContent from '@containers/ListingContent';\nimport { actions } from '../../app/root-actions';\nimport { wrapper } from '../../app/store';\nimport PageSkeleton from '@layouts';\nimport { getFilterValues } from '@helpers/page';\nimport config from '@config';\n\nconst ListingPage = () => {\n  return __jsx(PageSkeleton, null, __jsx(ListingContent, null));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: config.productListingStaticPaths,\n    fallback: true\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async ({\n  store,\n  params\n}) => {\n  const homeCmsQuery = 'listingContent, productViewContent, marketing';\n  const [section, productType, filterPathKey, filterValues] = params.slug;\n  const filters = getFilterValues(filterPathKey, filterValues);\n  const productCountStart = 0;\n  const productCountEnd = 100;\n  const [navData, cmsData, productData, brandList] = await Promise.all([await buildRequests.getNavigationData(), await buildRequests.getCmsContent(homeCmsQuery), await buildRequests.getProductData(section, productType, productCountStart, productCountEnd, filters), await buildRequests.getBrandList()]);\n  const navigationProps = getNavigationProps(navData);\n  store.dispatch(actions.setNavigationData(navigationProps.affiliateData));\n  store.dispatch(actions.setProductData(productData.categoryData, filters, {}));\n  store.dispatch(actions.setCmsData(cmsData));\n  store.dispatch(actions.setBrandList(brandList));\n});\nexport default ListingPage;","map":null,"metadata":{},"sourceType":"module"}