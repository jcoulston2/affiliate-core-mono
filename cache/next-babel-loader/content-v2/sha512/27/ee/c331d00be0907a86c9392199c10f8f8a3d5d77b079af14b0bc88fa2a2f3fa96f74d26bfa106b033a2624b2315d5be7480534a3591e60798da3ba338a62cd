{"ast":null,"code":"import { crossIncludes } from '@helpers/common';\nexport function getTermString(predictiveTerms, useSplitter) {\n  if (typeof predictiveTerms === 'string') {\n    return predictiveTerms;\n  } else {\n    const values = Object.values(predictiveTerms).filter(notNull => !!notNull);\n    return values.join(useSplitter ? ' | ' : ' ');\n  }\n}\nexport function getPredictiveTermsList(predictiveTermsResponse, value) {\n  const suggestions = [];\n  const pushedTerms = [];\n\n  const valueMatch = (p1, p2) => p1 && p2 ? (p1 === null || p1 === void 0 ? void 0 : p1.includes(p2)) || (p2 === null || p2 === void 0 ? void 0 : p2.includes(p1)) : false;\n\n  const pushSuggestion = term => {\n    const termStr = JSON.stringify(term);\n\n    if (!pushedTerms.includes(termStr)) {\n      pushedTerms.push(termStr);\n      suggestions.push(term);\n    }\n  };\n\n  for (const term of predictiveTermsResponse) {\n    const {\n      brand,\n      section,\n      productColor,\n      keyTerm,\n      category\n    } = term;\n\n    if (valueMatch(section, value) && category) {\n      pushSuggestion({\n        section\n      });\n      pushSuggestion({\n        section,\n        category\n      });\n    }\n\n    if (valueMatch(brand, value)) {\n      pushSuggestion({\n        brand\n      });\n      if (section) pushSuggestion({\n        section,\n        brand\n      });\n      if (category) pushSuggestion({\n        section,\n        brand,\n        category\n      });\n    }\n\n    if (valueMatch(productColor, value)) {\n      if (category) pushSuggestion({\n        section,\n        productColor,\n        category\n      });\n\n      if (category && keyTerm && !crossIncludes(category, keyTerm)) {\n        pushSuggestion({\n          section,\n          productColor,\n          keyTerm,\n          category\n        });\n      }\n    }\n\n    if (valueMatch(keyTerm, value) && category && !crossIncludes(category, keyTerm)) {\n      pushSuggestion({\n        section,\n        keyTerm,\n        category\n      });\n    }\n\n    if (valueMatch(category, value)) {\n      if (section) pushSuggestion({\n        section,\n        category\n      });\n    }\n  }\n\n  return suggestions;\n}","map":null,"metadata":{},"sourceType":"module"}