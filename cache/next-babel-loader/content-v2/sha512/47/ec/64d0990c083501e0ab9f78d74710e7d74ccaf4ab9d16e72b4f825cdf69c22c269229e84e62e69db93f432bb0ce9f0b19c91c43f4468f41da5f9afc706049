{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { StyledCmsGrid } from '@styles/CommonStyledComponents';\nimport { shadowBottom } from '@styles/commonStyles';\nvar StickHeaderWrapper = styled.div.withConfig({\n  displayName: \"StickyHeader__StickHeaderWrapper\",\n  componentId: \"sc-1jsa0sh-0\"\n})([\"width:100%;\", \" \", \"\"], function (_ref) {\n  var sticky = _ref.sticky,\n      height = _ref.height;\n  return sticky && \"    \\n    height: \".concat(height, \"px;    \\n    > \").concat(StyledCmsGrid, \" {      \\n      position: fixed;\\n      z-index: 99;\\n      width: 100%;\\n      top: 0px;  \\n      left: 0px;\\n      \").concat(shadowBottom, \"\\n    }  \\n  \");\n}, function (_ref2) {\n  var background = _ref2.background;\n  return background && \"\\n    > div {\\n      background \".concat(background, \";\\n    }\\n    \\n  \");\n});\nexport default function StickyHeader(_ref3) {\n  var _ref$current;\n\n  var children = _ref3.children,\n      background = _ref3.background,\n      padding = _ref3.padding;\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      sticky = _useState[0],\n      setSticky = _useState[1];\n\n  var handleScroll = function handleScroll() {\n    document.addEventListener('scroll', function () {\n      if (ref !== null && ref !== void 0 && ref.current) {\n        setSticky(ref.current.getBoundingClientRect().top < 0);\n      }\n    });\n  };\n\n  useEffect(function () {\n    handleScroll();\n  }, []);\n  return __jsx(StickHeaderWrapper, {\n    height: (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.clientHeight,\n    background: background,\n    sticky: sticky,\n    ref: ref\n  }, __jsx(StyledCmsGrid, sticky ? {\n    padding: padding\n  } : {}, children));\n}","map":null,"metadata":{},"sourceType":"module"}