{"ast":null,"code":"import { graphql } from 'graphql';\nimport { fastClone } from '../helpers/common';\nimport { configuredStore } from '../server/store';\nimport { productResolver, cmsResolver } from '../graphQL/resolvers';\n\nfunction getQqlString(doc) {\n  var _doc$loc, _doc$loc$source;\n\n  return (doc === null || doc === void 0 ? void 0 : (_doc$loc = doc.loc) === null || _doc$loc === void 0 ? void 0 : (_doc$loc$source = _doc$loc.source) === null || _doc$loc$source === void 0 ? void 0 : _doc$loc$source.body) || null;\n}\n\nexport async function cmsController(query, schema) {\n  const gqlQuery = getQqlString(query);\n  const result = await graphql(schema, gqlQuery, cmsResolver());\n  return result.data;\n}\nexport async function storeController(query, schema, clone = true, variables) {\n  const gqlQuery = getQqlString(query);\n  const affiliateData = configuredStore;\n  const result = await graphql(schema, gqlQuery, productResolver(affiliateData), null, variables);\n  if (result.errors) console.log(result.errors[0]);\n  return clone ? fastClone(result.data) : result.data;\n}","map":null,"metadata":{},"sourceType":"module"}