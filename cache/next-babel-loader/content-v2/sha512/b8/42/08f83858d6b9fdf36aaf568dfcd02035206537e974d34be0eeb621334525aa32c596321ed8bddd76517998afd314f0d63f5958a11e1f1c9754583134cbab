{"ast":null,"code":"import { actionTypes } from '../root-actions';\nimport produce from 'immer';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport initialBuildTimeState from '../initialBuildTimeState';\nexport default function buildTimeState(state = initialBuildTimeState, action) {\n  return produce(state, draft => {\n    var _action$brands;\n\n    switch (action.type) {\n      case HYDRATE:\n        {\n          if (!action.payload) return draft;\n          const {\n            buildTimeState: {\n              navigationData,\n              cmsData,\n              productData,\n              productFilters,\n              productSearchValues,\n              brands\n            }\n          } = action.payload;\n          draft.navigationData = navigationData;\n          draft.cmsData = cmsData;\n          draft.productData = productData;\n          draft.productFilters = productFilters;\n          draft.productSearchValues = productSearchValues;\n          draft.brands = brands;\n          return draft;\n        }\n\n      case actionTypes.SET_CMS_DATA:\n        draft.cmsData = action.cmsData;\n        return draft;\n\n      case actionTypes.SET_NAVIGATION_DATA:\n        draft.navigationData = action.navigationData;\n        return draft;\n\n      case actionTypes.SET_PRODUCT_DATA:\n        draft.productData = action.productData;\n        draft.productFilters = action.productFilters;\n        draft.productSearchValues = action.productSearchValues;\n        return draft;\n\n      case actionTypes.SET_BRAND_LIST:\n        draft.brands = ((_action$brands = action.brands) === null || _action$brands === void 0 ? void 0 : _action$brands.brandList) || [];\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}