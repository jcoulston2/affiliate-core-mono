{"ast":null,"code":"import _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport rootReducer from './reducer/root-reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-sagas';\nimport throttle from 'lodash/throttle';\nimport { persistState } from './subscribers';\nimport { USER_SETTINGS_KEY, WISH_LIST_KEY } from '@constants';\nimport { getLocalStorage } from '@helpers/common';\nimport { createStoreWithPersist } from './helper';\nexport var configureStore = function configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middleWares = [sagaMiddleware];\n  var localStorageKeys = [USER_SETTINGS_KEY, WISH_LIST_KEY].map(function (key) {\n    return getLocalStorage(key);\n  });\n  var store = createStore(rootReducer, createStoreWithPersist.apply(void 0, [initialState].concat(_toConsumableArray(localStorageKeys))), applyMiddleware.apply(void 0, middleWares));\n  store.subscribe(throttle(function () {\n    return persistState(store);\n  }, 1000));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport var wrapper = createWrapper(configureStore, {\n  debug: false\n});","map":null,"metadata":{},"sourceType":"module"}