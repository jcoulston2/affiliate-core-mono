{"ast":null,"code":"import _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Link from 'next/link';\nimport Typography from '@units/Typography';\nimport Card from '@units/Card';\nimport { SubNavTitle, MobileMenuItem, MobileLink } from './styles';\nimport { NavCard } from '../MobileNavigation/styles';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { PLP_PATH } from '@constants';\nexport default function SubNavContainers(_ref) {\n  var title = _ref.title,\n      titleIndex = _ref.titleIndex,\n      subNav = _ref.subNav,\n      setNavigationExpandedLevel = _ref.setNavigationExpandedLevel,\n      setMobileNavigationActiveTitleIndex = _ref.setMobileNavigationActiveTitleIndex,\n      mobileNavigationActiveTitleIndex = _ref.mobileNavigationActiveTitleIndex,\n      navigationExpandedLevel = _ref.navigationExpandedLevel,\n      setNavigationBreadCrumb = _ref.setNavigationBreadCrumb,\n      mobileFirstLevelNavLink = _ref.mobileFirstLevelNavLink,\n      mobileSecondLevelNavLink = _ref.mobileSecondLevelNavLink,\n      mobileNavHorizontalLayers = _ref.mobileNavHorizontalLayers,\n      mobileNavCardPadding = _ref.mobileNavCardPadding,\n      togglMobileNav = _ref.togglMobileNav,\n      resetProductFeeds = _ref.resetProductFeeds;\n\n  var handleNavExpanded = function handleNavExpanded(activeIndex, level, title) {\n    setNavigationBreadCrumb(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, level, title));\n    });\n    setNavigationExpandedLevel(level);\n    setMobileNavigationActiveTitleIndex(activeIndex);\n  };\n\n  var isThirdLevel = navigationExpandedLevel === 2;\n  var isSecondLevel = navigationExpandedLevel === 1;\n  var isActive = mobileNavigationActiveTitleIndex === titleIndex;\n  var isThreeLayeredMobileNav = mobileNavHorizontalLayers === 3;\n  var isLastLayerActive = isThreeLayeredMobileNav ? isThirdLevel : isSecondLevel;\n\n  var handleNavItemClick = function handleNavItemClick() {\n    togglMobileNav(false);\n    resetProductFeeds();\n  }; // First / top level\n\n\n  var renderFirstLevelNav = function renderFirstLevelNav() {\n    return __jsx(NavCard, {\n      item: true,\n      xs: 4,\n      onClick: function onClick() {\n        return handleNavExpanded(titleIndex, 1, title);\n      }\n    }, __jsx(Card, {\n      padding: mobileNavCardPadding\n    }, __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"space-between\"\n    }, __jsx(Typography, {\n      tag: \"h3\",\n      typeStyles: mobileFirstLevelNavLink\n    }, title), __jsx(ChevronRightIcon, null))));\n  }; // Labels\n\n\n  var renderLabels = function renderLabels(title) {\n    return __jsx(Grid, {\n      item: true,\n      xs: true\n    }, __jsx(NavCard, {\n      onClick: function onClick() {\n        return handleNavExpanded(titleIndex, 2, title);\n      }\n    }, isSecondLevel && __jsx(Card, {\n      padding: mobileNavCardPadding\n    }, __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"space-between\"\n    }, __jsx(Typography, {\n      tag: \"h3\",\n      typeStyles: mobileSecondLevelNavLink\n    }, title), __jsx(ChevronRightIcon, null)))));\n  }; // Nav links\n\n\n  var renderNavLinks = function renderNavLinks(subNavItems, title) {\n    return __jsx(Grid, {\n      item: true,\n      xs: true\n    }, !isThreeLayeredMobileNav && __jsx(MobileMenuItem, null, __jsx(Typography, {\n      tag: \"h3\",\n      typeStyles: mobileSecondLevelNavLink\n    }, title)), isLastLayerActive && subNavItems.map(function (_ref2, index) {\n      var title = _ref2.title,\n          link = _ref2.link;\n      return __jsx(React.Fragment, null, __jsx(MobileMenuItem, {\n        key: \"StyledMenuItem\".concat(index)\n      }, __jsx(MobileLink, {\n        onClick: handleNavItemClick\n      }, __jsx(Link, {\n        href: \"/\".concat(PLP_PATH, \"/[...slug]\"),\n        as: \"/\".concat(PLP_PATH).concat(link)\n      }, title))), __jsx(Divider, null));\n    }));\n  };\n\n  return __jsx(React.Fragment, null, (!navigationExpandedLevel || isActive) && __jsx(SubNavTitle, {\n    container: true,\n    item: true\n  }, renderFirstLevelNav(), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 8,\n    direction: \"column\"\n  }, subNav.map(function (_ref3, index) {\n    var title = _ref3.title,\n        subNavItems = _ref3.subNavItems;\n    return __jsx(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      key: index\n    }, isThreeLayeredMobileNav && renderLabels(title), renderNavLinks(subNavItems, title));\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}