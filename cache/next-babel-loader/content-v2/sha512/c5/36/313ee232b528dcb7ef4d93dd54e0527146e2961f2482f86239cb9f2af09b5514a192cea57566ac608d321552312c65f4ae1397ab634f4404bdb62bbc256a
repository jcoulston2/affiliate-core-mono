{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport serverSideRequests from '../../apiUtil/requests/serverSideRequests';\nimport { getNavigationProps } from '@helpers/page';\nimport ListingContent from '@containers/ListingContent';\nimport { actions } from '../../app/root-actions';\nimport { wrapper } from '../../app/store';\nimport PageSkeleton from '@layouts';\nimport { getSearchValues, getFilterValuesFromSearchUrl } from '@helpers/page';\n\nconst SearchPage = () => {\n  return __jsx(PageSkeleton, null, __jsx(ListingContent, null));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req,\n  query\n}) => {\n  const homeCmsQuery = 'listingContent, productViewContent';\n  const searchValues = getSearchValues(query || req.query, req);\n  const searchFilters = getFilterValuesFromSearchUrl(query || req.query);\n  const productCountStart = 0;\n  const productCountEnd = 100;\n  const [navData, cmsData, productData, brandList] = await Promise.all([await serverSideRequests.getNavigationData(), await serverSideRequests.getCmsContent(homeCmsQuery), await serverSideRequests.getSearchData(searchValues, productCountStart, productCountEnd, searchFilters), await serverSideRequests.getBrandList()]);\n  const navigationProps = getNavigationProps(navData);\n  store.dispatch(actions.setNavigationData(navigationProps.affiliateData));\n  store.dispatch(actions.setProductData(productData.searchData, searchFilters, searchValues));\n  store.dispatch(actions.setCmsData(cmsData));\n  store.dispatch(actions.setBrandList(brandList));\n});\nexport default SearchPage;","map":null,"metadata":{},"sourceType":"module"}