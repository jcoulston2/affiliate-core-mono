{"ast":null,"code":"import _toConsumableArray from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport produce from 'immer';\nimport initalState from './initalState';\nimport { actionTypes } from './actions';\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case actionTypes.POPULATE_PRODUCT_VIEW_SUCCESS:\n        draft.productViewData = action.productViewData;\n        return draft;\n\n      case actionTypes.OPEN_PRODUCT_DETAIL_VIEW_SUCCESS:\n        draft.productViewOpen = !draft.productViewOpen;\n        return draft;\n\n      case actionTypes.HAS_FILTERS_SET_FROM_CLIENT_SUCCESS:\n        draft.hasFiltersSetFromClient = action.status;\n        return draft;\n\n      case actionTypes.SET_LOADING_SUCCESS:\n        draft.loading = action.status;\n        return draft;\n\n      case actionTypes.FETCH_PRODUCTS_LISTING_SUCCESS:\n        draft.fetchedProducts = action.incrementExistingProducts ? [].concat(_toConsumableArray(draft.fetchedProducts), _toConsumableArray(action.products)) : action.products;\n        draft.productCountStart = action.productCountStart;\n        draft.productCountEnd = action.productCountEnd;\n        draft.totalProductsInCategory = action.totalProductsInCategory;\n        return draft;\n\n      case actionTypes.CLEAR_FETCHED_PRODUCTS_SUCCESS:\n        draft.fetchedProducts = [];\n        draft.totalProductsInCategory = 0;\n        draft.hasFiltersSetFromClient = false;\n        return draft;\n\n      default:\n        return state;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}