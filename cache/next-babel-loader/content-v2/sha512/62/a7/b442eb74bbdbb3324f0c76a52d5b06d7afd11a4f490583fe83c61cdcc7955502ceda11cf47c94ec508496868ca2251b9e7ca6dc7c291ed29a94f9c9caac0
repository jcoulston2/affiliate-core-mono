{"ast":null,"code":"import { urlCase, isServer } from '@helpers/common';\nexport function structureNavigationData(sectionItem) {\n  return sectionItem.data.map(({\n    label\n  }) => {\n    return {\n      title: label,\n      subNavItems: sectionItem.data.filter(catlevel => catlevel.label === label).map(({\n        category\n      }) => ({\n        title: category,\n        link: urlCase(`/${sectionItem.section}/${category}`)\n      }))\n    };\n  });\n}\nexport function normalizeNavigationData(structuredCatLevelData) {\n  return structuredCatLevelData.reduce((acc, current) => {\n    return [...acc, acc && acc.some(has => has.title === current.title) ? null : current];\n  }, []).filter(notNull => notNull);\n}\nexport function getNavigationProps(rawApiResponse) {\n  if (!rawApiResponse) return null;\n  const {\n    affiliateData\n  } = rawApiResponse;\n  const normalizedNavData = affiliateData.map(sectionItem => {\n    const structuredCatLevelData = structureNavigationData(sectionItem);\n    const normalizedCatLevelData = normalizeNavigationData(structuredCatLevelData);\n    return {\n      title: sectionItem.section,\n      link: `/${sectionItem.section}`,\n      subNav: normalizedCatLevelData\n    };\n  });\n  return {\n    affiliateData: normalizedNavData\n  };\n}\nexport function pushState(state, title, url) {\n  var _window$history;\n\n  if ((_window$history = window.history) !== null && _window$history !== void 0 && _window$history.pushState) {\n    window.history.pushState(state, state, url);\n  }\n}\nconst pushDefault = !isServer() && window.onpopstate;\nexport function defatulPopState() {\n  if (!isServer() && window.onpopstate) {\n    window.onpopstate = pushDefault;\n  }\n}\nexport function fixPopState() {\n  if (!isServer() && window.history && window.onpopstate) {\n    window.history.pushState(null, null, location.href);\n    window.history.back();\n    window.history.forward();\n\n    window.onpopstate = function () {\n      history.go(1);\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}