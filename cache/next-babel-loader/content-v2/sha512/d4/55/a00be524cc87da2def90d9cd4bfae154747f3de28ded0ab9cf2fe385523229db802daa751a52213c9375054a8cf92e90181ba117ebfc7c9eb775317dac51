{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@units/Typography';\nimport styled from 'styled-components';\nimport Copy from '@units/Copy';\nimport Chip from '@units/Chip';\nimport { useTheme } from '@hooks';\nexport const VariantImg = styled(Grid).withConfig({\n  displayName: \"ProductVariants__VariantImg\",\n  componentId: \"sy9wzu-0\"\n})([\"&&{width:\", \"px;height:\", \"px;margin:0 5px;border-radius:50%;overflow:hidden;background:#f3f3f3;}\"], ({\n  dimensions\n}) => (dimensions === null || dimensions === void 0 ? void 0 : dimensions.w) || '20', ({\n  dimensions\n}) => (dimensions === null || dimensions === void 0 ? void 0 : dimensions.h) || '20');\nexport const VariantDataItem = styled.span.withConfig({\n  displayName: \"ProductVariants__VariantDataItem\",\n  componentId: \"sy9wzu-1\"\n})([\"margin:0 5px;opacity:\", \";margin-left:\", \";\"], ({\n  isSoldOut\n}) => isSoldOut ? '0.2' : '1', ({\n  index\n}) => index === 0 ? '0px' : '5px');\nexport const ProductLabelTitle = styled(Grid).withConfig({\n  displayName: \"ProductVariants__ProductLabelTitle\",\n  componentId: \"sy9wzu-2\"\n})([\"&&{margin-right:0.5em;}\"]);\nexport default function ProductVariant({\n  commonLabel,\n  variants,\n  productLink,\n  moreInfoAtStoreCopy,\n  moreInfoAtStoreText\n}) {\n  const {\n    brandThemeColors: {\n      tertiaryColor,\n      secondaryColor\n    }\n  } = useTheme();\n  const hasVariantData = variants.some(({\n    data\n  }) => data === null || data === void 0 ? void 0 : data.length);\n  return __jsx(Grid, {\n    item: true\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\"\n  }, __jsx(ProductLabelTitle, {\n    item: true\n  }, __jsx(Typography, {\n    tag: \"h4\",\n    typeStyles: commonLabel\n  }, __jsx(Copy, {\n    text: 'More from the store'\n  }))), variants.map(({\n    variantText,\n    data\n  }, index) => (data === null || data === void 0 ? void 0 : data.length) && __jsx(Chip, {\n    key: index,\n    label: variantText,\n    size: \"small\",\n    bgColor: tertiaryColor || secondaryColor\n  })), !hasVariantData && ['sizes', 'colours'].map((variantText, index) => __jsx(Chip, {\n    key: index,\n    label: variantText,\n    size: \"small\",\n    bgColor: tertiaryColor || secondaryColor\n  }))), __jsx(Grid, {\n    container: true,\n    alignItems: \"center\"\n  }, __jsx(Typography, {\n    tag: \"p\",\n    typeStyles: moreInfoAtStoreCopy\n  }, __jsx(\"a\", {\n    href: productLink,\n    target: \"_blank\",\n    without: true,\n    rel: \"nofollow\",\n    prefetch: false\n  }, __jsx(Copy, {\n    text: moreInfoAtStoreText\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}