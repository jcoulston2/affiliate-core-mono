{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @info This is an alternative to using useCms hook, and can be used outside React components if needed.\n * Uing this requires passing in the cmsContext as a param e.g.\n *\n * const cmsContext = useCmsContext();\n * const cmsContent = getCmsContent(cmsContext, 'theme');\n *\n * When linking to the cms it's preferred using the hook.\n *\n */\nexport function getCmsContent(context, cmsContainer, cmsContent) {\n  const content = context && context[cmsContainer];\n\n  if (!cmsContent) {\n    return content;\n  } else {\n    return content && content[cmsContent];\n  }\n}\nexport function getCopy(copy, toReplace) {\n  return copy && copy.replace(/\\{\\}/g, toReplace || '');\n}\nexport function setCommonCmsAttr(value) {\n  return ['mobile', 'tablet', 'desktop'].reduce((acc, cur) => {\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      [cur]: value\n    });\n  }, {});\n}\nexport async function injectLocalCms() {\n  const {\n    cms\n  } = await import('@affiliate-master/config');\n  return cms;\n}","map":null,"metadata":{},"sourceType":"module"}