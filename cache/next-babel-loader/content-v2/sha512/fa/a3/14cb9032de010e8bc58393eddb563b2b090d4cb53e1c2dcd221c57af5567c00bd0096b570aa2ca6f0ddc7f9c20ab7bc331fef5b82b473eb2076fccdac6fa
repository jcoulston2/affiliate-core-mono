{"ast":null,"code":"import _extends from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/justincoulston/Desktop/affilaite-core-mono/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Navigation from '@modules/Navigation';\nimport BenefitBar from '@modules/BenefitBar';\nimport { connect } from 'react-redux';\nimport { actions as headerActions } from './actions';\nimport { actions as listingActions } from '@containers/ListingContent/actions';\nimport { useCms } from '@hooks';\nimport { HeaderWrapper } from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nvar Header = function Header(_ref) {\n  var navigationData = _ref.navigationData,\n      mobileMenuOpen = _ref.mobileMenuOpen,\n      togglMobileNav = _ref.togglMobileNav,\n      resetProductFeeds = _ref.resetProductFeeds,\n      topLevelAppState = _objectWithoutProperties(_ref, [\"navigationData\", \"mobileMenuOpen\", \"togglMobileNav\", \"resetProductFeeds\"]);\n\n  // TODO: start to migrate CMS config further down the component instead of passing props down\n  var _useCms = useCms('header'),\n      benefitBarConfig = _useCms.benefitBar,\n      navigationConfig = _useCms.navigation,\n      headerBarConfig = _useCms.headerBar;\n\n  var muiTheme = useTheme();\n  var headerSeparatorStyle = headerBarConfig.headerSeparatorStyle,\n      headerSeparatorColor = headerBarConfig.headerSeparatorColor;\n  var isDesktop = useMediaQuery(muiTheme.breakpoints.up('lg'));\n\n  var renderAdaptiveNavigation = function renderAdaptiveNavigation(device) {\n    var adaptiveNavigationProp = '';\n    if (device === 'mobile') adaptiveNavigationProp = 'isMobileNavigation';\n    if (device === 'desktop') adaptiveNavigationProp = 'isDesktopNavigation';\n    return __jsx(Navigation, _extends({}, _defineProperty({}, adaptiveNavigationProp, true), {\n      navigationData: navigationData,\n      togglMobileNav: togglMobileNav,\n      mobileMenuOpen: mobileMenuOpen,\n      resetProductFeeds: resetProductFeeds\n    }, navigationConfig));\n  };\n\n  return __jsx(HeaderWrapper, {\n    headerSeparatorStyle: headerSeparatorStyle,\n    headerSeparatorColor: headerSeparatorColor\n  }, benefitBarConfig.showBenefitbar && __jsx(BenefitBar, _extends({}, benefitBarConfig, topLevelAppState)), renderAdaptiveNavigation(isDesktop ? 'desktop' : 'mobile'));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    togglMobileNav: function togglMobileNav(flag) {\n      return dispatch(headerActions.togglMobileNav(flag));\n    },\n    resetProductFeeds: function resetProductFeeds() {\n      return dispatch(listingActions.clearClientFetchedProducts());\n    }\n  };\n}\n\nexport default connect(function (state) {\n  var globalAppState = state.globalAppState,\n      headerState = state.headerState,\n      buildTimeState = state.buildTimeState;\n  var clientWidth = globalAppState.clientWidth;\n  var navigationData = buildTimeState.navigationData;\n  var mobileMenuOpen = headerState.mobileMenuOpen;\n  return {\n    clientWidth: clientWidth,\n    navigationData: navigationData,\n    mobileMenuOpen: mobileMenuOpen\n  };\n}, mapDispatchToProps)(Header);","map":null,"metadata":{},"sourceType":"module"}